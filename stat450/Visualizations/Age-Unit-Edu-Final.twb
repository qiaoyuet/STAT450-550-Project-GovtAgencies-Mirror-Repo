<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0210.2209                               -->
<workbook original-version='10.5' source-build='10.5.1 (10500.18.0210.2209)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column alias='GDP Per Capita' caption='Econ Variabe' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;GDPPC&quot;'>
        <calculation class='tableau' formula='&quot;GDPPC&quot;' />
        <aliases>
          <alias key='&quot;AboveSize&quot;' value='# Above Size Industrial' />
          <alias key='&quot;Emp&quot;' value='Public Employment' />
          <alias key='&quot;GDPPC&quot;' value='GDP Per Capita' />
        </aliases>
        <members>
          <member alias='GDP Per Capita' value='&quot;GDPPC&quot;' />
          <member alias='Public Employment' value='&quot;Emp&quot;' />
          <member alias='# Above Size Industrial' value='&quot;AboveSize&quot;' />
          <member value='&quot;None&quot;' />
        </members>
      </column>
      <column caption='Compare LTB and STB' datatype='boolean' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='true'>
        <calculation class='tableau' formula='true' />
        <members>
          <member value='true' />
          <member value='false' />
        </members>
      </column>
    </datasource>
    <datasource caption='Both Age' inline='true' name='federated.0la6che1b4j6f619vbelz1xgjqqg' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Both Age' name='textscan.08gtduw0dn69oq17h8m201smva26'>
            <connection class='textscan' directory='C:/Users/Katie/Desktop/STAT-450/Final Data' filename='AgeforTableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.08gtduw0dn69oq17h8m201smva26' name='AgeforTableau.csv' table='[AgeforTableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Province' ordinal='1' />
            <column datatype='string' name='Bureau' ordinal='2' />
            <column datatype='string' name='Age' ordinal='3' />
            <column datatype='integer' name='Number of Staff' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AgeforTableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[AgeforTableau.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[AgeforTableau.csv]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bureau</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Bureau]</local-name>
            <parent-name>[AgeforTableau.csv]</parent-name>
            <remote-alias>Bureau</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[AgeforTableau.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Staff</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Staff]</local-name>
            <parent-name>[AgeforTableau.csv]</parent-name>
            <remote-alias>Number of Staff</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Age]' role='dimension' type='nominal' />
      <column caption='GDPpCap' datatype='string' name='[Calculation_483222206839922688]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[Province]=&apos;Tianjing&apos; OR [Province]=&apos;Beijing&apos; &#10;    OR [Province]=&apos;Shanghai&apos; &#10;THEN &apos;High&apos;&#10;ELSEIF[Province]=&apos;Jiangsu&apos; OR [Province]=&apos;Inner Mongolia&apos; &#10;    OR [Province]=&apos;Zhejiang&apos; OR [Province]=&apos;Liaoning&apos; &#10;    OR [Province]=&apos;Guangdong&apos; OR [Province]=&apos;Fujian&apos;&#10;    OR [Province]=&apos;Shandong&apos; &#10;THEN &apos;Med&apos;&#10;ELSE &apos;Low&apos;&#10;END' />
      </column>
      <column caption='PubExpend' datatype='string' name='[Calculation_483222206853103619]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[Province]=&apos;Guangdong&apos; THEN &apos;High&apos;&#10;ELSEIF[Province]=&apos;Qinghai&apos; OR [Province]=&apos;Hainan&apos;&#10;    OR[Province]=&apos;Tibet&apos; OR [Province]=&apos;Ningxia&apos;&#10;THEN &apos;Low&apos;&#10;ELSE &apos;Med&apos;&#10;END' />
      </column>
      <column caption='AboSizeInd' datatype='string' name='[Calculation_483222206861496324]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[Province]=&apos;Zhejiang&apos; OR [Province]=&apos;Guangdong&apos;&#10;    OR[Province]=&apos;Shandong&apos;&#10;THEN &apos;High&apos;&#10;ELSEIF[Province]=&apos;Henan&apos; OR [Province]=&apos;Liaoning&apos;&#10;    OR[Province]=&apos;Fujian&apos; OR [Province]=&apos;Anhui&apos;&#10;    OR[Province]=&apos;Hubei&apos; OR [Province]=&apos;Hebei&apos;&#10;    OR[Province]=&apos;Sichuan&apos; OR [Province]=&apos;Shanghai&apos;&#10;THEN &apos;Med&apos;&#10;ELSE &apos;Low&apos;&#10;END' />
      </column>
      <column caption='Econ Grouping' datatype='string' name='[Calculation_959548236136923137]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [Parameters].[Parameter 1] == &quot;AboveSize&quot; Then [Calculation_483222206861496324]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &quot;GDPPC&quot; Then [Calculation_483222206839922688]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &quot;Exp&quot; Then [Calculation_483222206853103619]&#13;&#10;END' />
      </column>
      <column caption='Bureau Grouping' datatype='string' name='[Calculation_959548236140593154]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [Parameters].[Parameter 2]==TRUE Then [Bureau] END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Age]' derivation='None' name='[none:Age:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_483222206839922688]' derivation='None' name='[none:Calculation_483222206839922688:nk]' pivot='key' type='nominal' />
      <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.575163' measure-ordering='alphabetic' measure-percentage='0.295752' parameter-percentage='0.129085' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Province:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Guangxi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liaoning&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chongqing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shandong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Heilongjiang&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yunnan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guizhou&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tibet&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fujian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shanghai&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jiangxi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Administration&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ningxia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inner Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gansu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shanxi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Henan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zhejiang&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hubei&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;长春&#13;&#10;税院&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jiangsu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jilin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hainan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Xinjiang&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guangdong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sichuan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anhui&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Qinghai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hunan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hebei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yangzhou&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shaanxi&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_483222206839922688:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;High GDPpercap&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medium GDPpercap&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Low GDPpercap&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Age:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;&lt;30&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;46-50&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;41-45&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;55-59&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;36-40&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;51-54&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;30-35&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;&gt;60&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='GDP Per Capita' caption='Econ Variabe' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;GDPPC&quot;'>
          <calculation class='tableau' formula='&quot;GDPPC&quot;' />
          <aliases>
            <alias key='&quot;AboveSize&quot;' value='# Above Size Industrial' />
            <alias key='&quot;Emp&quot;' value='Public Employment' />
            <alias key='&quot;GDPPC&quot;' value='GDP Per Capita' />
          </aliases>
        </column>
        <column caption='Compare LTB and STB' datatype='boolean' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='AgeEconforTableau' inline='true' name='federated.1nwoixm1d43ddn1303gti1tjs8z6' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='AgeEconforTableau' name='textscan.1qcq6zc0afzrb81gt5ukw1bznrae'>
            <connection class='textscan' directory='C:/Users/Katie/Desktop/STAT-450/Final Data' filename='AgeEconforTableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1qcq6zc0afzrb81gt5ukw1bznrae' name='AgeEconforTableau.csv' table='[AgeEconforTableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Province' ordinal='2' />
            <column datatype='integer' name='Total..formal.employees' ordinal='3' />
            <column datatype='integer' name='age.30.or..below' ordinal='4' />
            <column datatype='integer' name='X30.35' ordinal='5' />
            <column datatype='integer' name='X36.40' ordinal='6' />
            <column datatype='integer' name='X41.45' ordinal='7' />
            <column datatype='integer' name='X46.50' ordinal='8' />
            <column datatype='integer' name='X51.54' ordinal='9' />
            <column datatype='integer' name='X55.59' ordinal='10' />
            <column datatype='string' name='X60.or.above' ordinal='11' />
            <column datatype='string' name='FDI' ordinal='12' />
            <column datatype='string' name='urbanarea' ordinal='13' />
            <column datatype='integer' name='No.of.above.size.industrial.companies' ordinal='14' />
            <column datatype='real' name='public.expenditure' ordinal='15' />
            <column datatype='string' name='public..employment.thousands' ordinal='16' />
            <column datatype='real' name='GDP' ordinal='17' />
            <column datatype='real' name='Population' ordinal='18' />
            <column datatype='string' name='RatioofUrbanPopulation' ordinal='19' />
            <column datatype='real' name='GDPperCapita' ordinal='20' />
            <column datatype='integer' name='Areasquarekm' ordinal='21' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total..formal.employees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total..formal.employees]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>Total..formal.employees</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age.30.or..below</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age.30.or..below]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>age.30.or..below</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X30.35</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X30.35]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>X30.35</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X36.40</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X36.40]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>X36.40</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X41.45</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X41.45]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>X41.45</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X46.50</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X46.50]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>X46.50</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X51.54</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X51.54]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>X51.54</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X55.59</remote-name>
            <remote-type>20</remote-type>
            <local-name>[X55.59]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>X55.59</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X60.or.above</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X60.or.above]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>X60.or.above</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FDI</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FDI]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>FDI</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urbanarea</remote-name>
            <remote-type>129</remote-type>
            <local-name>[urbanarea]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>urbanarea</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No.of.above.size.industrial.companies</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No.of.above.size.industrial.companies]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>No.of.above.size.industrial.companies</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>public.expenditure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[public.expenditure]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>public.expenditure</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>public..employment.thousands</remote-name>
            <remote-type>129</remote-type>
            <local-name>[public..employment.thousands]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>public..employment.thousands</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatioofUrbanPopulation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RatioofUrbanPopulation]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>RatioofUrbanPopulation</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDPperCapita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDPperCapita]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>GDPperCapita</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Areasquarekm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Areasquarekm]</local-name>
            <parent-name>[AgeEconforTableau.csv]</parent-name>
            <remote-alias>Areasquarekm</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Areasquarekm]' role='measure' type='quantitative' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
      <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Population]' role='measure' type='quantitative' />
      <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Ratioof Urban Population' datatype='string' name='[RatioofUrbanPopulation]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Total..formal.employees]' role='measure' type='quantitative' />
      <column datatype='integer' name='[X30.35]' role='measure' type='quantitative' />
      <column datatype='integer' name='[X36.40]' role='measure' type='quantitative' />
      <column datatype='integer' name='[X41.45]' role='measure' type='quantitative' />
      <column datatype='integer' name='[X46.50]' role='measure' type='quantitative' />
      <column datatype='integer' name='[X51.54]' role='measure' type='quantitative' />
      <column datatype='integer' name='[X55.59]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Age.30.Or..Below' datatype='integer' name='[age.30.or..below]' role='measure' type='quantitative' />
      <column caption='Public..Employment.Thousands' datatype='string' name='[public..employment.thousands]' role='dimension' type='nominal' />
      <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
      <column caption='Urbanarea' datatype='string' name='[urbanarea]' role='dimension' type='nominal' />
      <column-instance column='[Areasquarekm]' derivation='Sum' name='[sum:Areasquarekm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total..formal.employees]' derivation='Sum' name='[sum:Total..formal.employees:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X30.35]' derivation='Sum' name='[sum:X30.35:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X36.40]' derivation='Sum' name='[sum:X36.40:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X41.45]' derivation='Sum' name='[sum:X41.45:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X46.50]' derivation='Sum' name='[sum:X46.50:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X51.54]' derivation='Sum' name='[sum:X51.54:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X55.59]' derivation='Sum' name='[sum:X55.59:qk]' pivot='key' type='quantitative' />
      <column-instance column='[age.30.or..below]' derivation='Sum' name='[sum:age.30.or..below:qk]' pivot='key' type='quantitative' />
      <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.313208' measure-ordering='alphabetic' measure-percentage='0.624528' parameter-percentage='0.0622642' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:Total..formal.employees:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X46.50:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X41.45:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:age.30.or..below:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDP:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X51.54:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X36.40:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X30.35:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X55.59:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:Areasquarekm:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='UnitforTableau' inline='true' name='federated.0jin2qk0k0oi46188ss6y1tseqq2' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='UnitforTableau' name='textscan.1lu7wvt1nllguk14zfum80i6tjdi'>
            <connection class='textscan' directory='C:/Users/Castaire/Desktop/data/Final Data/tax_tableau_data' filename='UnitforTableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1lu7wvt1nllguk14zfum80i6tjdi' name='UnitforTableau.csv' table='[UnitforTableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Province' ordinal='1' />
            <column datatype='string' name='Bureau' ordinal='2' />
            <column datatype='string' name='Work Unit' ordinal='3' />
            <column datatype='real' name='Number of Staff' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[UnitforTableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[UnitforTableau.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[UnitforTableau.csv]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bureau</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Bureau]</local-name>
            <parent-name>[UnitforTableau.csv]</parent-name>
            <remote-alias>Bureau</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Work Unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Work Unit]</local-name>
            <parent-name>[UnitforTableau.csv]</parent-name>
            <remote-alias>Work Unit</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Staff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of Staff]</local-name>
            <parent-name>[UnitforTableau.csv]</parent-name>
            <remote-alias>Number of Staff</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='GDPpCap' datatype='string' name='[Calculation_483222206874984453]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[Province]=&apos;Tianjing&apos; OR [Province]=&apos;Beijing&apos; &#10;    OR [Province]=&apos;Shanghai&apos; &#10;THEN &apos;High GDPpercap&apos;&#10;ELSEIF[Province]=&apos;Jiangsu&apos; OR [Province]=&apos;Inner Mongolia&apos; &#10;    OR [Province]=&apos;Zhejiang&apos; OR [Province]=&apos;Liaoning&apos; &#10;    OR [Province]=&apos;Guangdong&apos; OR [Province]=&apos;Fujian&apos;&#10;    OR [Province]=&apos;Shandong&apos; &#10;THEN &apos;Medium GDPpercap&apos;&#10;ELSE &apos;Low GDPpercap&apos;&#10;END' />
      </column>
      <column caption='AboSizeInd' datatype='string' name='[Calculation_483222206875598854]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[Province]=&apos;Zhejiang&apos; OR [Province]=&apos;Guangdong&apos;&#10;    OR[Province]=&apos;Shandong&apos;&#10;THEN &apos;High AboveSizeInd&apos;&#10;ELSEIF[Province]=&apos;Henan&apos; OR [Province]=&apos;Liaoning&apos;&#10;    OR[Province]=&apos;Fujian&apos; OR [Province]=&apos;Anhui&apos;&#10;    OR[Province]=&apos;Hubei&apos; OR [Province]=&apos;Hebei&apos;&#10;    OR[Province]=&apos;Sichuan&apos; OR [Province]=&apos;Shanghai&apos;&#10;THEN &apos;Medium AboveSizeInd&apos;&#10;ELSE &apos;Low AboveSizeInd&apos;&#10;END' />
      </column>
      <column caption='PubEmp' datatype='string' name='[Calculation_483222206875926535]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[Province]=&apos;Sichuan&apos; OR [Province]=&apos;Shandong&apos;&#10;    OR[Province]=&apos;Hebei&apos; OR[Province]=&apos;Hunan&apos;&#10;THEN &apos;High PubEmp&apos;&#10;ELSEIF[Province]=&apos;Chongqing&apos; OR [Province]=&apos;Shanghai&apos; &#10;    OR[Province]=&apos;Tianjin&apos; OR [Province]=&apos;Hainan&apos;&#10;    OR[Province]=&apos;Ningxia&apos; OR [Province]=&apos;Qinghai&apos;&#10;THEN &apos;Low PubEmp&apos;&#10;ELSE &apos;Medium PubEmp&apos;&#10;END' />
      </column>
      <column caption='Econ Grouping' datatype='string' name='[Calculation_959548236143013891]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [Parameters].[Parameter 1] == &quot;Emp&quot; Then [Calculation_483222206875926535]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &quot;GDPPC&quot; THEN [Calculation_483222206874984453]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &quot;AboveSize&quot; Then [Calculation_483222206875598854]&#13;&#10;END' />
      </column>
      <column caption='Bureau Selection' datatype='string' name='[Calculation_959548236151611398]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [Parameters].[Parameter 2]==TRUE Then [Bureau] ELSE &quot;&quot; END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' datatype='real' name='[Number of Staff]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Work Unit]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Work Unit]' derivation='None' name='[none:Work Unit:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.568627' measure-ordering='alphabetic' measure-percentage='0.271242' parameter-percentage='0.160131' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Work Unit:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Admin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tax&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;DAE NonAdmin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DAE Admin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Business&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='GDP Per Capita' caption='Econ Variabe' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;GDPPC&quot;'>
          <calculation class='tableau' formula='&quot;GDPPC&quot;' />
          <aliases>
            <alias key='&quot;AboveSize&quot;' value='# Above Size Industrial' />
            <alias key='&quot;Emp&quot;' value='Public Employment' />
            <alias key='&quot;GDPPC&quot;' value='GDP Per Capita' />
          </aliases>
        </column>
        <column caption='Compare LTB and STB' datatype='boolean' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='EduforTableau' inline='true' name='federated.1ttla7l0ljjhod1f49zqw19ngzfd' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EduforTableau' name='textscan.0sslpsd1x13hdm1azf9tg0hnqxeg'>
            <connection class='textscan' directory='C:/Users/Castaire/Desktop/data/Final Data/tax_tableau_data' filename='EduforTableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0sslpsd1x13hdm1azf9tg0hnqxeg' name='EduforTableau.csv' table='[EduforTableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='Province' ordinal='1' />
            <column datatype='string' name='Bureau' ordinal='2' />
            <column datatype='string' name='Education' ordinal='3' />
            <column datatype='integer' name='Number of Staff' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EduforTableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[EduforTableau.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[EduforTableau.csv]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bureau</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Bureau]</local-name>
            <parent-name>[EduforTableau.csv]</parent-name>
            <remote-alias>Bureau</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Education</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Education]</local-name>
            <parent-name>[EduforTableau.csv]</parent-name>
            <remote-alias>Education</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Staff</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Staff]</local-name>
            <parent-name>[EduforTableau.csv]</parent-name>
            <remote-alias>Number of Staff</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Bureau]' role='dimension' type='nominal' />
      <column caption='GDP-Grouping' datatype='string' name='[Calculation_500181074120835082]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[Province]=&apos;Tianjing&apos; OR [Province]=&apos;Beijing&apos;&#13;&#10;    OR[Province]=&apos;Shanghai&apos;&#13;&#10;THEN &apos;High&apos;&#13;&#10;ELSEIF[Province]=&apos;Jiangsu&apos; OR[Province]=&apos;Inner Mongolia&apos;&#13;&#10;    OR[Province]=&apos;Zhejiang&apos; OR[Province]=&apos;Laoning&apos;&#13;&#10;    OR[Province]=&apos;Guangdong&apos; OR[Province]=&apos;Fujian&apos;&#13;&#10;    OR[Province]=&apos;Shandong&apos;&#13;&#10;THEN &apos;Med&apos;&#13;&#10;ELSE &apos;Low&apos;&#13;&#10;END' />
      </column>
      <column caption='GDPpercap-Grouping' datatype='string' name='[Calculation_500181074120912907]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[Province]=&apos;Tianjing&apos; OR [Province]=&apos;Beijing&apos; &#13;&#10;    OR [Province]=&apos;Shanghai&apos; &#13;&#10;THEN &apos;High&apos;&#13;&#10;ELSEIF[Province]=&apos;Jiangsu&apos; OR [Province]=&apos;Inner Mongolia&apos; &#13;&#10;    OR [Province]=&apos;Zhejiang&apos; OR [Province]=&apos;Liaoning&apos; &#13;&#10;    OR [Province]=&apos;Guangdong&apos; OR [Province]=&apos;Fujian&apos;&#13;&#10;    OR [Province]=&apos;Shandong&apos; &#13;&#10;THEN &apos;Med&apos;&#13;&#10;ELSE &apos;Low&apos;&#13;&#10;END' />
      </column>
      <column caption='AboveSizeInd-Grouping' datatype='string' name='[Calculation_500181074120978444]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[Province]=&apos;Zhejiang&apos; OR [Province]=&apos;Guangdong&apos;&#13;&#10;    OR[Province]=&apos;Shandong&apos;&#13;&#10;THEN &apos;High&apos;&#13;&#10;ELSEIF[Province]=&apos;Henan&apos; OR [Province]=&apos;Liaoning&apos;&#13;&#10;    OR[Province]=&apos;Fujian&apos; OR [Province]=&apos;Anhui&apos;&#13;&#10;    OR[Province]=&apos;Hubei&apos; OR [Province]=&apos;Hebei&apos;&#13;&#10;    OR[Province]=&apos;Sichuan&apos; OR [Province]=&apos;Shanghai&apos;&#13;&#10;THEN &apos;Med&apos;&#13;&#10;ELSE &apos;Low&apos;&#13;&#10;END' />
      </column>
      <column caption='PubExp-Groupings' datatype='string' name='[Calculation_500181074121134093]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[Province]=&apos;Guangdong&apos; THEN &apos;High&apos;&#13;&#10;ELSEIF[Province]=&apos;Qinghai&apos; OR [Province]=&apos;Hainan&apos;&#13;&#10;    OR[Province]=&apos;Tibet&apos; OR [Province]=&apos;Ningxia&apos;&#13;&#10;THEN &apos;Low&apos;&#13;&#10;ELSE &apos;Med&apos;&#13;&#10;END' />
      </column>
      <column caption='Bureau Selection' datatype='string' name='[Calculation_959548236145197060]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [Parameters].[Parameter 2]==TRUE THEN [Bureau] ELSE &quot;&quot; END' />
      </column>
      <column caption='Econ Grouping' datatype='string' name='[Calculation_959548236148543493]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [Parameters].[Parameter 1] == &quot;Emp&quot; Then [Calculation_500181074121134093]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &quot;GDPPC&quot; THEN [Calculation_500181074120912907]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &quot;AboveSize&quot; Then [Calculation_500181074120978444]&#13;&#10;Else &quot;&quot; END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Bureau]' derivation='None' name='[none:Bureau:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.486928' measure-ordering='alphabetic' measure-percentage='0.284314' parameter-percentage='0.228758' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[sum:High.School.and.other.secondary.school:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[sum:Bachelor.s.degree:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[sum:Technical.college:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[sum:post.graduate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[sum:Junior.high.or.lower:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Bureau:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;LTB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;STB&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='GDP Per Capita' caption='Econ Variabe' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;GDPPC&quot;'>
          <calculation class='tableau' formula='&quot;GDPPC&quot;' />
          <aliases>
            <alias key='&quot;AboveSize&quot;' value='# Above Size Industrial' />
            <alias key='&quot;Emp&quot;' value='Public Employment' />
            <alias key='&quot;GDPPC&quot;' value='GDP Per Capita' />
          </aliases>
        </column>
        <column caption='Compare LTB and STB' datatype='boolean' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='true'>
          <calculation class='tableau' formula='true' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='UnitEconforTableau' inline='true' name='federated.0xi4hs80co6bur163yzrf0611ma2' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='UnitEconforTableau' name='textscan.0xrr20a0cgu9fw1b9m9ni1p9xzjc'>
            <connection class='textscan' directory='C:/Users/Castaire/Desktop/data/Final Data/tax_tableau_data' filename='UnitEconforTableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0xrr20a0cgu9fw1b9m9ni1p9xzjc' name='UnitEconforTableau.csv' table='[UnitEconforTableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Province' ordinal='2' />
            <column datatype='integer' name='Administrative.units' ordinal='3' />
            <column datatype='integer' name='Directly..affiliated.admin.units' ordinal='4' />
            <column datatype='integer' name='Tax.Offices..branch.buraus.' ordinal='5' />
            <column datatype='integer' name='Directly.affiliated.non.admin.units' ordinal='6' />
            <column datatype='string' name='Business.units' ordinal='7' />
            <column datatype='string' name='FDI' ordinal='8' />
            <column datatype='string' name='urbanarea' ordinal='9' />
            <column datatype='integer' name='No.of.above.size.industrial.companies' ordinal='10' />
            <column datatype='real' name='public.expenditure' ordinal='11' />
            <column datatype='string' name='public..employment.thousands' ordinal='12' />
            <column datatype='real' name='GDP' ordinal='13' />
            <column datatype='real' name='Population' ordinal='14' />
            <column datatype='string' name='RatioofUrbanPopulation' ordinal='15' />
            <column datatype='real' name='GDPperCapita' ordinal='16' />
            <column datatype='integer' name='Areasquarekm' ordinal='17' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Administrative.units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Administrative.units]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>Administrative.units</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Directly..affiliated.admin.units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Directly..affiliated.admin.units]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>Directly..affiliated.admin.units</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tax.Offices..branch.buraus.</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tax.Offices..branch.buraus.]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>Tax.Offices..branch.buraus.</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Directly.affiliated.non.admin.units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Directly.affiliated.non.admin.units]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>Directly.affiliated.non.admin.units</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business.units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Business.units]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>Business.units</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FDI</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FDI]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>FDI</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urbanarea</remote-name>
            <remote-type>129</remote-type>
            <local-name>[urbanarea]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>urbanarea</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No.of.above.size.industrial.companies</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No.of.above.size.industrial.companies]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>No.of.above.size.industrial.companies</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>public.expenditure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[public.expenditure]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>public.expenditure</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>public..employment.thousands</remote-name>
            <remote-type>129</remote-type>
            <local-name>[public..employment.thousands]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>public..employment.thousands</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatioofUrbanPopulation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RatioofUrbanPopulation]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>RatioofUrbanPopulation</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDPperCapita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDPperCapita]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>GDPperCapita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Areasquarekm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Areasquarekm]</local-name>
            <parent-name>[UnitEconforTableau.csv]</parent-name>
            <remote-alias>Areasquarekm</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Administrative.units]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Directly..affiliated.admin.units]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Directly.affiliated.non.admin.units]' role='measure' type='quantitative' />
      <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
      <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Population]' role='measure' type='quantitative' />
      <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Ratioof Urban Population' datatype='string' name='[RatioofUrbanPopulation]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Tax.Offices..branch.buraus.]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Public..Employment.Thousands' datatype='string' name='[public..employment.thousands]' role='dimension' type='nominal' />
      <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
      <column caption='Urbanarea' datatype='string' name='[urbanarea]' role='dimension' type='nominal' />
      <column-instance column='[Administrative.units]' derivation='Sum' name='[sum:Administrative.units:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Directly..affiliated.admin.units]' derivation='Sum' name='[sum:Directly..affiliated.admin.units:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Directly.affiliated.non.admin.units]' derivation='Sum' name='[sum:Directly.affiliated.non.admin.units:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tax.Offices..branch.buraus.]' derivation='Sum' name='[sum:Tax.Offices..branch.buraus.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[public..employment.thousands]' derivation='Sum' name='[sum:public..employment.thousands:qk]' pivot='key' type='quantitative' />
      <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.434641' measure-ordering='alphabetic' measure-percentage='0.455882' parameter-percentage='0.109477' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:GDPperCapita:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Administrative.units:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly..affiliated.admin.units:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly.affiliated.non.admin.units:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Tax.Offices..branch.buraus.:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:GDP:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:public.expenditure:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:public..employment.thousands:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='EduEconforTableau' inline='true' name='federated.0h33que0puhf6r1d17e4j17au799' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EduEconforTableau' name='textscan.0xcefwp1b218ok1b7582f07tkof7'>
            <connection class='textscan' directory='C:/Users/Castaire/Desktop/data/Final Data/tax_tableau_data' filename='EduEconforTableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0xcefwp1b218ok1b7582f07tkof7' name='EduEconforTableau.csv' table='[EduEconforTableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Province' ordinal='2' />
            <column datatype='integer' name='Formal.employees' ordinal='3' />
            <column datatype='integer' name='post.graduate' ordinal='4' />
            <column datatype='integer' name='Bachelor.s.degree' ordinal='5' />
            <column datatype='integer' name='Other.post.secondary' ordinal='6' />
            <column datatype='integer' name='Technical.college' ordinal='7' />
            <column datatype='integer' name='High.School.and.other.secondary.school' ordinal='8' />
            <column datatype='integer' name='Junior.high.or.lower' ordinal='9' />
            <column datatype='string' name='FDI' ordinal='10' />
            <column datatype='string' name='urbanarea' ordinal='11' />
            <column datatype='integer' name='No.of.above.size.industrial.companies' ordinal='12' />
            <column datatype='real' name='public.expenditure' ordinal='13' />
            <column datatype='string' name='public..employment.thousands' ordinal='14' />
            <column datatype='real' name='GDP' ordinal='15' />
            <column datatype='real' name='Population' ordinal='16' />
            <column datatype='string' name='RatioofUrbanPopulation' ordinal='17' />
            <column datatype='real' name='GDPperCapita' ordinal='18' />
            <column datatype='integer' name='Areasquarekm' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Formal.employees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Formal.employees]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>Formal.employees</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>post.graduate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[post.graduate]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>post.graduate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bachelor.s.degree</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Bachelor.s.degree]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>Bachelor.s.degree</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other.post.secondary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Other.post.secondary]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>Other.post.secondary</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Technical.college</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Technical.college]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>Technical.college</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High.School.and.other.secondary.school</remote-name>
            <remote-type>20</remote-type>
            <local-name>[High.School.and.other.secondary.school]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>High.School.and.other.secondary.school</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Junior.high.or.lower</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Junior.high.or.lower]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>Junior.high.or.lower</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FDI</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FDI]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>FDI</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urbanarea</remote-name>
            <remote-type>129</remote-type>
            <local-name>[urbanarea]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>urbanarea</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No.of.above.size.industrial.companies</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No.of.above.size.industrial.companies]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>No.of.above.size.industrial.companies</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>public.expenditure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[public.expenditure]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>public.expenditure</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>public..employment.thousands</remote-name>
            <remote-type>129</remote-type>
            <local-name>[public..employment.thousands]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>public..employment.thousands</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatioofUrbanPopulation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RatioofUrbanPopulation]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>RatioofUrbanPopulation</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDPperCapita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDPperCapita]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>GDPperCapita</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Areasquarekm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Areasquarekm]</local-name>
            <parent-name>[EduEconforTableau.csv]</parent-name>
            <remote-alias>Areasquarekm</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Bachelor.s.degree]' role='measure' type='quantitative' />
      <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
      <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
      <column datatype='integer' name='[High.School.and.other.secondary.school]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Junior.high.or.lower]' role='measure' type='quantitative' />
      <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Other.post.secondary]' role='measure' type='quantitative' />
      <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Ratioof Urban Population' datatype='string' name='[RatioofUrbanPopulation]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Technical.college]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Post.Graduate' datatype='integer' name='[post.graduate]' role='measure' type='quantitative' />
      <column caption='Public..Employment.Thousands' datatype='string' name='[public..employment.thousands]' role='dimension' type='nominal' />
      <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
      <column caption='Urbanarea' datatype='string' name='[urbanarea]' role='dimension' type='nominal' />
      <column-instance column='[Bachelor.s.degree]' derivation='Sum' name='[sum:Bachelor.s.degree:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[High.School.and.other.secondary.school]' derivation='Sum' name='[sum:High.School.and.other.secondary.school:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Junior.high.or.lower]' derivation='Sum' name='[sum:Junior.high.or.lower:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other.post.secondary]' derivation='Sum' name='[sum:Other.post.secondary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Technical.college]' derivation='Sum' name='[sum:Technical.college:qk]' pivot='key' type='quantitative' />
      <column-instance column='[post.graduate]' derivation='Sum' name='[sum:post.graduate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.421569' measure-ordering='alphabetic' measure-percentage='0.513072' parameter-percentage='0.0653595' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:High.School.and.other.secondary.school:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:Bachelor.s.degree:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:Technical.college:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDPperCapita:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:Other.post.secondary:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:post.graduate:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDP:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:Junior.high.or.lower:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:public.expenditure:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Age'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='20'>Tax Personnel Staffing for Age Groups</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Both Age' name='federated.0la6che1b4j6f619vbelz1xgjqqg' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='GDP Per Capita' caption='Econ Variabe' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;GDPPC&quot;'>
              <calculation class='tableau' formula='&quot;GDPPC&quot;' />
              <aliases>
                <alias key='&quot;AboveSize&quot;' value='# Above Size Industrial' />
                <alias key='&quot;Emp&quot;' value='Public Employment' />
                <alias key='&quot;GDPPC&quot;' value='GDP Per Capita' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0la6che1b4j6f619vbelz1xgjqqg'>
            <column datatype='string' name='[Age]' role='dimension' type='nominal' />
            <column caption='GDPpCap' datatype='string' name='[Calculation_483222206839922688]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[Province]=&apos;Tianjing&apos; OR [Province]=&apos;Beijing&apos; &#10;    OR [Province]=&apos;Shanghai&apos; &#10;THEN &apos;High&apos;&#10;ELSEIF[Province]=&apos;Jiangsu&apos; OR [Province]=&apos;Inner Mongolia&apos; &#10;    OR [Province]=&apos;Zhejiang&apos; OR [Province]=&apos;Liaoning&apos; &#10;    OR [Province]=&apos;Guangdong&apos; OR [Province]=&apos;Fujian&apos;&#10;    OR [Province]=&apos;Shandong&apos; &#10;THEN &apos;Med&apos;&#10;ELSE &apos;Low&apos;&#10;END' />
            </column>
            <column caption='PubExpend' datatype='string' name='[Calculation_483222206853103619]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[Province]=&apos;Guangdong&apos; THEN &apos;High&apos;&#10;ELSEIF[Province]=&apos;Qinghai&apos; OR [Province]=&apos;Hainan&apos;&#10;    OR[Province]=&apos;Tibet&apos; OR [Province]=&apos;Ningxia&apos;&#10;THEN &apos;Low&apos;&#10;ELSE &apos;Med&apos;&#10;END' />
            </column>
            <column caption='AboSizeInd' datatype='string' name='[Calculation_483222206861496324]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[Province]=&apos;Zhejiang&apos; OR [Province]=&apos;Guangdong&apos;&#10;    OR[Province]=&apos;Shandong&apos;&#10;THEN &apos;High&apos;&#10;ELSEIF[Province]=&apos;Henan&apos; OR [Province]=&apos;Liaoning&apos;&#10;    OR[Province]=&apos;Fujian&apos; OR [Province]=&apos;Anhui&apos;&#10;    OR[Province]=&apos;Hubei&apos; OR [Province]=&apos;Hebei&apos;&#10;    OR[Province]=&apos;Sichuan&apos; OR [Province]=&apos;Shanghai&apos;&#10;THEN &apos;Med&apos;&#10;ELSE &apos;Low&apos;&#10;END' />
            </column>
            <column caption='Econ Grouping' datatype='string' name='[Calculation_959548236136923137]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Parameters].[Parameter 1] == &quot;AboveSize&quot; Then [Calculation_483222206861496324]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &quot;GDPPC&quot; Then [Calculation_483222206839922688]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &quot;Exp&quot; Then [Calculation_483222206853103619]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Staff]' role='measure' type='quantitative' />
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_483222206861496324]' derivation='None' name='[none:Calculation_483222206861496324:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_959548236136923137]' derivation='None' name='[none:Calculation_959548236136923137:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Staff]' derivation='Sum' name='[sum:Number of Staff:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;&lt;30&quot;</bucket>
              <bucket>&quot;30-35&quot;</bucket>
              <bucket>&quot;36-40&quot;</bucket>
              <bucket>&quot;41-45&quot;</bucket>
              <bucket>&quot;46-50&quot;</bucket>
              <bucket>&quot;51-54&quot;</bucket>
              <bucket>&quot;55-59&quot;</bucket>
              <bucket>&quot;&gt;60&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Calculation_483222206861496324:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_483222206861496324:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Calculation_483222206861496324:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0la6che1b4j6f619vbelz1xgjqqg].[sum:Number of Staff:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0la6che1b4j6f619vbelz1xgjqqg].[sum:Number of Staff:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0la6che1b4j6f619vbelz1xgjqqg].[sum:Number of Staff:qk]' scope='rows' value='true' />
            <format attr='height' field='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Year:qk]' value='32' />
            <format attr='width' field='[federated.0la6che1b4j6f619vbelz1xgjqqg].[sum:Number of Staff:qk]' value='60' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='65' />
            <format attr='width' field='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Calculation_959548236136923137:nk]' value='96' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='wrap' value='on' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Calculation_959548236136923137:nk] * [federated.0la6che1b4j6f619vbelz1xgjqqg].[sum:Number of Staff:qk])</rows>
        <cols>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Year:qk]</cols>
        <pages>
          <column>[Parameters].[Parameter 1]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Age Percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Both Age' name='federated.0la6che1b4j6f619vbelz1xgjqqg' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare LTB and STB' datatype='boolean' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0la6che1b4j6f619vbelz1xgjqqg'>
            <column datatype='string' name='[Age]' role='dimension' type='nominal' />
            <column datatype='string' name='[Bureau]' role='dimension' type='nominal' />
            <column caption='Bureau Grouping' datatype='string' name='[Calculation_959548236140593154]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Parameters].[Parameter 2]==TRUE Then [Bureau] END' />
            </column>
            <column datatype='integer' name='[Number of Staff]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_959548236140593154]' derivation='None' name='[none:Calculation_959548236140593154:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Staff]' derivation='Sum' name='[pcto:sum:Number of Staff:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]'>
            <groupfilter function='level-members' level='[none:Age:nk]' />
          </filter>
          <sort class='manual' column='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;&lt;30&quot;</bucket>
              <bucket>&quot;30-35&quot;</bucket>
              <bucket>&quot;36-40&quot;</bucket>
              <bucket>&quot;41-45&quot;</bucket>
              <bucket>&quot;46-50&quot;</bucket>
              <bucket>&quot;51-54&quot;</bucket>
              <bucket>&quot;55-59&quot;</bucket>
              <bucket>&quot;&gt;60&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0la6che1b4j6f619vbelz1xgjqqg].[pcto:sum:Number of Staff:qk:3]' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0la6che1b4j6f619vbelz1xgjqqg].[pcto:sum:Number of Staff:qk:3]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Calculation_959548236140593154:nk] * [federated.0la6che1b4j6f619vbelz1xgjqqg].[pcto:sum:Number of Staff:qk:3])</rows>
        <cols>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Year:qk]</cols>
        <pages>
          <column>[Parameters].[Parameter 2]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='EDU'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EduforTableau' name='federated.1ttla7l0ljjhod1f49zqw19ngzfd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare LTB and STB' datatype='boolean' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ttla7l0ljjhod1f49zqw19ngzfd'>
            <column datatype='string' name='[Bureau]' role='dimension' type='nominal' />
            <column caption='Bureau Selection' datatype='string' name='[Calculation_959548236145197060]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Parameters].[Parameter 2]==TRUE THEN [Bureau] ELSE &quot;&quot; END' />
            </column>
            <column datatype='string' name='[Education]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Staff]' role='measure' type='quantitative' />
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_959548236145197060]' derivation='None' name='[none:Calculation_959548236145197060:nk]' pivot='key' type='nominal' />
            <column-instance column='[Education]' derivation='None' name='[none:Education:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Staff]' derivation='Sum' name='[sum:Number of Staff:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Province:nk]'>
            <groupfilter from='&quot;Anhui&quot;' function='range' level='[none:Province:nk]' to='&quot;Zhejiang&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Calculation_959548236145197060:nk]' value='60' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]' value='210' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Calculation_959548236145197060:nk] * [federated.1ttla7l0ljjhod1f49zqw19ngzfd].[sum:Number of Staff:qk])</rows>
        <cols>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Year:qk]</cols>
        <pages>
          <column>[Parameters].[Parameter 2]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='EDU-percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='EduforTableau' name='federated.1ttla7l0ljjhod1f49zqw19ngzfd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare LTB and STB' datatype='boolean' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ttla7l0ljjhod1f49zqw19ngzfd'>
            <column datatype='string' name='[Bureau]' role='dimension' type='nominal' />
            <column caption='Bureau Selection' datatype='string' name='[Calculation_959548236145197060]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Parameters].[Parameter 2]==TRUE THEN [Bureau] ELSE &quot;&quot; END' />
            </column>
            <column datatype='string' name='[Education]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Staff]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_959548236145197060]' derivation='None' name='[none:Calculation_959548236145197060:nk]' pivot='key' type='nominal' />
            <column-instance column='[Education]' derivation='None' name='[none:Education:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Staff]' derivation='Sum' name='[pcto:sum:Number of Staff:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[pcto:sum:Number of Staff:qk:1]' value='76' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]' value='160' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Calculation_959548236145197060:nk] * [federated.1ttla7l0ljjhod1f49zqw19ngzfd].[pcto:sum:Number of Staff:qk:1])</rows>
        <cols>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Year:qk]</cols>
        <pages>
          <column>[Parameters].[Parameter 2]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Econ Grouping Ideas'>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeEconforTableau' name='federated.1nwoixm1d43ddn1303gti1tjs8z6' />
          </datasources>
          <datasource-dependencies datasource='federated.1nwoixm1d43ddn1303gti1tjs8z6'>
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Province:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Province:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Province:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Province:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk] + ([federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk] + [federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]))</rows>
        <cols>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='EconWithAge(36-40)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Age 36-40</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeEconforTableau' name='federated.1nwoixm1d43ddn1303gti1tjs8z6' />
          </datasources>
          <datasource-dependencies datasource='federated.1nwoixm1d43ddn1303gti1tjs8z6'>
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='integer' name='[X36.40]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X36.40]' derivation='Sum' name='[sum:X36.40:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X36.40:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X36.40:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='true' />
            <format attr='width' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values]' value='63' />
            <format attr='width' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X36.40:qk]' value='63' />
            <format attr='subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X36.40:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X36.40:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X36.40:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values] + [federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X36.40:qk])</rows>
        <cols>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='EconWithAge(41-45)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Age 41-45</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeEconforTableau' name='federated.1nwoixm1d43ddn1303gti1tjs8z6' />
          </datasources>
          <datasource-dependencies datasource='federated.1nwoixm1d43ddn1303gti1tjs8z6'>
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='integer' name='[X36.40]' role='measure' type='quantitative' />
            <column datatype='integer' name='[X41.45]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X36.40]' derivation='Sum' name='[sum:X36.40:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X41.45]' derivation='Sum' name='[sum:X41.45:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X36.40:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X41.45:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values]' value='67' />
            <format attr='width' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X41.45:qk]' value='67' />
            <format attr='title' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X41.45:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X41.45:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X41.45:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values] + [federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X41.45:qk])</rows>
        <cols>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='EconWithAge(46-50)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Age 46-50</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeEconforTableau' name='federated.1nwoixm1d43ddn1303gti1tjs8z6' />
          </datasources>
          <datasource-dependencies datasource='federated.1nwoixm1d43ddn1303gti1tjs8z6'>
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='integer' name='[X36.40]' role='measure' type='quantitative' />
            <column datatype='integer' name='[X46.50]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X36.40]' derivation='Sum' name='[sum:X36.40:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X46.50]' derivation='Sum' name='[sum:X46.50:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X36.40:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X46.50:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='true' />
            <format attr='width' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values]' value='63' />
            <format attr='width' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X46.50:qk]' value='63' />
            <format attr='subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X46.50:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X46.50:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X46.50:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values] + [federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X46.50:qk])</rows>
        <cols>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='EconWithAge(51-54)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Age 51-54&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeEconforTableau' name='federated.1nwoixm1d43ddn1303gti1tjs8z6' />
          </datasources>
          <datasource-dependencies datasource='federated.1nwoixm1d43ddn1303gti1tjs8z6'>
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='integer' name='[X36.40]' role='measure' type='quantitative' />
            <column datatype='integer' name='[X51.54]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X36.40]' derivation='Sum' name='[sum:X36.40:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X51.54]' derivation='Sum' name='[sum:X51.54:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X36.40:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X51.54:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values]' value='62' />
            <format attr='width' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X51.54:qk]' value='62' />
            <format attr='title' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X51.54:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.066298246383667' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values] + [federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X51.54:qk])</rows>
        <cols>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='EconWithAge(55-59)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Age 55-59</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeEconforTableau' name='federated.1nwoixm1d43ddn1303gti1tjs8z6' />
          </datasources>
          <datasource-dependencies datasource='federated.1nwoixm1d43ddn1303gti1tjs8z6'>
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='integer' name='[X36.40]' role='measure' type='quantitative' />
            <column datatype='integer' name='[X55.59]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X36.40]' derivation='Sum' name='[sum:X36.40:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X55.59]' derivation='Sum' name='[sum:X55.59:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X36.40:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X55.59:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values]' value='61' />
            <format attr='width' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X55.59:qk]' value='61' />
            <format attr='title' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X55.59:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values] + [federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X55.59:qk])</rows>
        <cols>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='EconWithAge&lt;30'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Age &lt; 30&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeEconforTableau' name='federated.1nwoixm1d43ddn1303gti1tjs8z6' />
          </datasources>
          <datasource-dependencies datasource='federated.1nwoixm1d43ddn1303gti1tjs8z6'>
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='integer' name='[X30.35]' role='measure' type='quantitative' />
            <column datatype='integer' name='[X36.40]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X30.35]' derivation='Sum' name='[sum:X30.35:qk]' pivot='key' type='quantitative' />
            <column-instance column='[X36.40]' derivation='Sum' name='[sum:X36.40:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:GDPperCapita:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:public.expenditure:qk]&quot;</bucket>
              <bucket>&quot;[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X36.40:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X30.35:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]' scope='cols' value='true' />
            <format attr='width' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values]' value='70' />
            <format attr='width' field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X30.35:qk]' value='70' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X30.35:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2430939674377441' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1nwoixm1d43ddn1303gti1tjs8z6].[Multiple Values] + [federated.1nwoixm1d43ddn1303gti1tjs8z6].[sum:X30.35:qk])</rows>
        <cols>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Edu Econ'>
      <table>
        <view>
          <datasources>
            <datasource caption='EduforTableau' name='federated.1ttla7l0ljjhod1f49zqw19ngzfd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='GDP Per Capita' caption='Econ Variabe' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;GDPPC&quot;'>
              <calculation class='tableau' formula='&quot;GDPPC&quot;' />
              <aliases>
                <alias key='&quot;AboveSize&quot;' value='# Above Size Industrial' />
                <alias key='&quot;Emp&quot;' value='Public Employment' />
                <alias key='&quot;GDPPC&quot;' value='GDP Per Capita' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ttla7l0ljjhod1f49zqw19ngzfd'>
            <column caption='GDP-Grouping' datatype='string' name='[Calculation_500181074120835082]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[Province]=&apos;Tianjing&apos; OR [Province]=&apos;Beijing&apos;&#13;&#10;    OR[Province]=&apos;Shanghai&apos;&#13;&#10;THEN &apos;High&apos;&#13;&#10;ELSEIF[Province]=&apos;Jiangsu&apos; OR[Province]=&apos;Inner Mongolia&apos;&#13;&#10;    OR[Province]=&apos;Zhejiang&apos; OR[Province]=&apos;Laoning&apos;&#13;&#10;    OR[Province]=&apos;Guangdong&apos; OR[Province]=&apos;Fujian&apos;&#13;&#10;    OR[Province]=&apos;Shandong&apos;&#13;&#10;THEN &apos;Med&apos;&#13;&#10;ELSE &apos;Low&apos;&#13;&#10;END' />
            </column>
            <column caption='GDPpercap-Grouping' datatype='string' name='[Calculation_500181074120912907]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[Province]=&apos;Tianjing&apos; OR [Province]=&apos;Beijing&apos; &#13;&#10;    OR [Province]=&apos;Shanghai&apos; &#13;&#10;THEN &apos;High&apos;&#13;&#10;ELSEIF[Province]=&apos;Jiangsu&apos; OR [Province]=&apos;Inner Mongolia&apos; &#13;&#10;    OR [Province]=&apos;Zhejiang&apos; OR [Province]=&apos;Liaoning&apos; &#13;&#10;    OR [Province]=&apos;Guangdong&apos; OR [Province]=&apos;Fujian&apos;&#13;&#10;    OR [Province]=&apos;Shandong&apos; &#13;&#10;THEN &apos;Med&apos;&#13;&#10;ELSE &apos;Low&apos;&#13;&#10;END' />
            </column>
            <column caption='AboveSizeInd-Grouping' datatype='string' name='[Calculation_500181074120978444]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[Province]=&apos;Zhejiang&apos; OR [Province]=&apos;Guangdong&apos;&#13;&#10;    OR[Province]=&apos;Shandong&apos;&#13;&#10;THEN &apos;High&apos;&#13;&#10;ELSEIF[Province]=&apos;Henan&apos; OR [Province]=&apos;Liaoning&apos;&#13;&#10;    OR[Province]=&apos;Fujian&apos; OR [Province]=&apos;Anhui&apos;&#13;&#10;    OR[Province]=&apos;Hubei&apos; OR [Province]=&apos;Hebei&apos;&#13;&#10;    OR[Province]=&apos;Sichuan&apos; OR [Province]=&apos;Shanghai&apos;&#13;&#10;THEN &apos;Med&apos;&#13;&#10;ELSE &apos;Low&apos;&#13;&#10;END' />
            </column>
            <column caption='PubExp-Groupings' datatype='string' name='[Calculation_500181074121134093]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[Province]=&apos;Guangdong&apos; THEN &apos;High&apos;&#13;&#10;ELSEIF[Province]=&apos;Qinghai&apos; OR [Province]=&apos;Hainan&apos;&#13;&#10;    OR[Province]=&apos;Tibet&apos; OR [Province]=&apos;Ningxia&apos;&#13;&#10;THEN &apos;Low&apos;&#13;&#10;ELSE &apos;Med&apos;&#13;&#10;END' />
            </column>
            <column caption='Econ Grouping' datatype='string' name='[Calculation_959548236148543493]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Parameters].[Parameter 1] == &quot;Emp&quot; Then [Calculation_500181074121134093]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &quot;GDPPC&quot; THEN [Calculation_500181074120912907]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &quot;AboveSize&quot; Then [Calculation_500181074120978444]&#13;&#10;Else &quot;&quot; END' />
            </column>
            <column datatype='string' name='[Education]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Staff]' role='measure' type='quantitative' />
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_500181074120835082]' derivation='None' name='[none:Calculation_500181074120835082:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_959548236148543493]' derivation='None' name='[none:Calculation_959548236148543493:nk]' pivot='key' type='nominal' />
            <column-instance column='[Education]' derivation='None' name='[none:Education:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Staff]' derivation='Sum' name='[sum:Number of Staff:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Calculation_500181074120835082:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_500181074120835082:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Calculation_500181074120835082:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[sum:Number of Staff:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[sum:Number of Staff:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[sum:Number of Staff:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[sum:Number of Staff:qk]' value='56' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]' value='220' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Calculation_959548236148543493:nk] * [federated.1ttla7l0ljjhod1f49zqw19ngzfd].[sum:Number of Staff:qk])</rows>
        <cols>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Year:qk]</cols>
        <pages>
          <column>[Parameters].[Parameter 1]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='NationalUnit'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Work Unit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='UnitforTableau' name='federated.0jin2qk0k0oi46188ss6y1tseqq2' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare LTB and STB' datatype='boolean' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jin2qk0k0oi46188ss6y1tseqq2'>
            <column datatype='string' name='[Bureau]' role='dimension' type='nominal' />
            <column caption='Bureau Selection' datatype='string' name='[Calculation_959548236151611398]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Parameters].[Parameter 2]==TRUE Then [Bureau] ELSE &quot;&quot; END' />
            </column>
            <column aggregation='CountD' datatype='real' name='[Number of Staff]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Work Unit]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_959548236151611398]' derivation='None' name='[none:Calculation_959548236151611398:nk]' pivot='key' type='nominal' />
            <column-instance column='[Work Unit]' derivation='None' name='[none:Work Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Staff]' derivation='Sum' name='[sum:Number of Staff:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[sum:Number of Staff:qk]' value='60' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Calculation_959548236151611398:nk] * [federated.0jin2qk0k0oi46188ss6y1tseqq2].[sum:Number of Staff:qk])</rows>
        <cols>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Year:qk]</cols>
        <pages>
          <column>[Parameters].[Parameter 2]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Unit'>
      <table>
        <view>
          <datasources>
            <datasource caption='UnitforTableau' name='federated.0jin2qk0k0oi46188ss6y1tseqq2' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='GDP Per Capita' caption='Econ Variabe' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;GDPPC&quot;'>
              <calculation class='tableau' formula='&quot;GDPPC&quot;' />
              <aliases>
                <alias key='&quot;AboveSize&quot;' value='# Above Size Industrial' />
                <alias key='&quot;Emp&quot;' value='Public Employment' />
                <alias key='&quot;GDPPC&quot;' value='GDP Per Capita' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jin2qk0k0oi46188ss6y1tseqq2'>
            <column caption='GDPpCap' datatype='string' name='[Calculation_483222206874984453]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[Province]=&apos;Tianjing&apos; OR [Province]=&apos;Beijing&apos; &#10;    OR [Province]=&apos;Shanghai&apos; &#10;THEN &apos;High GDPpercap&apos;&#10;ELSEIF[Province]=&apos;Jiangsu&apos; OR [Province]=&apos;Inner Mongolia&apos; &#10;    OR [Province]=&apos;Zhejiang&apos; OR [Province]=&apos;Liaoning&apos; &#10;    OR [Province]=&apos;Guangdong&apos; OR [Province]=&apos;Fujian&apos;&#10;    OR [Province]=&apos;Shandong&apos; &#10;THEN &apos;Medium GDPpercap&apos;&#10;ELSE &apos;Low GDPpercap&apos;&#10;END' />
            </column>
            <column caption='AboSizeInd' datatype='string' name='[Calculation_483222206875598854]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[Province]=&apos;Zhejiang&apos; OR [Province]=&apos;Guangdong&apos;&#10;    OR[Province]=&apos;Shandong&apos;&#10;THEN &apos;High AboveSizeInd&apos;&#10;ELSEIF[Province]=&apos;Henan&apos; OR [Province]=&apos;Liaoning&apos;&#10;    OR[Province]=&apos;Fujian&apos; OR [Province]=&apos;Anhui&apos;&#10;    OR[Province]=&apos;Hubei&apos; OR [Province]=&apos;Hebei&apos;&#10;    OR[Province]=&apos;Sichuan&apos; OR [Province]=&apos;Shanghai&apos;&#10;THEN &apos;Medium AboveSizeInd&apos;&#10;ELSE &apos;Low AboveSizeInd&apos;&#10;END' />
            </column>
            <column caption='PubEmp' datatype='string' name='[Calculation_483222206875926535]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[Province]=&apos;Sichuan&apos; OR [Province]=&apos;Shandong&apos;&#10;    OR[Province]=&apos;Hebei&apos; OR[Province]=&apos;Hunan&apos;&#10;THEN &apos;High PubEmp&apos;&#10;ELSEIF[Province]=&apos;Chongqing&apos; OR [Province]=&apos;Shanghai&apos; &#10;    OR[Province]=&apos;Tianjin&apos; OR [Province]=&apos;Hainan&apos;&#10;    OR[Province]=&apos;Ningxia&apos; OR [Province]=&apos;Qinghai&apos;&#10;THEN &apos;Low PubEmp&apos;&#10;ELSE &apos;Medium PubEmp&apos;&#10;END' />
            </column>
            <column caption='Econ Grouping' datatype='string' name='[Calculation_959548236143013891]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Parameters].[Parameter 1] == &quot;Emp&quot; Then [Calculation_483222206875926535]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &quot;GDPPC&quot; THEN [Calculation_483222206874984453]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &quot;AboveSize&quot; Then [Calculation_483222206875598854]&#13;&#10;END' />
            </column>
            <column aggregation='CountD' datatype='real' name='[Number of Staff]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Work Unit]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_959548236143013891]' derivation='None' name='[none:Calculation_959548236143013891:nk]' pivot='key' type='nominal' />
            <column-instance column='[Work Unit]' derivation='None' name='[none:Work Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Staff]' derivation='Sum' name='[sum:Number of Staff:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[sum:Number of Staff:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[sum:Number of Staff:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[sum:Number of Staff:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[sum:Number of Staff:qk]' value='56' />
            <encoding attr='space' class='0' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Year:qk]' field-type='quantitative' max='2004' min='1999' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Calculation_959548236143013891:nk]' value='124' />
            <format attr='height-header' value='32' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Calculation_959548236143013891:nk] * [federated.0jin2qk0k0oi46188ss6y1tseqq2].[sum:Number of Staff:qk])</rows>
        <cols>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Year:qk]</cols>
        <pages>
          <column>[Parameters].[Parameter 1]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Unit Percent'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='UnitforTableau' name='federated.0jin2qk0k0oi46188ss6y1tseqq2' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Compare LTB and STB' datatype='boolean' datatype-customized='true' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='true'>
              <calculation class='tableau' formula='true' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jin2qk0k0oi46188ss6y1tseqq2'>
            <column datatype='string' name='[Bureau]' role='dimension' type='nominal' />
            <column caption='Bureau Selection' datatype='string' name='[Calculation_959548236151611398]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Parameters].[Parameter 2]==TRUE Then [Bureau] ELSE &quot;&quot; END' />
            </column>
            <column aggregation='CountD' datatype='real' name='[Number of Staff]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Work Unit]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_959548236151611398]' derivation='None' name='[none:Calculation_959548236151611398:nk]' pivot='key' type='nominal' />
            <column-instance column='[Work Unit]' derivation='None' name='[none:Work Unit:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Staff]' derivation='Sum' name='[pcto:sum:Number of Staff:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Year:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[pcto:sum:Number of Staff:qk:3]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[pcto:sum:Number of Staff:qk:3]' scope='rows' value='true' />
            <format attr='width' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[pcto:sum:Number of Staff:qk:3]' value='52' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]' value='160' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Calculation_959548236151611398:nk] * [federated.0jin2qk0k0oi46188ss6y1tseqq2].[pcto:sum:Number of Staff:qk:3])</rows>
        <cols>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Year:qk]</cols>
        <pages>
          <column>[Parameters].[Parameter 2]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='UnitDepartEcon'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Administrative Units</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='UnitEconforTableau' name='federated.0xi4hs80co6bur163yzrf0611ma2' />
          </datasources>
          <datasource-dependencies datasource='federated.0xi4hs80co6bur163yzrf0611ma2'>
            <column datatype='integer' name='[Administrative.units]' role='measure' type='quantitative' />
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[Administrative.units]' derivation='Sum' name='[sum:Administrative.units:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:public.expenditure:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Administrative.units:qk]' field-type='quantitative' fold='true' range-type='independent' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Administrative.units:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Administrative.units:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values]' value='60' />
            <format attr='width' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Administrative.units:qk]' value='60' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' value='360' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Administrative.units:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values] + [federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Administrative.units:qk])</rows>
        <cols>[federated.0xi4hs80co6bur163yzrf0611ma2].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='UnitDepartEcon (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>DAE Admin</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='UnitEconforTableau' name='federated.0xi4hs80co6bur163yzrf0611ma2' />
          </datasources>
          <datasource-dependencies datasource='federated.0xi4hs80co6bur163yzrf0611ma2'>
            <column datatype='integer' name='[Directly..affiliated.admin.units]' role='measure' type='quantitative' />
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[Directly..affiliated.admin.units]' derivation='Sum' name='[sum:Directly..affiliated.admin.units:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:public.expenditure:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly..affiliated.admin.units:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values]' value='68' />
            <format attr='width' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly..affiliated.admin.units:qk]' value='68' />
            <format attr='subtitle' class='0' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly..affiliated.admin.units:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly..affiliated.admin.units:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly..affiliated.admin.units:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.5524861812591553' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values] + [federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly..affiliated.admin.units:qk])</rows>
        <cols>[federated.0xi4hs80co6bur163yzrf0611ma2].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='UnitDepartEcon (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>DAE Non-Admin</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='UnitEconforTableau' name='federated.0xi4hs80co6bur163yzrf0611ma2' />
          </datasources>
          <datasource-dependencies datasource='federated.0xi4hs80co6bur163yzrf0611ma2'>
            <column datatype='integer' name='[Directly.affiliated.non.admin.units]' role='measure' type='quantitative' />
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[Directly.affiliated.non.admin.units]' derivation='Sum' name='[sum:Directly.affiliated.non.admin.units:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:public.expenditure:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly.affiliated.non.admin.units:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values]' value='59' />
            <format attr='width' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly.affiliated.non.admin.units:qk]' value='59' />
            <format attr='subtitle' class='0' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly.affiliated.non.admin.units:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly.affiliated.non.admin.units:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly.affiliated.non.admin.units:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values] + [federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Directly.affiliated.non.admin.units:qk])</rows>
        <cols>[federated.0xi4hs80co6bur163yzrf0611ma2].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='UnitDepartEcon (4)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tax Offices&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='UnitEconforTableau' name='federated.0xi4hs80co6bur163yzrf0611ma2' />
          </datasources>
          <datasource-dependencies datasource='federated.0xi4hs80co6bur163yzrf0611ma2'>
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Tax.Offices..branch.buraus.]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tax.Offices..branch.buraus.]' derivation='Sum' name='[sum:Tax.Offices..branch.buraus.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:public.expenditure:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Tax.Offices..branch.buraus.:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values]' value='56' />
            <format attr='width' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Tax.Offices..branch.buraus.:qk]' value='56' />
            <format attr='subtitle' class='0' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Tax.Offices..branch.buraus.:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Tax.Offices..branch.buraus.:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Tax.Offices..branch.buraus.:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0xi4hs80co6bur163yzrf0611ma2].[Multiple Values] + [federated.0xi4hs80co6bur163yzrf0611ma2].[sum:Tax.Offices..branch.buraus.:qk])</rows>
        <cols>[federated.0xi4hs80co6bur163yzrf0611ma2].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='var/Bachelor'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bachelor&apos;s Degree</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EduEconforTableau' name='federated.0h33que0puhf6r1d17e4j17au799' />
          </datasources>
          <datasource-dependencies datasource='federated.0h33que0puhf6r1d17e4j17au799'>
            <column datatype='integer' name='[Bachelor.s.degree]' role='measure' type='quantitative' />
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[Bachelor.s.degree]' derivation='Sum' name='[sum:Bachelor.s.degree:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:public.expenditure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDPperCapita:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:public.expenditure:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:Bachelor.s.degree:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Bachelor.s.degree:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values]' value='63' />
            <format attr='width' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Bachelor.s.degree:qk]' value='63' />
            <format attr='subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Bachelor.s.degree:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Bachelor.s.degree:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' value='300' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Bachelor.s.degree:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values] + [federated.0h33que0puhf6r1d17e4j17au799].[sum:Bachelor.s.degree:qk])</rows>
        <cols>[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='var/HighSchool'>
      <layout-options>
        <title>
          <formatted-text>
            <run>High School</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EduEconforTableau' name='federated.0h33que0puhf6r1d17e4j17au799' />
          </datasources>
          <datasource-dependencies datasource='federated.0h33que0puhf6r1d17e4j17au799'>
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[High.School.and.other.secondary.school]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High.School.and.other.secondary.school]' derivation='Sum' name='[sum:High.School.and.other.secondary.school:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:public.expenditure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDPperCapita:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:public.expenditure:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:High.School.and.other.secondary.school:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values]' value='62' />
            <format attr='width' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:High.School.and.other.secondary.school:qk]' value='62' />
            <format attr='subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:High.School.and.other.secondary.school:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:High.School.and.other.secondary.school:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h33que0puhf6r1d17e4j17au799].[sum:High.School.and.other.secondary.school:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1104972362518311' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values] + [federated.0h33que0puhf6r1d17e4j17au799].[sum:High.School.and.other.secondary.school:qk])</rows>
        <cols>[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='var/JuniorHigh'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Junior High</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EduEconforTableau' name='federated.0h33que0puhf6r1d17e4j17au799' />
          </datasources>
          <datasource-dependencies datasource='federated.0h33que0puhf6r1d17e4j17au799'>
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Junior.high.or.lower]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Junior.high.or.lower]' derivation='Sum' name='[sum:Junior.high.or.lower:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:public.expenditure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDPperCapita:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:public.expenditure:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Junior.high.or.lower:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values]' value='61' />
            <format attr='width' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Junior.high.or.lower:qk]' value='61' />
            <format attr='title' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Junior.high.or.lower:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9230387210845947' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values] + [federated.0h33que0puhf6r1d17e4j17au799].[sum:Junior.high.or.lower:qk])</rows>
        <cols>[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='var/OtherPostSec'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Other Post Secondary</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EduEconforTableau' name='federated.0h33que0puhf6r1d17e4j17au799' />
          </datasources>
          <datasource-dependencies datasource='federated.0h33que0puhf6r1d17e4j17au799'>
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Other.post.secondary]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Other.post.secondary]' derivation='Sum' name='[sum:Other.post.secondary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:public.expenditure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDPperCapita:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:public.expenditure:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Other.post.secondary:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values]' value='62' />
            <format attr='width' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Other.post.secondary:qk]' value='62' />
            <format attr='title' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Other.post.secondary:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values] + [federated.0h33que0puhf6r1d17e4j17au799].[sum:Other.post.secondary:qk])</rows>
        <cols>[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='var/PostGrad'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Post Grad</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EduEconforTableau' name='federated.0h33que0puhf6r1d17e4j17au799' />
          </datasources>
          <datasource-dependencies datasource='federated.0h33que0puhf6r1d17e4j17au799'>
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Post.Graduate' datatype='integer' name='[post.graduate]' role='measure' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[post.graduate]' derivation='Sum' name='[sum:post.graduate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:public.expenditure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDPperCapita:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:public.expenditure:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:post.graduate:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values]' value='43' />
            <format attr='width' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:post.graduate:qk]' value='43' />
            <format attr='title' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' scope='cols' value='true' />
            <format attr='height' field='[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]' value='30' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h33que0puhf6r1d17e4j17au799].[sum:post.graduate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.022099494934082' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values] + [federated.0h33que0puhf6r1d17e4j17au799].[sum:post.graduate:qk])</rows>
        <cols>[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='var/TechCollege'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Technical College</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EduEconforTableau' name='federated.0h33que0puhf6r1d17e4j17au799' />
          </datasources>
          <datasource-dependencies datasource='federated.0h33que0puhf6r1d17e4j17au799'>
            <column caption='GD Pper Capita' datatype='real' name='[GDPperCapita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[No.of.above.size.industrial.companies]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Technical.college]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Public.Expenditure' datatype='real' name='[public.expenditure]' role='measure' type='quantitative' />
            <column-instance column='[GDPperCapita]' derivation='Sum' name='[sum:GDPperCapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[No.of.above.size.industrial.companies]' derivation='Sum' name='[sum:No.of.above.size.industrial.companies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Technical.college]' derivation='Sum' name='[sum:Technical.college:qk]' pivot='key' type='quantitative' />
            <column-instance column='[public.expenditure]' derivation='Sum' name='[sum:public.expenditure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDPperCapita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:public.expenditure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:No.of.above.size.industrial.companies:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:GDPperCapita:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:public.expenditure:qk]&quot;</bucket>
              <bucket>&quot;[federated.0h33que0puhf6r1d17e4j17au799].[sum:No.of.above.size.industrial.companies:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Technical.college:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values]' value='57' />
            <format attr='width' field='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Technical.college:qk]' value='57' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h33que0puhf6r1d17e4j17au799].[sum:Technical.college:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0h33que0puhf6r1d17e4j17au799].[Multiple Values] + [federated.0h33que0puhf6r1d17e4j17au799].[sum:Technical.college:qk])</rows>
        <cols>[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Age Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='86125' id='9' name='Age' show-title='false' w='81900' x='200' y='12125' />
        <zone h='28250' id='11' name='Age' pane-specification-id='0' param='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]' type='color' w='14000' x='85000' y='24875' />
        <zone custom-title='true' fixed-size='126' h='9125' id='8' is-fixed='true' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='31200' x='49700' y='11000'>
          <formatted-text>
            <run fontsize='12'>Grouping Variable</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='12375' id='12' type='text' w='47100' x='6300' y='2375'>
          <formatted-text>
            <run bold='true' fontsize='14'>Staff Counts for Age Groups (Grouped by Econ Variables)</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Age Dist Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='5' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='10' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='8' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='6' type='layout-basic' w='98400' x='800' y='1000' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='83125' id='1' name='Age Percentage' show-title='false' w='98000' x='700' y='15000' />
        <zone h='11125' id='3' name='Age Percentage' pane-specification-id='0' param='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]' type='color' w='54000' x='46600' y='625' />
        <zone forceUpdate='true' h='9750' id='4' type='text' w='45800' x='900' y='4125'>
          <formatted-text>
            <run bold='true' fontsize='14'>Distribution of Staff by Age</run>
          </formatted-text>
        </zone>
        <zone h='11375' id='11' mode='list' param='[Parameters].[Parameter 2]' type='paramctrl' w='42100' x='46400' y='10125' />
      </zones>
    </dashboard>
    <dashboard name='Age with Econ'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='34500' id='1' name='EconWithAge&lt;30' w='46400' x='500' y='125' />
        <zone h='34750' id='2' name='EconWithAge(36-40)' w='49000' x='50200' y='250' />
        <zone h='32375' id='3' name='EconWithAge(41-45)' w='45800' x='600' y='33875' />
        <zone h='32000' id='4' name='EconWithAge(46-50)' w='48400' x='50800' y='34125' />
        <zone h='30000' id='5' name='EconWithAge(51-54)' w='46300' x='200' y='66125' />
        <zone h='31000' id='6' name='EconWithAge(55-59)' w='48600' x='50900' y='66000' />
      </zones>
    </dashboard>
    <dashboard name='Edu with Econ'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='33625' id='1' name='var/Bachelor' w='45000' x='1000' y='875' />
        <zone h='33875' id='3' name='var/HighSchool' w='51900' x='48000' y='625' />
        <zone h='31250' id='4' name='var/JuniorHigh' w='47000' x='-400' y='34125' />
        <zone h='33125' id='5' name='var/OtherPostSec' w='51700' x='47400' y='64750' />
        <zone h='31875' id='6' name='var/PostGrad' w='49800' x='48600' y='33875' />
        <zone h='37500' id='7' name='var/TechCollege' w='45000' x='600' y='64750' />
      </zones>
    </dashboard>
    <dashboard name='Education Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='EduforTableau' name='federated.1ttla7l0ljjhod1f49zqw19ngzfd' />
      </datasources>
      <datasource-dependencies datasource='federated.1ttla7l0ljjhod1f49zqw19ngzfd'>
        <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='83250' id='1' name='EDU' w='82100' x='-200' y='14375' />
        <zone h='72125' id='2' name='EDU' param='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Province:nk]' type='filter' w='16000' x='83500' y='25375' />
        <zone h='12750' id='3' name='EDU' pane-specification-id='0' param='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]' type='color' w='44800' x='53400' y='1875' />
        <zone h='7125' id='4' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='41300' x='53400' y='16125' />
        <zone h='5000' id='5' type='text' w='28000' x='2400' y='6250'>
          <formatted-text>
            <run bold='true' fontsize='14'>Education Level</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Education Dist Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='80250' id='1' name='EDU-percentage' show-title='false' w='99100' x='300' y='17875' />
        <zone h='11125' id='2' name='EDU-percentage' pane-specification-id='0' param='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]' type='color' w='53200' x='40900' y='2250' />
        <zone h='7125' id='3' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='41200' x='47000' y='13125' />
        <zone h='9750' id='4' type='text' w='33300' x='2500' y='3875'>
          <formatted-text>
            <run bold='true' fontsize='14'>Distribution of Staff by Education Level</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Education Grouped'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='79750' id='1' name='Edu Econ' show-title='false' w='96700' x='200' y='20250' />
        <zone h='15250' id='3' name='Edu Econ' pane-specification-id='0' param='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]' type='color' w='48500' x='50200' y='2375' />
        <zone h='6375' id='4' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='31900' x='50200' y='15250' />
        <zone h='19500' id='5' type='text' w='45900' x='1100' y='1500'>
          <formatted-text>
            <run bold='true' fontsize='14'>Staff Counts for Education Levels (Grouped by Econ Variables)</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Unit Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='83750' id='1' name='NationalUnit' w='93500' x='0' y='13000' />
        <zone h='13875' id='3' name='NationalUnit' pane-specification-id='0' param='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]' type='color' w='44200' x='49700' y='1875' />
        <zone h='9875' id='4' mode='list' param='[Parameters].[Parameter 2]' type='paramctrl' w='19800' x='75100' y='10875' />
      </zones>
    </dashboard>
    <dashboard name='Unit Dist Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='76125' id='1' name='Unit Percent' w='96800' x='400' y='20875' />
        <zone h='14125' id='2' name='Unit Percent' pane-specification-id='0' param='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]' type='color' w='34400' x='58700' y='2000' />
        <zone h='11250' id='3' mode='list' param='[Parameters].[Parameter 2]' type='paramctrl' w='25500' x='32800' y='13000' />
        <zone h='9750' id='4' type='text' w='51300' x='2100' y='3000'>
          <formatted-text>
            <run bold='true' fontsize='14'>Distribution of Staff by Work Unit</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Unit Econ'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='43125' id='1' name='UnitDepartEcon' w='45500' x='1800' y='1500' />
        <zone h='13375' id='2' name='UnitDepartEcon' pane-specification-id='1' param='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' type='color' w='95600' x='2300' y='83375' />
        <zone h='42500' id='3' name='UnitDepartEcon (2)' w='46500' x='1100' y='43625' />
        <zone h='43250' id='4' name='UnitDepartEcon (3)' w='49700' x='50100' y='43750' />
        <zone h='43250' id='5' name='UnitDepartEcon (4)' w='48500' x='50500' y='1500' />
      </zones>
    </dashboard>
    <dashboard name='Unit Grouping Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone custom-title='true' fixed-size='126' h='9125' id='8' is-fixed='true' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='31200' x='500' y='10375'>
          <formatted-text>
            <run fontsize='12'>Grouping Variable</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='78250' id='12' name='Unit' show-title='false' w='97800' x='1100' y='19250' />
        <zone h='19750' id='13' name='Unit' pane-specification-id='0' param='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]' type='color' w='15900' x='84000' y='2625' />
        <zone h='13875' id='14' type='text' w='47300' x='34100' y='4375'>
          <formatted-text>
            <run bold='true' fontsize='14'>Staff Counts for Work Units (Grouped by Econ Variables)</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='87'>
    <window class='worksheet' name='Econ Grouping Ideas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Province:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Province:nk]</field>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Age Dashboard'>
      <viewpoints>
        <viewpoint name='Age'>
          <zoom type='entire-view' />
          <highlight field='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Age with Econ'>
      <viewpoints>
        <viewpoint name='EconWithAge(36-40)'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='EconWithAge(41-45)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='EconWithAge(46-50)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='EconWithAge(51-54)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='EconWithAge(55-59)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='EconWithAge&lt;30'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Age Dist Dashboard'>
      <viewpoints>
        <viewpoint name='Age Percentage'>
          <zoom type='entire-view' />
          <highlight field='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
    <window class='dashboard' name='Unit Dashboard'>
      <viewpoints>
        <viewpoint name='NationalUnit'>
          <zoom type='entire-view' />
          <highlight field='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Unit Grouping Dashboard'>
      <viewpoints>
        <viewpoint name='Unit'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Unit Dist Dashboard'>
      <viewpoints>
        <viewpoint name='Unit Percent'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Unit Econ'>
      <viewpoints>
        <viewpoint name='UnitDepartEcon'>
          <zoom type='entire-view' />
          <highlight field='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='UnitDepartEcon (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='UnitDepartEcon (3)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='UnitDepartEcon (4)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Education Dashboard'>
      <viewpoints>
        <viewpoint name='EDU'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Education Dist Dashboard'>
      <viewpoints>
        <viewpoint name='EDU-percentage'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='2' />
    </window>
    <window class='dashboard' name='Education Grouped'>
      <viewpoints>
        <viewpoint name='Edu Econ'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Edu with Econ'>
      <viewpoints>
        <viewpoint name='var/Bachelor'>
          <zoom type='entire-view' />
          <highlight field='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='var/HighSchool'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='var/JuniorHigh'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='var/OtherPostSec'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='var/PostGrad'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='var/TechCollege'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' hidden='true' name='Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Calculation_483222206861496324:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]</field>
            <field>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Calculation_483222206839922688:nk]</field>
            <field>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Calculation_483222206853103619:nk]</field>
            <field>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Calculation_483222206861496324:nk]</field>
            <field>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Calculation_959548236136923137:nk]</field>
            <field>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Province:nk]</field>
            <field>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Age Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]' type='color' />
            <card type='currpage' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Age:nk]</field>
            <field>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Calculation_959548236140593154:nk]</field>
            <field>[federated.0la6che1b4j6f619vbelz1xgjqqg].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='EDU'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Province:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Calculation_959548236145197060:nk]</field>
            <field>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]</field>
            <field>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Province:nk]</field>
            <field>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='EDU-percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Calculation_959548236145197060:nk]</field>
            <field>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]</field>
            <field>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='EconWithAge(36-40)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]</field>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='EconWithAge(41-45)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]</field>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='EconWithAge(46-50)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]</field>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='EconWithAge(51-54)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]</field>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='EconWithAge(55-59)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]</field>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='EconWithAge&lt;30'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[:Measure Names]</field>
            <field>[federated.1nwoixm1d43ddn1303gti1tjs8z6].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Edu Econ'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Calculation_500181074120835082:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Calculation_500181074120835082:nk]</field>
            <field>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Education:nk]</field>
            <field>[federated.1ttla7l0ljjhod1f49zqw19ngzfd].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='NationalUnit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Bureau:nk]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Calculation_959548236151611398:nk]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Number of Staff:nk]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Unit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]' type='color' />
            <card type='currpage' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Calculation_483222206874984453:nk]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Calculation_959548236143013891:nk]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Unit Percent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[Parameters].[Parameter 2]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Bureau:nk]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Calculation_483222206874984453:nk]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Calculation_959548236143013891:nk]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Calculation_959548236151611398:nk]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Work Unit:nk]</field>
            <field>[federated.0jin2qk0k0oi46188ss6y1tseqq2].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='UnitDepartEcon'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]</field>
            <field>[federated.0xi4hs80co6bur163yzrf0611ma2].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='UnitDepartEcon (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]</field>
            <field>[federated.0xi4hs80co6bur163yzrf0611ma2].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='UnitDepartEcon (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]</field>
            <field>[federated.0xi4hs80co6bur163yzrf0611ma2].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='UnitDepartEcon (4)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xi4hs80co6bur163yzrf0611ma2].[:Measure Names]</field>
            <field>[federated.0xi4hs80co6bur163yzrf0611ma2].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='var/Bachelor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]</field>
            <field>[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='var/HighSchool'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]</field>
            <field>[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='var/JuniorHigh'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]</field>
            <field>[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='var/OtherPostSec'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]</field>
            <field>[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='var/PostGrad'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]</field>
            <field>[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='var/TechCollege'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h33que0puhf6r1d17e4j17au799].[:Measure Names]</field>
            <field>[federated.0h33que0puhf6r1d17e4j17au799].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age Dashboard' width='192'>
      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
      mgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJ
      AEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQg
      lCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJp
      EoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYB
      CKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQ
      mgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJ
      AEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQg
      lCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJp
      EoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYB
      CKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQ
      mgQglPZ/JCjC8WjRb9IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Age Dist Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Age with Econ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOydd3hc1Znwf7dMn1Hv1bKsYslyx3QwHRIISSANUglxYEOS/Xa/JJvs7rds
      sl82ZUu+TYDE1BAIKfQkYEI1GGOMq7olq/cymhlNn9u+P0YWNraaJUuyrd/z6JnRnXPfe869
      5z3n3PO+5z2CYRgGSyxxliIudAaWWGIhWVKAJc5qlhRgibOaYxSgs+UQgYg6Z8JjkQAHD+yj
      tbNv/JjfM8TBmno0fenVY4mFRxh/CTZiPPLLX5Cw7Fw+ft2FMxZkGDo7X9tGyvJ1rCzKBuAv
      z/6B1OxljPQcIpZQzpVrM7j30T9z4cZy9jb28I0tn5/TwiwxM5753a8ZJYEvfPpjMzrvzb8+
      S0PrALquUFC2kQ9fcR4vPfsEbf2jYHLx5S/fgumYMwwef/C/8GjLuGvLTex76yXePNBMLBzm
      1tu/Rm6KfS6LNSPkI186q9+h/PJbadnzCnAhhhbl/vvuRTc56O0Z4Xvf/wcOvP4C+w91Eo0o
      fO4rd5DqMIGh8872V2juHODcS6+krDB7XPiHP/pJVCXKe8FBYi4nu998k09+eQvLEk0MtD+M
      T4VE+UTZWuKUo0dR5SRssQAxA8wC1O15kzd212ExCVx49SdZlqzy+BNPo+gCN37qs+SkOAC4
      5OqPcgkQDXr53XMvExpMZdRcwB13nLjhrH/3NQo3Xkbk3TYA9jR08Ldfvws1OMijz77EbbfO
      TAHnkvEh0J5DA2wsyyQ3wUSXN0r7gR1UXPYp7vjqFtaU5MfTHKxj0znnsKkyl1ffPgBAxNvL
      2/saOX/zVcdUfoDAUCf3338/79V3UpifhW9EJSkx3jYkOjR8ofkq5hIfpKP6HQpWn8d5lbns
      qu0GPciO/Z187W/u5Mr1JYwEY2zb9jKf/tJXuOP2z/HqSy++f7Ia4IF7f8G3//EHXHnNh+hq
      OUzToVoeuH8rP/7xfzAcVMaTKqER9rb5uWjN8rEjMUyyDQDZkQGxkXks9fHE218tTENtDcNe
      L2hhet/YySXFJkKheA1VNQ0ARYkXzJJSyEUF8QJZk/P4+/91F++88TI7Xt3Gldd/jPz0RACc
      6QXc+Td3gaHw0CNPsCrfQUenl6SCJPo8Bhc457u4SxzhzXf2E5CakPQYfqObS8quIyE545g0
      /T3t/PaRBwHIKa58/wfZye1/cxdaNMgDj/6R688vZv35m7nuvDJGWvawc389/qZ3IbkArfcA
      A3oiW7c+yr69rWxsOgdDGFMQLYQgLtzwB8YU4PC+HVx+y9c4vzwLgAcefJC8G7/A279+iPsP
      bqetpYcbgQ1V5byzazcmWeRcZxo56ckACILIBZddw/m6RiAUiUtW/Gzd+hswyWhKhKrzr2VD
      ZTb33PMrdlqtpC9bhW1pDmph0EKQWMCdt9wEwOMPP0hETkX0N3PvfW0ovl42fqSSjWtXc8gN
      K3KSGFXfH6s+8/vfkFlYihL0gNlBbsUmnvzPn+EyNtOw9x2u+cwWCi5aM5b62rFPLw9ufZU1
      pQX0HJD401/fwNNWzborPzm/Zf8AwkSWYC3ip8cbJTfVyS/ufZCvf/NrS3OmZwhaNMBICNKT
      412wzz2A7EzDahKQRJEDrz2DVrSZDUXJ9Ha2MuSLUFm5ElkUAFCiIRobm5DtiZSXFCEAuhql
      rq6BnGUrSE08Udeu0tfrITsnHTBoOVSPNTmb3IyUeSv3iZhQAfRYiG0vvkDPsJ/NV15HSWHW
      fOdtiXnm2d89zIAvhsmRyhduvRlJWOgcnXomVIAlljgbWBrVLHFWIwOEQiG0sZmek0VVVWR5
      8kl9wzAQhNn3q2eqnOncw+ngcrkm/T0ajRKLxWZ9nTOBORsC+f3+KW/8XD3gM1XOdO7hYmC6
      +Zyr+3Iq5S26IZAecmNoytQJTzMMfanFXYwsGgXQBmoJP/8NglsvJ/zMV88YJTC0CMG2/0ek
      76mFzsoSR6EOD9P/ta8vrAIYho7S/AqhJ28j9NtPo3s7MZ93B1p/DZFt/4Chz51n6kKghTvw
      H/oepsT12HI/s9DZWeIoAq+9ju7zsSCuaIYSRmn8M8reR9E97Ui567HdeA9S0cUIgoiUUUH4
      +W8Qtf0Y6+X/uBBZnBWGoRMbfpno8Os4ir+DZMlc6CwtcRSGphF8Yzu2zZdOrADDvZ30+4Jk
      ZeXS196EqqoUllXQVH8I0WQi3+nAuaKAlroW1q6umN6VI16itX9EOfAERtiDXHoN1g/9FCmj
      /Jhk8vJLsV73IyIvfAvB4sJy4TdmVeD5RFf9hDruQzSl4ir7PoJoXugsTclAbyfekEZpUS6N
      h5pJTs/FISt09g5RVFJGeNSLyybi12ykJlgXOruzJrT7PfRAgMRbPjOxAnT39mNPSMDr9SGY
      bayryOTd3QfJrNhEtP8wCho7397NZRdehK7r6LqOqk4+ZIlu+w56fzXSqpsxrbkFwZWNASc8
      Tyi+CtMl3yb25k/Aloy0+v0hxHSuNR3mWo4WbCTa8zCmrE9hSliPpgMzGMaNT8gZOocb6skp
      WwUBN23d/RQWlxFw9zISVFhZms/IcBRdDZKcmYk8mylYI0pbWy+5y5fT2tREYWklrY11DGFQ
      VbmS2vpmLLJIdzjM6rVrppZ3GhB87XXsF5yPaLdPrAAuh530vGW0HW4C3WBowE1OcTGe4UEM
      VSVRNrNxXQWHmtuoKl+OKIpTT1Fd/UMkiwPBMj03UHnD5xFCbmLbf4LVmY6pNO5YtdimL1VV
      QR16HsV/EOeKf0Q0n5x/yxFbgq4qWGWRsAa9XX3xilh3CAON5Wl22oa8RPu8aGaJ9KxZ2h/0
      KKIlESnQR9eoQKEkAAKiIIAgARpe9xCSIwUB0DQNTdOm1XDMVQMzl/LUvn4iNTWk/+D76Lo+
      sQIUl1fS2d5G2cpKiAUZHo2Qn52BfbAP0boCuywg2+2Yc81M25BgT0WYYYWzXPy/MKJ+Ii98
      B8HsRF520YzOP9VokV6C7fdidq3EWfIvCMLJzysc6UlFkwWbOX6fhPGKaCAKIhaLmVhIpber
      i8KqyskFTgcpgSRHJ8MhgY0V+dTW1JKQmIxdUqirrSErbwWRhEScVoF+t5+sVBeSJE2r4ViM
      dgD/669jXl6ErWQFqqqeHoYwQ1eJvPAt1PYd2D++FSOjasF7AD02RLj39+iKB0v2LZidxbPO
      z5F7qEQC1FXXQFI2OU6RIY+P9Oxl+Ie68IdVKleXMNATQo26yV5WgkWeX6+109UQZsRi9Nz5
      NZJuvQXn5ZedPgoAYKhRwk9vQXe3YL75YczpJSclZ7b50RUv4d4n0EKt2HI/hylh9ZIleAIW
      mwIE3nwTzyOPkvuL/0G02+Py5ix3pxhBtmD76H2E/vglok9/BeGSv0dwpCFYkxHsKQi2ZATJ
      NLWgk8TQIkQGnkXx7cOafROOwjtP2bWWODUEXn0Nx0UXIdrfX4V22igAgGC2Y/voPYSfvZPI
      tu8en8DsQLCnIdiSEe0piBkrkZddhJhZedJjc0OLEB18gejIdqxZH8dV/qNZjfOXWBiUnl5i
      Tc2kfuX2Y46fVgoAIDrSsHzqCSQ0jLAHI+zFCA1jRHwYoZGxYyPogUGU/Y8Te+cesCQgF5yP
      XHoN8rKLEMxTr0M19BjRoW3E3G9gTt1Mwsr/QBBPXQ+zxKkl2tKCpbQEU17eMcdPOwU4giBb
      EFxZ4Jp4pZph6OgDdajtO9A6dxF54Vtg6Ei565EKzkPIOw/dmRaflrUmIghivMUf/ivR4dex
      pF0Wb/FPA2PWEpMT3L4d51VXHXf8tFWA6SAIIlJWFVJWFZx3J3pgELXtLbTOd1D2P47xzj1E
      jz7BZANZxiCMnFCKbv0LEce7yEWXIi+/FEG2LFRRlpgFSk8vSmcn9vPOPe63M1oBPojozMBc
      dRNU3YRh6KiDTQiRISI9T6EFOrGmXAMaGLEARP0Y0QC6p4NI/d+BJQFT2XXIZdch521c6KIs
      MQMCr7yCefnyE9qgzioFOBYDRatD8b+OpfhqHOnXTjjU0T3tKI1/QWl8AaX69wiJ+ZhWXo+p
      /MOIycvmN9tLzAg9GiWw/U2SP/fZE/04uQJ0NO5HSyoGfw/+YJSyVatorq1FtDrIctiw5+fS
      3dxCScmKU5X/U4Liryfc9SBy8kUkVPzXlGN8MXkZlvO/hvm8O9F69qE2voBy8PfEdv0SKXc9
      Yul1SJU3Iphs81SCuWdoaIj09HR6OttJycrDIuq0d/dTtKyAcCiEzSITjBg4HafXMDC08x0E
      QcB+wfnjxwxDj8/sDf11YkNYxO+mp6uLkD0fIdhPxbI09te2k1RURWyoDZcs0THqo2LlWhLt
      Jvx+Pw6HY9LM6LqOKM5+CvGk5WgBor2/QY15sRfcgSElnnx+1Ahq21uoh17E6NwBshVz1U1I
      6z4P1uSTEhkKhUhISDi5/MyCoZ52atqHqMhJwEjKZaCzFQmd4uJC2nt9mAwFNRakaOUarLIw
      p4YwQ1XxPf0MrquvQkpKmrW8D9L/vX/EUl5O8uc/B0DMs5NI35OYUy5GTr124h7gcGs7JiPG
      cHCYdJuBEothc7lQo9H4InAkcvOy8I36SXamTcsZbiGd2NTAIUJdD2LN/gSOpHNmnx/Zibzy
      Olh5HYq3B73mdyi1zxDb/zhyydWYN34JKb1sRiLnYmH9TDG0GIOjCumJdoZDKpVFTtw9Eggi
      dmcyutKL1+dGdmZglYU5d4YL73yH0aefIfjWDlK//S3k7Iln9WbqDKe0tRFrayfpzjuIBbuJ
      dN+PZM3BtvyfEOQEdF2fwhUi5mcgJCGERxgejbCybAXthxsRrYmkWM1Y0lIZ7ukhOzeXwCJd
      FG9oIULdv0GPDeIo+ltE+f08znV+DCWMUv0HYtV/wPB2IBVeiHndrchFl0xLzkK4QmjREIfb
      u2hrb2d1eQl9vhBm2YxdUokoKs7kbGIBL1aThikxl6xU15z2AAN3fx8pPQ09ECTW2krG976L
      ubDgpOUdjftXW1F6O0n86mpUfzX2gq8g2QqPkXfa+ALNVI6hhYh5dhEbeRNL+rWYk8+bt/wY
      ho7a/ApK3TPo/TUICdmYVn86PgM1CWebL1Cso5P+f/guWT/5EaacHNw//wXh6hrSv/0trOXH
      954zeV56MEjPXd/Aeq2A67KbsaRffZwF/7TyBZoOuupHGXkbZfQguurFmvVRXKV3z3s+BEHE
      VHo1ptKrx3sFrWcPRuWNCOIZdctnhe/Jp7Bt3Ig5Px5+P/UbXyf4xnaGfvwTXB++jqSbb56R
      PMPQUQMNKN73CLywDyklhbSb/m1S+81p/zS0SB/K6D4Uzy7AwJR4DvaCLyOa0xY6awAIJhvm
      DV9Y6GwsOpSBAcJ795Lxz++v+RZEEefllyGlpDD83z9DHw2Q/IXPIUjShHL0mBvF+x7K6EG0
      aD8m10pkxzpi+3aRePNHpjRennYKYOgxtFArin8/im8PgikJc8pFOIq/gyifGRsO6KFhdjf0
      k5+biaQEcPv8ZOQWEw14sJsMdHs6aaf52tzAy69gKijAunLlcb/Z1q4h43vfZfDHP0Ef9ZH6
      9bvGlcDQY6iBQyjeXajBFgTJiinpXGz5X0KyxPc3CO54GyMSxXHU1OdELGoF0BUfWqgVLdSG
      Gm5Dj/aDICNa8jAnb8KafdOi9dNRowqe7mE8XcN4e92k5Kez4uLJV3AdWREWGPVjMsuAwPBo
      kFWrqqitqyfs82BypbK2Kn9+CnGKMGIxgtu3k/TpT02YxlJWSua//AOD//ZDhn78E5yfzkGN
      HQYjiuyqHKv0tyEIRxRDJ9bVRaytHf+f/4z9wgsRp5iWh0WiAIauoEV60MKdaOE2tHAnhjqK
      ILmQ7MuR7UXYks9Hssa3YJrrhRazxgBfvwdvj5uR9gGCI34ks4mknBSS89MpPKcEi2PqFlsU
      RURRxJFewIYsieqamvjaXEMDJJJS0wkEQ+gGiKdx6PLgrl0Ymo79/HgLffzz78ZQvSCYSfza
      JvwPH8K7tZvUb38XS0oehq6jud2E6t4j1tpKrPkwsbY2jGgUMSEBc3ExiTfeMK28zPMsUAxB
      6UcNtaOFO8Yqug8ECcmaj2QrQLIVItkKEE2Jk8hZOHuCpmj4h7yMjlX4wJAPNaaSlJtKYk4q
      KflpuDImN+hMxJF7GBwdoatviISkVBIs0NEzyPLSMkI+LwkOE56wQEbKws0WnewskK540cJd
      DP/wMcRsP/br0jG0EAjypM9f83oZ+MH/BV1HSk1F6WhH9wcQHQ7My5djLl6OeXkR5sJC5Mzp
      x2Ca92nQ2GgNivs1JHvRWGGXIZpmXlnmSwEM3cDTPYy3exhv7wjBET+iJOLKTCIxO4Wk3FRc
      6Ynohr60JPIEhAdeRAvUoccGABBNyWj9Ir57asj8v/8bU0HJtN/b9GAQzxO/Q7Lb45W+aNmM
      KvuJmPdpUNG+EkdC1XxecsYYusFI5yA9tR34ekdILcwgKS+VsvI8HBO0urqqz3MuTw8kRznm
      pPWI5vTxOXj3K7/CUrESy/J1M5IlOhwkfvELcz70nVCaZ6ifAbeXmCYgxPxzExlukWLoBt4e
      Nz217bhbB0gtyiB/3XJWX79pobM2L/hGhvBHDfKyM+bUGU605iMdVWG1UT/Bt3eS9s3FE+lv
      QgVITs/C5x3B6kwl4FPnJDLcYoroZugGowMehpr6GGrpw5HmImdVIWVXrEEYe8Oc7jXmqlwL
      s1uVTkQBxd1No99DYnouhxrqx53hGpraj3GGmw3B7duREhKwrVs7R3mfPRMqQEdzPfa0AjKS
      nRwc7p+TyHAL8fIaDUYIuv0E3aP4B334+j1oMQVRErEnu8iuLKB0cxWidPJeqnNVroVwhgMR
      1BAB0YmgKGQlnyJnOMPA/8or2DdfimYYcBINxmwbGkM3iPhDBN1+Qp4Ao4PeiRUgMTmVgcEe
      1FgqZSVFcxMZbq4wIBaKEvGHiAYiRIMRov5w/HsgQjQYJhaOIYoCJpsFV3oijlQXWSvzKblk
      FSZb3Haw6KZTFwIjyv4DDRStKCI1IZF91bXjznB1tdW4krOxyGasJm1WkeHC+/ahjXhIuPqq
      Y4ZFM2Gq56VrOrFQlFgoQsgTJOQJEBzxExrxo0RiiJKI1WXHnuLCkeIkr2rZ/DvDiQgoUQU1
      qqDGVNSIghqNxb+PHVciCkokhhpRiIWjqFHluOGB2WbB4rJiddowO6xYnFasLjsWpxWLw4ps
      mTqCw2KLMXqmzQIdfV8Gf/xTRLuNtK/fNfV5MRUtFq8HajSGElZQYwrRcBQ1rBALxhu6WDiK
      EhnbeccwEEQRi8OK2WHBnuTEluTAkerCkewab/SOy9/Mij47RtoHOfxWHSaLCclsQraaMFlM
      yBYT8tj/NpuZRJsFk82MbDFhspoxWc3j4/LxjJ/tLfdpgLt9kLAngDDqRTh4EN8lN9L7p3dR
      o/EKrsZUNPUDmzMaRrxumGVMVnO8jljNyGYZ0SzhSHGSUpCO2WHBYreesGLPhHmtRSnLMrhg
      Rc58XnKJBURTVGSzCXXfu5jz88m7/jIkk4RsNiGZ5finaWJHtw9yKhq+pWZ0iVNGRkkOkq7T
      84saXJ/+FM68xeGhezRLMf6WOKV80O9nsbGkAEucUgLbXsK5+dJjAtIuJmY0BDKUIO/urT/j
      LMGLDXdvB10jASTJjFWErHQX/X6DksLsecuDrsZmbQmOtcYXpadOY+ZnoZhRDxB095BZspoE
      q2ncElxRefyChiVmR5/Hz9pVlQh6jGjYT01z97xWfoC6unqy0lw0NLXT09VDY309smVmMy7B
      l1/GUlmJKXt+8z4TZtQD2BLT8Hee2BJ8JqIbOppuoGgaqq6jaOrYp4aia2hj36OKgmoYRFWF
      qKrGj2nq2HcVw4CS9Aw2FRRN67pJVpnh0SCaZmC3uVieItI94CEv8+TiDZ0Mgiyf0BI8XfRQ
      iPCudxeV38+JmJECSLYUcpOjJ20JVnUdXzCAZugYRvx/3dDRDQNN18fTGIYRN5cDqqaNHwfQ
      xvyODCHuO2OMHTs6jW4YGIYxLlvVdVRdj59rGHGT+th1JnM/EAUBURQxSSKyKGGWJGRRQpZE
      TKKELIrIkoSEgNNiIdXhwCLJmGUJs2TCIsuYJWnGLg55xWV0d7RTtnIluhLFbrfj9/tnJGO2
      2GRxQkvwdBDMZpJuvWVR+f0cjTFW5wTDMIxQKISmaVOfNQmhUAj7FC863d4Ravt7kQQRQRCQ
      RDFeyQQBeSxCmyxKIIAkHPl/7HNsTagsiui6jmm8YglIY0YyWYynOSLzyJ8kikiiiCyKiIKI
      JArIooSmaUiTLLieLnMlZzr3cDqcamvydC3Bjf19BJTYMY2RNtY4Hd2gAai6Nv6/QbwR0480
      gkf9dqS1PXL+VBgYCBzfAAkCiAhz5woxHRZbhVtscuaLaDRKLBab1fkWy9Qvw+3uYSKa+oEG
      SUQQ3m+s3m/44p/CUelEQTjmNwwDWT5y3tw8t3lVgKmGHGe7nDONuW4YToW8eVWAJZZYbEh3
      33333adCcCwcoLmllWBURdLCHG7twJmUwlBvJz2DI6SlJtLc2EAoZpDomjh8xVRyUhLtNDUd
      xhcIk5I08UJ6r3uA1vZOXEmpdLYewheK4bJJNDY2gdmOw2rmcH09zvR0Jmtjerva6erpnVAO
      sQCtbR1YHYmYTdKU6cO+YTq6urEnpGCWl+yS880p6wGUmIJsktl/4CAmk0RV5Upq65vAMMhN
      lOkbVXHlrMDX08yqVatOWo7fnk9uip3qA/tYt279hHJiMYXwSCe9ngiiMwfV14OAQWllFY11
      tSzLTWfve4fYcPUlTLZMeyo5uhLBnpBK0fJlSIIwdXpNpbQ4l/a+GOUlubO44wtLR2szwWCQ
      zMISelubEa0OCjMSae0dIiEpDUnx4/MHyC2uJNkxtav6UH83bq8fqzMZNThCIKxQuWol9bX1
      mGwuctKc9A97kM12VhSdOJju0QT9Hrp6+o+Td8qaHEnU2LNnDyXlFYiCCIIEKAiChNksEQhG
      sVhMTDV0nkqOqhvU7nuP/OWThyKP+EfoDcgsS7MhWyyIgoAqCEjxiST27q9G0MMMDY1MKmew
      t4P+oGlCOVFFpzA3g7r6pmmlN0sC7d3D2Gynz0v0iShcXoLNJDDa34Y9pxRRi9HaN0jVqkoC
      viFGgxFWVa2it71lWvLSs/LISE4gFlOIqDqrClPYt3c/KctWoathklIzyctMJRyZ3su8w5V8
      QnmnTAEGOjswOxNwDw+TmuigrraGrNwSzJJGc3+E9esr6G2qQbZMHr1rKjnpuAkLdjzu4Unl
      dPX0ImoRVHsWod4mDNlCcU4GNbV1uJIyuPTyqygtLSUrPWVSOf0Dg6CGJ5STl51Oc2s7GZlZ
      00ovm0xg6JjMizPC3XQ5VHsAZ2YxuZlJ43tIyIBmAEZ89tLQoiBNz5Wir6MFT1SgdHk+GBCN
      KjgTHCjRGBjgGeimfTBA1crp7U40MjJyQnlLL8FLzAmBQACnMz549Pl8ADhtZkKKgaGDYCiI
      ApjtCZikqWfMTiQvITGBUd8oAJIkjf8+HTQthiSZj5O3pABLnNUsTTsscVazpABLnNUcowA7
      Xn2BF197+6QEGWqYn37/e3SMxACDpurd/Oh/tk6Y/vUX/8CTf9oOwL7t27jnV1vZunUre+tb
      T+r6S5wsBvX19Scd2ibs93C4vXv8f5+7n30HqgnHjo3f43P3s3fvXvbu3UvvkAeAoM/Nwepa
      FH3hRuFHKYBOnzuEp699/GZ4h3p47NcP8dSzz9IzFMDQFbY99yS/e/J5IuqxmX7x2afIX1ZA
      MKYDUfwxO7mpJ57hGe6sw40dX1985qaxa5ivfnULW7ZsYUPFmelavVjxddfx7FPP0dB7Mt6m
      Bn/8/R/40wt/AaC1+h3+8MKbqNEghw53HJPyjW0vETmqykS8ffzi/t8QGh3m5798eBYlmB3j
      CuDpqCaxoIrK3ATqun2AwuOPP8kNN99CRbqJ9qEAr/75GZatu4SrL6zkmedfGhcy0HoQPbWc
      /PEKb2XDxgmMW4bCn1/Zy8euvWj80EhfKw9t3cqzf/krkaVAs/PKjt31fP3v7uDgzjcBGB3s
      4D/+4z/Zev/9/Oy+RwCDpx67n19t3cp9D//umJ5i/1vbWHnhh3FZ4jaMnQdbuH7zRqzOFFav
      LD7mOgFB5sKNG9iwYQM56cns3/kGN37uq5x/0WbKk2EgPC/FPY7x9QCvvrydbsVGq+oj0qqy
      6tYLSF22hkSHFY81vrlDa1srrf3e+IkJ8e1o0GP8+nd/4fJrrqG2rpsEcw2lWed8YKGByhMP
      PQTJBWQYAziyCjiw7yC9vR30u33c9a3/A4ZBV0sNv/3Dc9x2y8fmqfhnOzpBVcTlSEYPe9CB
      V159izu++Xc4TQKP/+Zxou7DtI9a2HxuJbW7XqPFHWNFqpmof5CGAZ1bLs7j4M64tL72Rqqb
      8rAJEX757n4+9aGLaO8ZYNmKcvJS7Gz91a+IRYJsuPyjeL0hihJtACQmmPD6Y2TOMsbPyTBW
      TzXClnT+9vZbAHj4wQfRLem4Wx7h7V02Gne9Q/nVleTm5FK44QrKcpM43NE3LuSqa65h8nZb
      5jO3bQGgs/UQQ54AEBj/ddfOHaw753xEQcBkOr0NQqcTwy37qGvuZOvWrXh6O6ju8GCWBcJR
      BafJhKppGJqGNjZGX3Xe5WQ64oOG93ZsZ2hghK1bt7Jv3z5Wrr2AtMwCLr98MyYBOn7z6DHX
      uuSaj3KpIAAqjzzyW9YXpdLeMUhWWQbdg2FWJS/McxcMwzC0kJuGnhCrSuJ7T7XVHyCpqAqX
      GKW2vgljtJtI1ibOW5HIi396nn5vhMuuupai3PRjhHU2HcSWU4kt3Mtvn9k2fvyiK6+nYvkH
      A2JF2Le3lfUbKmhvquGNHe/iSs/nhg9djXkahpIlZs8zT/yGq27+LE6TgB5x8z7YFTIAACAA
      SURBVMhTb3LLDRfx0K+fwOJw4fbH+PY3v8Jj999DQDcjAB+75ctkuI7t3x948AFu//Lt9LfW
      8vizr+CwmSlYuYEPbT53PM0fHrkPT0wiFg5wwTWfYH1xKvfecx+S2UpibimfufGqeS59nEkN
      YU//9kGG/CqjgQh3fuMbOE1LFfNMxzPUj2hLRFJGeezpl7njy59d6CydUpYswUscg8/dx4vb
      XiaKhRs+ciMprtN7O9apWFKAJc5qlizBS5zVyDD7RdIwvYgGi2kR+mLKC8xNRAhJkmYkYzah
      VqYbqXmu10vPtTwZwGKxTGuV/1RMZ4OMxbIhxWLKyxHme3OM2VzvZPcKni1zLW9pCHSK0WIj
      PLD7TXZ2tC10VpY4AUsKcAqJDr/Ce3t/wuERH4VJ8xfWcInps7RBxilAj7kJdvwSzBlsj25m
      bXYGuYlJC52tJU7ABApgUHtwHyZHCtkumeYBHybJhEOKLyh2JGWhBH1YJBV7RhFpCWf2XPFM
      iLpfJzr4Avb823hnyMxorJFrShd/BO2Qd5jWviGysnIZHe7BH4xStmoVzbW1iFYHWQ4b9vxc
      uptbKCmZ3jrc04ETK4DqY9AdI0Xz0Bwys371Kupq6whrsGrVamrr6gj73JhcGRQkWKe9d+xi
      2ih7rvNiKCNEeh5EkNOwr/g+EU3g1dY3uLCgCJfJNOW1ZhubdbY0tbRidyWgqBqhmE5VSTb7
      9+4lqaiK2FAb4ZBG43u7qVi5dtobo8Pc3edTJe/ECiA7SU52kuECd1Si3xNA03UkdEIBD5LZ
      SVKqGTUaIBjVcFikae0du5hmXuYyL5rvLaIDf8ZecDuyM97ab2+pQxJELisumdZ1jp5KHerr
      pqNvhI3rV9FStwfFUUy6OXBKN80wmW0Ul5RTX1uNIIgosRg2l2s8woOARG5eFr5RP8nOtGlt
      jA6LfxZoAkkypcV5eEMqVSvS6elsp7R8JRZRp727n/KSQsKhEHabBX8wCpbFuf3NqUbx1xPp
      /QOiLQdX+b8jiHGPRk84xNsdbVxfXonNNHUQqCNomoYoiqRn5+H1hwCR4pJimnqPbJqxitq6
      OqLRKDXNPi44d+OclaWsdDmHGurJzC2EqJ+WwQgrKypoP9yImJRKgtWMJS2V4Z6e+d8Y/RTx
      xN5HJ34JdiQk40iIf88tWDZ+fPmyeBSuIwYXl/PsqvyGoaP49hLpfxbJmosl73bMjrxj0rzU
      1Eiyzc65+YUzkj2ZQe1Ub5ohWxxUVBzZ6iqRjLGOpWhF+THpcnJP3+h1R1PTd5A/1z2zNAs0
      XQxDR/G8TaT/GWTnSpzL/x7RnHLceLTL62F/Xw9fWH8Oknhys8z9PR3ohsHwyAieoWEMIH1F
      GUPdC7tpxplCIOrnvh0/Y1PhBUsKMBWGoRNzbyc69AKysxJnyb8gmk4chFc3DF5saqAoOYWK
      jKyTvmZWbiFHzk5LeT9SXV7h2BZLprHed54tx2cKD+76JaIg8uXz7lhSgIkwtAjRoReJjezA
      nHwhrtJ/RZAmH+41DPbTOuLmrvMvnqdcLjFT3mp5nd0dO/nHq3+A0+JaUoAPosfcRAZfQB3d
      jzn18mNebidD03VebGpkbXYueUtGr0XJgL+fR3Zv5UMVH6EiKx60YUkBxlBDbUQHnkeLDmLN
      +gi23FsRhOmP4Xd3d+IJh/jShk2nMJdLzIbnap4kzZHBJ9bdOn7srFYAw9BR/bVE+p9GEM1Y
      s25Cdk4eZv1ERFSFvzYf4sLCIlLtk0e7XmJhaBio4532HXz/uh9jlt7v0c9KBTAMHdX3DqGB
      +IyOvfBvkCwZJy3v9ZbDGBhsLpojFwFDxzvqJykxEc9wP7rsJDXJQXdHO2k5BcfMAi29CE9N
      MBbk3h3/zVVl15Gf/P7UtK54J1aAoHeQN95r4OLVy88oXyA12ES4+1EESyHO0n9FlGdXgUaj
      Ud7uaOPa0nLscxTjf2igj75hH4k2gY6BIKLST8BpwZFRQGN9PQ6rFZdNwHBkMpfVv+G911DT
      14CnDVVVKSyroKn+EKLJRL7TgXNFAS11LaxdXTG1sEXEw+/+ElVT+ciqjwOgq34i/U+j+hsm
      doZr7xmmIDuNzuHRM8IXyFBHifb9Bl0JYM27E0zp6Ijos8iPAfz5UB1Os5lzcvNmVbYj91AU
      RdKzcvGOBlEDHmzJGZhHIgxENTYlOOiXRaJhP0NenQvOnTuntJH+TpIy8hg2QDDbWFeRybu7
      D5JZsYlo/2EUNHa+vZvLLrzotPIFerttO++07eDvN38Pi6ES7HoELdCAKf1G7Fm3nlgB1PAo
      MUVnYKCHFfm5p7UvkGHoxEbeIjrwPLa8L2JKqJqTvOiGwVO1B2kcGuLL55yLZZYBvSRJGrcE
      9/d00NXVRXLaWnydDRiyiZLcVA7U1mGSLZhlM6sLE2ho6WRl8dT7Y00Hrz+EEvQwrBikmFSG
      BtzkFBfjGR7EUFUSZTMb11VwqLmNqvLlp4Uv0HBgiMf2Psw1ZddQYXUT6XgOS8b1OPK/OJ5m
      0qgQgWAQp8NBT2c7KVl5475ARcsKjvEFcjmnNx6dbwVQAw2EOh9ATliLLfsTCNL7Q7XZ5EU3
      DJ6rr2FPTxe3rl5PRdbsHdIWxXheixJQRGQtzPBohLzsDNyDfYjWBOyygGy3E/L7cbpcBBb5
      kkjd0Pm3l/4Jr7eW71Uuw5l+GZb0646pAzCHYVEWgwIYuoIabELxvoseHUB2VWFOuQjRdPy8
      /MnmRdE0fle9n9YRN1/eeC5ZDueclGlRKMAMmG5+D/bsJycxl3TnyU8yHM1Uz02LDqL6q3m4
      dgcHB9u5+/Kvk5FceVzFP8JpPwukx4ZRvHtQRvejx4aRnRWYEtcju1YhiNP3xJwOiqbx6P73
      6PJ5+eqmC8h2Jczp+PZM5OVDL3BosIFvXPotqrLXzLl8PeZGGa1G9VejhTsQzWnU+g3e6jzI
      t6/4ZzLTJt46F07DHsDQwsT8TWiju1GDLQiSHVPSJsxJGxHNadOWM9O8qLrOY/v30O4d4Ssb
      zxtf4jhXvdqZ2gOEY2Ee2HUP73bs5LMbb+PaldfP6rpKeAg9VI86egA11I5oTsHkWo2csBrZ
      XoSqKXznT39LQfIyvnnpt6aUt2h7AEOLoEW60cLtaKEOtHA7hh5BEK2I9hWYk87Bln8bgnDq
      99fVDYMnaw7QOuLm9nPOm3J9r65q+IdHGe0bwdM9TNDtZ/0nLsLiOH2mi+cKk2ji65f8bwpr
      nuKxPQ/RMdLGl8776jHGqA9iaBG0aD9auBM90oUW6UOPDYChgykVk7McS+ZHcNiLjjv3xYY/
      MRJy890r755W/hZcAXQ1gB7pRgt3oUR6GA6GSDHaEEQLojUXyVaAKfl8bLm3IEjxePJz/WI1
      af7GZntqBvr44vpNFHwguoOu6nj6hhkd9OLtGSYwFN/G05WRSGJOKoUbS3BlJCFKZ3cAjo9U
      3URhShH/8+ZP6fP38s2Lv0mCGEOL9KJFetGjvejRAQw9iiCaES05SLYCJEcZ5rQrEc3pCII4
      6bP3hEZ4ruYpbqj8GGnO9BOm+SDzOgSKeg+ih5vQI/1o0V7QYwhyIpItD8maywudUXYNCZSn
      Z/ChsgoynSeWN19LInXD4Nn6Gvb2dPG5NRvIk+yM9nsYHfAwOuAlFooiiAKujCSSclJIyk3F
      mZZ4UpX96Pt3YO9uNFWluKKKxrrGRWmImu4QSIkMowfr4o1ctJ+ekcPc1zpCTI3wN+VlFGef
      i2TNRrRkI1myJ3xZPcJkz+1Xb/+cuv4afnrjz7HI0wv0Nq89gB7pRrIWYE46D9Gac8zw5bB7
      mHeH3mFz0Qoahwb42dvbOb9gGVcWl86ZhXUmRIIRXm5vZndHO2u6NNxd1YQSHSRmJ5NSkEHR
      uWVYnLY57Y2OGMI0TSMpwcqh6moyyzceZ4g6nTAUN4YWQHZWYE69nNKiDH64Osr/vPlTflpf
      y1eSPsRF2RfM+jrNQ4d4s+U1vnnpt6dd+WHCHsCgvaWZkCJQXlLIoUPNJKfn4pAVOnuHKCop
      IzzqxWUT8Ws2UhOss3oJjqgKP3t7OzkJiXx+3TnohsHeni5ebGpANwyuXlHGpvxC5LEVVqeq
      BwgMj9Jb28Fgcw8HhADdeRY+uWot6/PyZ1ymmXL0/QuHw3h62xATUhgcUTAiI2RY7ZhzUujt
      8VFVPvcbCQa8brr7h0hKzURUAgyPRigvL6G9uRHRmkCqzYIlLRV3Xx/Z2dmzDo2oGzpP7P01
      f6l/jusrP8an1n0WSZz6fe5E8nRD5+4X/wGzbOGfrv7B9AvNJHGBcvOX09lUw4G6JsorKmlt
      rGMIg6rKldTWN2ORRbrDYVavnf3U1l8a64lpGh+vWA2AKAick1fA6qwcXm9t5i+H6tnZ2c71
      5RWUp2dOKisYi+IJhzFLEhkTDKHGS6kbeLqH6avvxNM1hCMtgczSXFrSBbq72ri5ai3rcyeu
      /KeKcMCLlJhNZloyJqMP0bpi3BBlzjVjAHO9VYnF7qKsxMXB2iYkCUpzE2mor0N25aD6ejCF
      LKhqEEFwzsn1REHk1o1fIj95GQ++cy+dnna+ccm3sJtnvsb87dbttLoP88Pr/2vG506gACId
      rXWYk3OxeYfGtiwSEAUBBAnQ8LqHkBwpCDArX6Cm4SF2d3dy65oNWCXpmN8l4MrlJWzKLeDF
      5gYe3rub4uQULixYRkzXGQmF8EbCeMIhvJEI3kgERX8/vs4lhUVctaIMEYFoMIx/0EdwJEBw
      ZJSQJ4ASipGQmUR2RQGll69GEAVebWlme1sbH69czdrM7Hnzbzo6LlBK+vuW5dSMY63Mp2qq
      VIv4OdDczZq1q2lqrMdkNhMJBElKs6ALAgYaXZ29rCyf27hAFxReTLYrh//e/iP+ddt3+fZl
      /0yibeJZtg/KCythHt/7CFeWXkuOa2J/LDWqEBgeJeQNEPYECfuChLzBCYZARpSdb+0hNTON
      3OwMDrf3kJCYjF1ScHtHycxbQcQ/gtMqEBETyEp1ndQQKKwo/OeO1ylOSeMzayY3WAB0ej08
      11BLt8+LKAgkWKw4RRmHLuIwJOwq8U9d4PDwMHXJGqmCmapujRSXE1dGEo4UJ44UF+YEG87k
      Y/P7emszLzU18vHK1WyaZkSHM8UOcKiuGmQLrqRUIqPD+INRyldV0lRbi2Rzkmm3Ys/PpfNQ
      E6VlZXPuCjEcHOLfX74bwzD49hX/TFbCid1LjsjTNR0lEuOPdb/ltYaX+N7auzHrZpRQlFgo
      SiwcJewNosZUMAxMVjP2FBeOZCe2ZCe2RDv2JOfCGcJ0VePJhmoa+vq5o3IjFgSUiIKmaKhR
      BSUcQ43GUKLKUf8rKFGF0UgEh9mMJIqYLCbMditmhwWL4/1Pi8tG0Cryu7oDBJUYn6paR1l6
      xgnzArCzo43nG2q5saKK848KAzMVZ4oCzJSZvgOoMRVNUdEUDS2moCkqauzIdw1N1RjxDnF/
      8y/REg1uSfkszlE7aiQWP1fVwDDiwz9BQBAEfHj5rfwEN2R/lA22jZjsFsw2c7w+2M3YEh3I
      lsm9AeZVAfb+4S3CoyEAuohwME/kMlLIiklIJhnZbEI2y8hWEyarGdliwmQxIVtNyBZz/LvF
      hKZr0650UVXlmbpq6gb7uXnVWtZkx3erPLrivtvVwTN11VxTWs5ly0tmVO4lBZic/kPdHH6r
      Lv58TRKiLCFbTUgmeeyZy2PfpXhltQk83PoAh/saueucv6eqcC2y2YRkir8gH32/f/zq9/GF
      vfzgQz+d1gv0CTHmiNHR0SnTKIpiGIZh+CMR419f3Wb8oXr/SV3riJyZsL31sPHtF583nq49
      aMRUdVzG7q4O4zsvPm+83Hxo3vJyIqZz/xYT083vydwfRY0Z//36j4wvPPYJ472OXSeUt69r
      j3HLrz9q1PXVzFj+0SyIefLp+mrMksQNKyvn7ZqXFBVzy5oNHOjr4d5338YdCvJedydP1R7k
      ihWlXLmidN7yMhWhUQ8d3fGNyN2DfXhGg0RDITRmt63R6YIsmfjGpd/i4uLL+Nn2H/PG4VeO
      +V3VFB7b8xCbCi8Yj+5w0tea1dknwf7ebuoH+rn9nPOxynPrrTkVa7JzyElI4LH9e/j5rrdR
      dY0rVpRy1YqZL4Q/lTS1drI8w0ZTu0IkCnq4mUybA1NOCkMDAVaeRkOlkyUeuOpOXJYEtu78
      Bf7IKDeMLWmcqb/PZMxIAfq72nD7/GTkFhMNeLCbDHR7+rTXBI9GIzzXUMv5BUWsSJ2+5+Zc
      ku5wctf5F7OtqQGH2cLlxTMb859KjliC0SI0d4XISEvAlLaCaL8fBY3q/fVsnkdLsKEEeXdv
      /YK6Ynxy3a0k2pJ4dPcDeMNeriu/Ycb+PpMxIwUYHg2yalUVtXX1hH0eTK5U1lZNz1CkGwbP
      NtRiN5m4rmxhN4wwSRLXlZTPm0PddDmyJFLTNOwOK7o5mcHDNYgmE4mymQsu3ERtdQ3r162e
      c0PYiQi6e8gsWb3grhjXlH8YlyWBe3f8N++0v4Xd7ODDlR+dE9kzqwEGYGiARFJqOoFgCN0A
      cRpPo3fUR9PwEHeceyHmOdhWdLGh6ToxTSWmacTUsU9NRRn7vzQ9E/M0FW7Dpvd9Ywrzc479
      bd3qOc33ZNgS0/B3nnhN8HxzQdHFOMwOfv7mf/Lli+6ckb/PZMxoGjTgHaajZ5DlpWWEfF4S
      HCY8YYGMlKkNYbphMBzwk+FKmNa1NF3HwMAw4t8hvigFQFFVBFHAIG4ZPCJfHytK/Nz4p2bo
      GIYx9j2eRtN1FFXFEEDXDVRdQ9V1VF2Ppxs778j/qq6jahqaoSMgYGAgjLXBxti+tZIoYJJk
      TJKEVZYxSTJmScIsyZhlmcrMbORJFH+xToPOdk1wVImh6PHnoo5Z6T/4PI9+XkeeuW7EfzMM
      A+2o56pqKpIkx9MaxjFyjpZ95HpH6oVm6Oi6Mfa/Pl4P5tUO8HztAfzR6LTkSaIQr2RjlQtA
      HpvrFQyQxlyOjzjICQjj4cjFMUOJJAqIgogkxH8TBRFx7LhggEmWkUQRWRTHPiUkQUCW4mll
      UUISBWRRwjR27IOcznaA2cwoTXdj71b3ENV9PcD7z+r9z/jzPPp5HWlYxp+rICCN3XdRFMDg
      +LRHNSzyUSHpZVFEEOIuPNL4s49/ioKAKIpxBZiLneKng67r8Ze8RSBnMeVlrpjpTvHzgaZp
      k278sdDy5qwHmA6LqdItprycyRwZIi5WefOqAEsssdg4ZU1XOOCjtaMbg/etmWDQ2d5KTNVR
      Y2HaO3tmLUeJhDjc2j7+ojQR7qF+fIEwuhqjtb0TAwiOeugbdAPxmEJDw94pcmPQ3dE6qRzP
      8AD9QyPTTt/X3YFnzD/qdCcWDtDY2EhHTz9+zxB1dfWEYhq9Xe00NrcCOs2N9XT1Dk5Lntc9
      QGNjA0MeP/09ndQ3tWBg0NLUQGdPP8HRERoPNdI7di+noq+7g8bmVnQlQn19HYNu36nrAQYH
      BnCIITo8OqphQg+PkGgzkZRbRGdrK+gKxYWZ9PokSpdNvMhlKjk5WekkJVhpaBlideUEsTL1
      KIPuEN1d7ZgkgeLiQtp7vURDPlKsIq7CVXg6G/GGdTasndi0Hhz1oJvsNDfUn1CONTWTkVGd
      5XkpWCyWKdOLNhsRUybBgRbWrls321u+4CgxBdkks//AQUwmaWzxVBMYBrmJMn2jKq6cFfh6
      mlm1amoXhlhMQUKhtqkTEYXlaXbaRsLYU5cTGmqltLQUkyxwoKaBdWumnh5WYgqH6mrBIlNS
      tormhrpT1wNYZWjoDpDr0nClZWI1mfCpBslOO5IEsmzCmZyNEhyelRyX3cLB2sOUlE4yNy1a
      UIIjpOfkI8gydmcyuuLDbLKRleaip6sL7KlYpMnHlo6EJHpaGieU03yojWAkwJ791dNKP6pa
      Ge5qJqafGe8QkqixZ88eSsor4jNmggQoCIKE2SwRCEaxWExMdwgf8Y9woKGVVZVliIKIxWIm
      FAhhspjjS+KUEHv21bKyYnr+QAP9nSTnFiIaIiYpPsN4yu78nn37cdnNiI4MBg/X4I+q5CQ6
      qa6tQzQ5kEWd2up9JGVMHtx1Kjnv7dmDy+UkHJp4GGFEfRxo7EBTYthkkbraalxJuSgRHzUt
      g2SnuVBDXnp6elH0CcXQ21SDOypOKGftupVo4QDS2LToVOlTzDoWhx1VOzOiyw10dmB2JuAe
      HiY10UFdbQ1ZuSWYJY3m/gjr11fQ21SDbJneJiJdPb04rSaG3T6sskBth4d1G9Yy0l6LZLLT
      0dmNy2XH7Z7eEMg7MEDA46EwP5Oa2jocCSlLL8FLnN2cGX3vEkucJEsKsMRZzZICLHFWs6QA
      S5zVjHtxjQz2EhVsZKcnT5b+OCJ+D3VNrQCkZuayLC8LgJ6eHnJzc49L31Czn1BMB9nKhjVH
      lkQaNNTUUVK1auGj9Z6FvPXy8yxbdwX5aTPb4rX2vbfYub8BgM3XfozSPAe/fuAxooArvYDP
      fOza8bSx0X4e+d3zAGQXV3LDFRfSUr+PN3bu59zNV7NqxfwHIIOjeoBXX3uDV15+acYCqne+
      TM+odtSRCE889BA/2/ro8Yn1AC/9dcdxh2vfeZn77n2MwIyvvsRs0WM++jxhdmzfPn4sFvaz
      f/9+unoG0AEMnab6Gvo+YCnff6idLVu2sGXLFkoL0gn2teAqOYctW7YcU/kBOhurqbrkRrZs
      2cINV1yIv6+J1w/28sUvfp69Lz9N3+ipd8Y8ESKAHvWALY0kk85oLD4r+sJTj3HPvffxi//6
      d3Y19NPXUs3//Pxe7v35/2NvY9e4gO5hlas2b2LDhg1jrb+Vz9x2G6tLj5/fjwx1kbfmAjZs
      2DDe+seCw+xtC3DpusWzNPFsombnDtZcej1GxIMBKIFhfvaLrUQVld88+DAx4LnfP0rX0Civ
      PP0YzX2j4+eOuofYu3cfA+64YnR3dhP0jVBT34iqHzu73tXdh3eok4amVnQDfEP95BeXIckm
      Pnzleew52DSPpX4f6e677777wI7XyF9/CRVZMm/WDFKWZ2ZXzSC333YrGeYYPjmDPW+9zLpN
      m8jPz2P37t2cs34tACH/ANu2vcK7u97GHZFZURhfwVRdU8Oa1asBnZr9+xj0hkh02Nj9zlvs
      ee89du6pY8OGtTz/1FN8+KZP0HrwAMs3rOfs20JiYfnztr+S6rIx2FKHkLkS/+F3KTj3Rs6p
      XM5gZwela1bz1OMPo2gQi4wyGDazpiweNS8pwU5UUdmz/UWGjSTKSooR9SgB7xBPPLONNSsy
      +fXjvyegylStrkQJh3D3d/LnV3dx1XUfYv/rf+Ltd/dQ31CHM7uUssLJ476eCmSA/fWHUJvi
      jmmjisQNFy5DVeILV9SxmJWqqoydInL55ZeNC1h/wRVsuPBKAB5++BG4ZMOEF3Ok5bNlyxYA
      Xn3yIdq6u6g73IX71w9Sv3cfg0+kcOdnPjanBVxiYrTwMBE93uRUbNzE3h1v8NGLlvPMrnep
      yr2Ert5+APKKq7jt9tsRMIhExhY0aVEy8kooTbBTsTyVZ15vRyvOYP2GDQjA4eY2bOkF48/b
      6/WyYUMeYNDywIMgSNz82S8hCAJ/euIh1lYtTFgaWQsNYc2s4Jab4mO2Zx5/GLfioCzbzL33
      /QojMMDaD6/mys3n88cX38Zlt5BXtoay5fEhzovP/JauoSCaEqF842UEhjr57TPbOFhdTTgY
      5KIrr6dqXVwpWure45Ud+wADTU7ksvx8/s8/fw+Ap7Y+yBVLlX9e6Whq4tqbPs2KzHjE5/6h
      v5BcsJr1PW4effxJJEt8R57Lzl/Dvff8//bO7Dey+7rzn7vXzn1v7s2tyW5Rki05tuLIMRzY
      Y3jsyYMDePKSFQkQPyTzMMA8GQEyGMw/EGAGgzwEGIzz4sBjK4PIjowgspJIUau7ySab+1os
      sva97vqbhyLZzV7IYrPIZkv8AoVbdZdzz731O7/lrH+Jqsr82te/w3i/DyR49//+DemihSfr
      fO8//jbJtbv88IcfIjyXsdfe4tGkN5sLd/jh7Xk81+WNt78BuPyfv/pfZC2PkVtfoLexPjG+
      p8UzXSHW19fp7e3lnf/9Pxn52m8z1nE6DcEVXk7Y+T1++o+36W4J8d4Hd/nPf/rHL5qlc8Uz
      BeCjf/oZt+dWGZ/+Ar/6+ZsXzdcVXiBiW6tEE3lu3JjEp3/6Mng8iitnuCt8pnFlCb7CZxrq
      WTNC1JIWpJ6BzPWidRl5grOnWTlNapVSqXSkMs1pYJomhnHywrXeSQPqTe/MU6CLqhBfb1qX
      kSe4vAmyHsdZi+Q9L+pN72oKdAEQwiP94X3yDzZeNCsXj6UYIn95g/6vBOCcYWc+YfOv/5Lt
      H/4Cr2KffMGnDSUTd6u2kMUXgScEIBXfYTeRQbg2K6vreKJatnM7lgBcSiWTcqGAc6U8OhZu
      JUp25r+y9j/+luKCj/4/+BYNrwzXfL3n2qwsLZEvVY6kVCmVSgjXolCsLcVkzfdzLJaXV7Bd
      QToRI5kpUE3rskrFdintx1yfOp1iZyNiL4twnm+tcd44Mpkqp3dIlBX6O/zcn73P4PAg9x8s
      Y1dydIQ1dvMKuWiRYjnN9PSVbeBpEG6J0tZfU9meI/73Xcj6dYa+/02MjtO5mVumxbWBQWbu
      3kFTZIaH+5lbWEMTNo5VZHDi7PWZH8Xc3Dyj4xN4lQzru0VkO0YhZBBs72P+/n2CPh9hv4QI
      dnCqFUpzCCQQ8SxSV3Ndea4HjghAPBqnrPn5+M4m4aCPQDACziaaptHV3sz9dIGt2U8Yf+tt
      hBB4nvfc9YGfF/WiVXeebBNz7ye42fexsl9g752b+K+10f29r6IEjJrv5bounufhCwRZmrsD
      ehBJsvdTqkTJZJOooXZ8an0rBOQyKZYW5pHsIv72SfRUhV3T5Y1IkJgqNqx2PAAAEg9JREFU
      Y5bzxDMeX3zzes3/O4AnS0itEdxoCq+ttszgx9Kr4/8Gj2mB7GKS2/NbIAnawwZFyyEQaSOf
      2MK2XUanJ4itFqmUoozefA1DlT7zWiAhPMzk+1jxH6M3vUVxsZfYTz6k6Y1xOv/9l5C1093j
      4H1mU3vE4mkKZYtGv0LFdgg1dWEVMvg0F62hh86W+mmLFu7fxUHGH4oQj8YQqsZITwsbyTya
      aqBLgq72CJspk4nhvlNpgeRcGffuGuqbo0j+s/n81FsLdKUGfU54Vgoz8TOs9Aco4ZsEOn+T
      2E/vkXr/Hp3ffovWX32+QhafVjWo/cE8ckcjylDnme5bbwG4ikA8BYTwcPKzmPG/w7PTGG1f
      JzLx37EKFht/9Q+UN/fo/4NvER57MeF9lxlyRyPebgZ5sKOu2Z3PiisBqAGencVK/Bwr8wFq
      cAR/92+h+PsRniA3s8ruO/8MnsfQ93/z1Ivdzwrkrma8jTgiXUBqvjwj3JUAPANCeDiFOcy9
      n1Z7+9avER77CyRZB6CwtM3uTz6gvLVHw+tjdH37S6iBq3i2Z0Hy60iRAF4sjXwlAJcXnhXH
      TPwcO/MhSnAUX9d3UQMDh8fLm3vE3vkXioubRG4O0fNbX0Fta7h0FScvI+SuJtyFKMJxkdTL
      4WZ99a8BwrOwM/+CmfgZoKC3vE14/L8hyQ9jmsrbCfb+37+Sn1sjPDHA9T/7Lr7uaq3jeqrl
      Ps2Q2hpgMYq3l0Xpvhw2gc+0ADjFZazkz3EKD9AaP09w4PvI+tEC3lYqx+7f/SvZ2wv4+zsY
      +KNvE7r+ZL6jK5wMSVWQ2hoQsRRcVgFI726xkarQFdGIZ3K0dvaTT2xRKNtM3hpld7uEbabo
      Hb6OeolW87VCCA87/QHl3R+j+rrQW36dQN8fPnGemciSeO82mQ/nMbpa6Pvdf0fkxsCF8WmV
      C6ysb+EPN9IcUNiIxhkcGaOcyxD2y+RdPy2Rl2/NIXc04t5dQ5RMpMCLiQM+gBDeYwIgHHaS
      RWTPYS9jMjV5k5mZWZAEU/3NLO2kid6bo//WFApVq+XLYwkWuNkPqMR+hByYwOj7T6hGtRd6
      lJ4ZTZJ87za5mVX0zma6vvdVIlODT5xXH56ewuW+WUZSDMbGxrj9yR1yh9VWFjFUma1ymVvT
      9XWFEJ7Nj3/0Dt/4zte5/eEdhKoy0t3CZqqAouj4ZOhsCxPLC0b6u577PnJzGNfQ8GLpM9sE
      nhfVTvB9KrG/PSoAsbUlTA92t2N09XTsV4WXQbiYpo1hGHT2XKOYyyFd60BRFBRFOXEB+CIN
      YUJ4OLnbVGI/Qg1NEh77c2Q1/ASd0nqM+Lv/Rn5uHf9AB32/842ae/x6Pt+Bi0m12sonjE+9
      wsbK4n61FZdMMo4SbKbeY+/ywiKD14exszEa+ybQUxssp/O8MTXFzOwspmlybzHLF9/83Olc
      IZ7WObRF8GJpRF/r0y86Lb2aIbCTP8dOvoscuol/6L8cFYDOwXE6gd32ZsKGyuz9eQZGxigm
      omzkbMZHG0nhRzh5TEdg1NkfpZ44IuWhcYKDf4asH513Ck+Qn1sj8YtPKK3uEJ4YYPBP/gPB
      wefv4c4KWZaRZZmdtadUW7l2nUqkgZBPIpbM19UVwrRM4rE9mttvUEnHsVyHzpBBIlfEdQUB
      f5ihZpmt3TTXOppq6vjg6Z2D6GnF2Uoi58qnVok+T2fzsC38CL3516rqbKU6ffzUuEII4eGZ
      uziFWezsJ0iyhtbwGmr4JrLW+PA8T1Ba3SFze5Hi8jbCcmj9yquExnox2hqfoHsWnp4HL9IV
      olQs4gsGySZieGqIlsYgW+trtHb34dkmgUDgkL+zRoQ5Hy+DT0O9cXyJrFrpPQ3CszAT72Il
      f4EafgVfx7eQtYYj57y0WiAhPNzyOk7uLk5hFteMo/h60CI38fd8D8XXfeT8SjRB+sMHZO8s
      4eSK+Ps6aPvq6zS+OoKkXMUFAQSC1dxPTa0P5+bX+qvrH7RqBfp6Cafc34Z7bx0xaCH59brQ
      9Jz8YXtwiovIeiu+ru/ia//mM695KQRACBfP3MOtbOGU1ikX7iPcAoq/DzV0A3/v76MY7U9c
      5+RL5O6tkLm9SGllB19PKy1fvkXj9AhSyHehxivXdlG0y2H8uQyQmkJgqHi7aZRjyuQeB9fc
      w8nfxcnP4JY3kNQIangSvfnL+Ht/D0k6+X1fGgEQwsWzEniVLdzKDm5lG8+MItwSSCqy3o7i
      60HWu/ENfu2JoewATqFMbmaV7J0likvbKH6DyK1hOr/1RQJ9D1/0eRmvHMuhmMqT38uQi6Up
      xHNYpQqyqjD9nV8h0BQ6l/u+bJBkGbm9seoa0d9+rIOccCt41kEHuEWlvIRnJZGNLtTwJEbH
      d45Y60+DcxcAz3bY+Zv38KxnNDi3gmvGcMtJlGAOf2+QyOTnMdq/guLrRVL8R053HAf5sZ7b
      TGQpzK2Tm12juLyNrGtEbg3R/3vfJDRy7VymOGahTD6eo5TOk9vNUEzksCsWsqoQao0Qbmuk
      faSH4S/dwAi+fPr6i4Dc2YS3mUBkSxBWDhu5W9nGq8RwzRgIC0k2kPUOZF83sq8Xo/Xtp474
      z4NzFwBJlkFaA0mgGB1I2uMLzQAqzUgSmPEs6fdjJN9bQ29JERjaIjDQSXC4+8gCVXgCcy9N
      7t4KuXsrVLYTKCE/kalBWt+eJni9B7kOviau7ZLdSVHKFMjvZSkm81TyJRACI+Qn2Bwm1Bah
      Y/wakfbGq4Z+DIRn41lxPHMH19zDM3fwzDiqPI0zt4DT/Amy0YHiu4biH0BvfBPZ6DrijgLV
      DlCpRyBTsYIXTT6pBdrZWscIt9AUMljdiDIw0I9ZzJAqOPR0NlEqOUiejRYMokr1jwjzHJdK
      NEFxKUppJUpxdQevYqFGAgQGu1BCfgqza9iZAnpbA5GbQ0SmBvH3diDJtatln6qe8wTZWIrE
      coz48g6e69HQ3UywJUyoJUKwJUyg8ckpzHlpgXKZDKHGRnAs1rZiDA70US6V8BsqxYogFHxx
      ltRatUDlvb/HTr4Lko6st6IYnchGB7LRiWJ0IOIe3soe6hfHkZSTO62zvGshBCKexYumEJki
      +PWjAmAWc5Q9jdXFOXRVYXB4kJXN+GFQvNLe80RQ/HmrQYUnMHdTFFd2KK1EsfMlQqO9RG70
      HzqjPQ8OeCqm8sSXdogv71DOlWjoaqJtuIu2oS60GrUT5yEAdqXARx/N8PpbX+DBnU8YHu5n
      LZo9EhRfz7hgq1xgcyfJ4GA/2eT5q0EPIGwH55fzKKPdyDUEzT+XHcBx8WJpvGgKyiZSawS5
      uwW5KXR0CmQEI2zOz9DY1k0xl7w0QfFqWwMNbQ00vDl+JDVezYHmlkMpU6SYylPJlShnitVt
      tkSgMUTrUAfjvzGNv+FoCvha6dfTFeIgKF7zhehqbwFAUtVzD4rP5Iv0dgSYnZnFlX31ywpx
      AiRNRWqNVKPF6pw1wsuX8aJJxG61hJPc0YQ8PYikP5xWHRGAbHSBjaRJv88mpMvMzt4j2FAN
      iv94bpPR6Qn0yc+R217Aan4NQ30xrhC4AqtsYZdNrJKJXbGwKzZWsYJdtrArFuVsEcesJqJS
      dI1AU5BgUxhfxE9zTytayCDc8nRN0vPwVK/nUxQFWZapFLJsbG5S0X34VZnZmbuEm7owVB2f
      5tbdEhzyqdyZ22Civ4ltu6V+WSFq6RzaIoj7mzj5Epww6h5LzxOIXAmRyiNly1CsQMiHNNRZ
      vYci43gCM52nlC5gFsoXYwkuZYvYZQvXcqofx8W1HZz9357jYps2nuPiWDZOxca1XRzTxvO8
      I7SEEGiGhu43UP06RsBA8+kPv/sNNL+OL+xH8z37ZV7GQH14cZbgf/yHd+no6aOjs4OFuYW6
      ZoWoJXmy888PwLQhYCCF/dVPQwAp5D+iIn2cniibeOkCIplHZIoIx6VYMim6HnZAp+wJKtkS
      5Vzp0NHQFw7gbwjgjwQuRgCWfzlHMZVH1VQUXUVRFRRNRdH3t5qKqlePqbqKamjVfYaG/JgK
      87JkhTgvWp/WrBCPw7WrnaDruNVOsWxi7WZwUnkoVGgI+9E0FSQJKeRDBH3kciUSexlUSSLi
      12nwG0imDaqMCPrIVmzShTKeLKP5NIyQD39DEH9DEF/Y/1TN4IUYwvrfGLkKGfyMYvvOGpu3
      l5/Yf9AJyqqCqqvImoJmaCi6htrpx9JVGprDhAMGFMqQKxMxbSKhfbtQyIfcHEZqCiE1BpEk
      iTag7ZT8XbXKK5wrel4ZoP/162ekUs20IYTAzZdRDA3J0E64pjbUJAB3Pv4Qx3YZnb5BbK1I
      pRxj4pXplzIi7GVBMrpe92CUlx2SJEFAR7ro+gCK4ee1G31s7GZZmf2Ihp6Rq8Z/zthJ55me
      mkTyLMxynnuLWy+g8dchO/QlR02i5Dgusb0Mbe1d6JOvEt9YpLft1bpHJb2sEIDtutiui+U6
      OJ6L7XrV766L7XlYjsNwaxtBvTbrbaNPfWYwykVhc2ke/znbAV40ahKAseF+UgWHrnCEUG+A
      PhqxThER5gmB47m4nqga0PY/AoHreQg4VHe6wuNAL3VwTAiBK6rHHcc9dHmo7n+oxHIeUZk6
      rnt4H09U7+t4LmKfruu6CEmqfve8hzwKcfjb3ee5FqiKgqbI6IqKJiuoioKuKGiKgipXj8mn
      GDWvDY+xtb7G2MTEESvsRSJruvQ+xQ7waYJUqVTEWYrklUolAoHAsef8cnWZzUwKWZaRJJAl
      CVmSkQBFfrgFUCT5UO8rSxKSJCFJ1f3AkXMlSTrczyP7AVS52uDkg60kocoyIKHIEohqo1Vl
      GUWWkCQZRZJQZQVFrvKnyNXfJ8F1XZQa/FhqQS3v8zjUU4Wa2tm4EDvAaXDpskPXgno2kHrR
      uow8vUyoVQAShTypcunIaO3sV6Y8GLEPRujqPvdwn7e/79FZgeO6hx2kJ7zDc4TgcJbw6L2q
      swiB6+5vHxvRL0QNWs+ylvWidRl5umictUxqLYhnUuzkcvDIKK7uvy91v9M4GKEBAgeju/xw
      yvjorODRGcCj1yFJKAfnPDIzUGQJCQlVkZGQjswS4KpS/BXOGfUeHetNT/nBD37wg7pRAzLJ
      XdY2NhGKj3xql41YgtaWJlYW5ilUXAK64MGDJWQjRMB3vDEjurnG5naUcGMLGysPyJYswn6F
      +fkF0AOUMnE2N7fQAhF8+jGDmXBZXlwkX3FQ3DJLK+uEGpuJRzfY3kvR2tKEXc6yvJmkpen4
      Mj4nPV8kqPHgwSKerBPczxZ90nOUswnWN7cIRJrR1ZdzNHkW6j061pte3UcAy7JRsJlZ2EDG
      Zqg1wGqqTKBliFJ8BVkIxqZuMjc7w9TU1Im0yqkNoukKcqgbJ7uNhGB08ibzszOMjo7iWXlW
      ogVujPY/m5DnYHkSM/fuoR1mWVsAIehpUClFhshuL+K6gps3J8/0fLoskA0/XT39BPcF/KTn
      8FyH0eEe1nYsxkeu8o5eJOq+BqjkUyxuxZm+Ncn8/fsYhk6pkKShW69WC5RkFAlq0QjuRdcp
      ujoDrRJRYeBJEjagSIAE2WSMWNpk6sbI8YRklZX7dxgZv/FIljUbSTLQdYWllTnKFZtyNsX4
      5CTaMZ3MSc9XKptMjIwzOzPLa69O1/QcuiKxtpXAH3q5i2vEY1skM3l8oSacYqqaT3Zqgvsz
      99H8YXpagmzuJok0tdPXfbLXTjGXZjO6iydrNPtlktk87T3DZGKrFE3B+Nggq+tb2C7cmhw/
      mUHPZH5h9Qi9uo+3m9tRQj6NRDKLT5WYWU/z6uvTpNZmULQAvR0tzMzOEmk+OS9kbHcPnDJO
      oJNSdAGhGgx3t3NvZpZwYzvRnRi64pHOFo6lI8wse1nraJa1nhF0xWUxVuG16Vt8+VdeZ3T0
      +rGNv5bnGxnqZ2FxkYamh9FqJz2HqmkgPDS9PvlxXhTaOq/R3hTBsmwqjsdUfzMf/9ttmgem
      8JwyW7EEU5OT5NO7NdELRpoY6uumUq6QyBWZnLrJbnQJy1MY6fITLaqMDg9QKZdrY1A2nqB3
      tQi+Qt2ws75MSfIz3NfNzMwMg60B1tIl/M37019gbHKqpukvgJlLcG81zuu3JpidnWFqcnx/
      6go9DQrFQCfby8u8/rlXUWuJBxcuH91dOELv/wO+IouPTBvlTgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Econ Grouping Ideas' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Edu with Econ' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Education Dashboard' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Education Dist Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Education Grouped' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9Z5Qc2XXn+QuXkZE+s7xBoQy8aQCNbjS7RXY32U2qm02KbJKiKFGWMpQ4
      M7tnD8/uJ51dnbPaMTrqmZEdLSkNJR4Nh1o2Rbb33sM1TBVQVQAK5X16ExkZbj9EouAKrgAU
      CkD+68SJiIy48e6Lev937zPxruC6rksNNdymEG+0AjXUcCNRI0ANtzVqBKjhtkaNADXc1qgR
      oIbbGjUC1ADAzMz05d1olZmcS19fZZYRNQLcpvh//s//g+9973tMZsoMH+vnyZ8/Q3JuDgeL
      mekkudQMx4bHySZn6O0/QTZ5gv/4H/6aZDLJTDJLZn6aEyOTVIpZhoeHGZ+ev9FZWhLkG61A
      DTcWyRP7+HAghWFU+PDtt3noqw/x6ivvkJ4f5r6HPkd+copnn3meh7/5W55AOUPviVnef/Ew
      saDI9Lr1HBwtYufn+Hff+f0bm5kloGYBblNE65vYuXMnslNBUmRM00Kwdd57+wPKZ9y3/+AR
      1nW3o4bqUSWLU6OmbvUPYNvOT5AIB5Y9D9cCQm0k+PbEQN9BCmWLdZvvYHr4GP5InMaIxshs
      mmggguazmMmZxFSXkuGQaG4jM3WSYLSOiivhd3WSRYdV9UF0NMr5NE3NTTc6W1eMGgFquK1R
      awPcpphJF3l9/8mF88/c2UVTPHhJuflkivq6xFm/JZPz1NXVX3Mdl4qUXmLfxNjC+c62VSS0
      xV20GgFuU8ymi/z4td6F8y1djTTFgzz10pO0xldxcmqaB3bdxWw6x9ZNGzlxrJ9gtI5XXnmJ
      XbvuZd2abg4fOsDaDVv46MP3+dxnP8eh3qNs3baNfGqGnG5hGUXUQJRVbS3Lmre0XuLV44ML
      592JOhJagPffew3DFJlJJmkIiuScWK0RXMP5KBayBINh8vkcR/e/z8tvvMK87qCpPkzTYWjg
      IG+99gJ1zS28/PpLALz8ynN0dnXw4qvP888//AdCYY3X3ngHYQWVsOmZNJ9+8NNogkNDYyMb
      t9xxPgH0fJrXXn6RV994m2yxTLmQJZUtLPpAxyzxo3/8Pj9/6R2yc+P83d/8JXuPnDarkyPH
      eO655zjUP7QkhScnJy96fXb0GH/9l/+VIydnLv2s4QGeeeYZnnnmGd7fd/iMKybPPvviFeuW
      Tc1RKJsA7Hn7RQbHkpctu2/3buwrTtHDiz/7GfoSZS8HWjDM/Q9+huzcFPt6D9LTtRpDLwMC
      AA1NTfgVCccy6T18hESs4bRwtTW5dctW6mJRHn7oM7z5xivXUdsrg092SWez5I0KPllBLxbO
      d4F+8uMfsfnuBxDMAnOpLPMD73Mir3H/PTtob65jdGQEQQ3R0drEkb3vkiHKpzZ18vorL9Ky
      9k6627wXMjPcx/98+h0e+ewDWHYFgExyllShQldHO0YxS8ESqY8FmZycpbkhxmymhGvk8YXq
      UIUKP/7xj3nsscdoW92NW84xNZdmVcdqNFXBLBd45eUX2HjXg7Q1RCgXc4xNzdHZ1YUi2EzO
      ZggqLqIWJRxQmRoZxFKibOpqIhCOAZBNzpIqFJicnME2SszlyjQ3JJicnKS1tRXbLHNyeIzm
      9tX4JZeR0VFCsXqa4gFef+HnaKt2sGPTGtZu2oEcigAuU+Oj4AvR0lhHNjWH4NOYm56mvbMb
      Vfbqm/2797B11y6k6jtPzk5RskRWtTYxMTFBa1sbrqkzk9Fpro8xenKISEMr8XCAmYlJbKCi
      Fxkem6CxpZ3YErogt3Y38tS//8Z5v2/p2sjHHx/kkUe/iFHKki+U+PSO1cxMDFOumNy7624k
      wSEWT3DowAHaVncjuD1EwyEO9R7lkYc/TyGbQhAUrIrOQw89esW6XS16EvX8p0e+eN7vn3/s
      cQ4ePMRjj32JWDjIoYMHkf7kT/7kT868afx4HwPj87R3rWPjmg72vf8mk6kS4WgMOzfFnkOD
      HP7oLdxoB3NDBxmdzRGPBDg+OIDhSDS3tJKIhnjv1ee555FvsLGrjebGeiZPHOKHT75AYX6U
      g0MpEkKGfcMZ1nc28OP/+XPu6Knnz//mB5i2xUuvvcOWte28/9FefD4fjQ1xvv/9f0LAJlNy
      6GhrwiikeefdD7BFH3URPz/84Y+wKjovv72Xe7Z38vd//8+cGB5ldc/6BQIMjMxglouIahDF
      mOf7//yv2JUSs1mTOzojPPPuUbZv6uHHP/4xd27byF//xV+h2y66JTA/NsDgyXHeeuUFOtZu
      Zv/uDyhVXGKJOoYPvoMRbOfE7hd579BJju5/HzvUzOzAhzz35n6yMycZmCqxZe1qwCPA9ioB
      Rvv38S/PvMHk8cMU5QSjH7+J2rqe+cHdDKUFet95luNTGd55/VU27tjFwMf72LRrF//8d3+F
      brmMTSdZ39N5zQpPOBKltbUVza8SDkepq6vHp8gk6uoJBQMEAhqaFkAQBJpbWghofgKBAKIk
      09LSgiQKaNUGZ31DI+HQpRvWywVBFGlpaUFTVU//5pbzXaDHfuW3efSBu+l7/yVe332U7du2
      s2n7Lu7buRWfX0MWBSKRMNMzM+zcuZOeTdu599572b6ph12feoieVV5fsDdIcrqH9cihg3zp
      G7/Nr3zzW+SmB89NFoA1W+7iq48/Tn1UpWlVD62trXzxi1+kqaGOzuYovUf6EWQFgECsiU09
      q/jUQ5/HyU2z/f5Hefyrv0y7XydlgC2G+Na3fofW+vDC85vbVrNu3TpaGuvoP3yQx77+W3zp
      y79EaJGugMzkSRo33MNXvvwlPrFjE5qmIQgC4aCPmay1kN+t6zsXZA4PzfK7v/Vr/P5vfp0D
      Bz036zOPfomvPPYwZX1xx6Xv8EESDY3U1dfR19fHzp3bOHiwj0NHhtixdS2DJ0cIaz7Cfjg+
      fHq+zrq1XfT19lKxl9aL7ZZzWGN7Fja3nFvSc1YiipUiR6Z7F7ZipXjBe88jwJuvvkROt2ls
      SFAxKvh8CiePDzA6Mc37b71NW89aQgH1kkrs2Hk3z/zkRxw52s/Bvn7a2lp5/523+HjPu7i+
      OIoiMzU2wt6PPqR4AYdYsUrsO9xHej5J89ptfPmxz3Bw/4Hz7mtqaaVv30f09R5kJGUR9UE0
      EUcUFn+ubdsk6uvYv/sDDu7fT8kGWVaYm5ng4P7dzOfLhOubGR84QN+RoxwfHuPtd99n7do1
      C26MoigMHDnE9BkTw5ojCm99sI833nqHtta2C78cx+TYwAAnhsdoamxEC8VYt2kb9925iabu
      zcyd2E/eDRDzS9TX1dHcvpp77ruftobI6XcTjPOVrzzOUH/vhdO5COy5AfQnf2dhs+cGANhz
      eDcA7+1+i2x6nrJpLcg8/9zTC8evv/YCb775OtlCaeG3Z1546aJpXur6tcJI6iR/+vIfL2wj
      Ka9d+s6Hr/PhB+/y0b79C/ee5wKJrsmx4ycINXTx4H07iCQaMDIzlByZu+/cymD/MXrWbaS+
      oYG6WBjFH6QhEQUgkmgg5Pdq6FC8kc7mKEcHjhOta2bLHTtwi3PMZCt84bFfpK6xifzcBGqs
      iY6WRlpbmhEUP80NXh9za2sr7e0tDPQP0rJ6DcXkJBOzeT73iw8T9PsW9E00NBON19EcVTh2
      coJffOwLRIMqCAqtzQ1nZo2ZqUmSySSmoHDnzrvRU5MYYoCuVS109KxH1NMYYog1Xe2sWt3D
      mtVNHO0fpK65nU097Rw7OcHGzZtoaGymu7ubmbEh5ECMhkSEWH0j2+7YyviJAaRIKw996i4E
      4fQ7OTNv2GVGx6fI6Sa/cP8DlJITjM8kWd3VTTQcxkeFjvVbqY9HWLd2DccG+ik7Et3dnfhk
      kea2NoxciuMnx7j/Mw+TiIauuJA4uUmsI08tnCubvowYbWPvgQ8oZnUOHj2MXzQRQ0Gee+Y5
      3tu9l4gqMTM3R/+xfjLzM3Su2UJANnn+5TeRZJkP33+HwcEBFCoc6D1KX/8gA0cPMjJ8HEP0
      k07Os37tmivW9UoxV5jl7ROvL5zf3/MZGkKNDAwPct9d97L7wF4+3reXo0d6ayPBtyussT3o
      T/7Owrn2tR8gr7qbl999ic998hd5+sWf0paII4UiINUzPjqAWDH4/GO/xGuvPcuDDz7K4T1v
      cXRkgnse/DzdTXU888JLhMQyuiXw8CNf4OXn/hV8Mp994FO89sERbKPEFx/9xeuetyPTvfzp
      y3+8cP7Hn/tTNjVv4amXnqS9vouNm3t4/e19rE74agS4XeGWcwtuD4DUsB7BH+HE6HF6OtYw
      cPwIYU0j1tTOvvff5eOBAR594NOsXbeeoaFBJscnsF2BXffex94P36eptQPXdfAJFk0tLXy0
      ey/tq3twKwUmZ+b5xH2fZGR4eFksQLFSXHB7AFYnugj6ggt5A9i39yNKFadGgBouDtvUeff9
      PYSiUXZu33aj1bnmWHSc7oO3XiOrm8umRGpumrLpAGAbJWbmM8uW9pVgbHQUZ5Hfzx2wm5+Z
      XMjPhXCybx8Do3PXULvrA0nReOCB+2/Jwg+LECA7PcRkUSKqKQx8/D5/9p/+E0888ef87MW3
      r5sSe99+iemc19ugp8Z4/YODl5T56T/9Nf/hz57giSee4O09fUtK96f/9N8YTXmz3994+kf0
      jlx8NHdsdJTFzOVzzz131vkHrz+3kJ8LoWvjHXzw+ouLEmo5UD5yhNFv/NrCVj5yZOHa4MDi
      PUu2VWYudX7llJydZD5bYmZqlLlMnpnZ08QuJscZODFy7TNwEZi5Q6R2P7qwmblDABw+sJ+X
      X3qB8TMqrPN6wPd++CF33f84rlng6df28L9+939HlUVs28bMTfPavhPkxo9y76Pf4Oh7z9N3
      cpr7P/cYO7ti/OytPh5/5H6effZZvvCFL/CTH/2AfEFHibbzq1//JUb79/PsS2/RtWUXX3z4
      Fzi6/31eeusjirk06x48rcP4iV7+6i8+ZvOuB1lXLzBa9HPf9vU8+9RTPPpLX0Kqdm/+9ne+
      S0u1A6SUneMnP/lXCpbG7337m7z19E9P67a2gf/xL89hlDIodav5ja9+HoDt27bS23uUjvu3
      c3wiy6e+WMd7rzzNR4eP07lpJ1955AGeffZZEn4X6tczMzeHBHz05gu8t/8o7Wvv4Je/+DCm
      nuWf/v7/xfYn+Oavfm0hHzOjg/z0qReIt63n648/wu43nuODAwNsuutTPHL/3axt1hicyLKh
      LXptS8BV4thAH/OZEvfds4v33n6dmblJFF+YBz97P6NT0+zf/Q6mDevWdLL3UD9r2xsJt22m
      Mj+Krz5AauokxwYOoxeLNCRi7Ds6wujoMT776YdvaL62br+T0af/hZaGOE8/+zThSPR8CzCe
      KtOe0Kjk5kmsWoPqFvjLJ57gyRfexDXLvPvOu+x6+HHcmV6SUiP/9o9+j/defp6KVWFixmP+
      1NQUALPzWb75O39Ao5Sid2iKF195j9//zr+lMnGYiWSKF976mG//m3/Hjg2rz9Ih3tzJH33n
      D+l7/w0Sq3vY98G7GLkpkmVpofAD/OPfehZgT98QLz39c+767ON869e/yuSRPWfr5pjMpIr8
      6m/9HqXJISpV+e5N2xg91oeRmUBJdCALsGbzDr7w2OcZ3v8BORsGD+9GrF/LvdvWMVGtObo3
      3MEXHnuM6SMfMV8GQVL5+m9+izVxh719pxtfzz7/Mr/6rW/ToqTpOznHnn0fs+Oue9jQ3Q7A
      qlWrGB+fuGb/4GuJZMob30jOzxGNxehsa2QulyOZmcRSYvS0N3LgyHF23ns/sXCIo72HGBg4
      viBb1vNsWrOafKnM9h134ipLnf107TF6oh/dFJlNpi48G9QXqSM1dhxDCPG/fPfb5KZmAVi7
      eQedLXXo5TL19fUoqkZQBss9Pe57qlnt04KoikwoHMS2DDLJJK++9CK+RBtypYAaqUfzycjy
      2YYoGAwhKypBv4wrh1hTL/PMS2+x4+57zrrvt7/zXb773e9y9+ZuyoZFU0McLRSksohuoWgc
      TVXwq6cH8QRfmIios/fjQ2zZth0cnaeeegHbhXBIxbQhXN/OJ7ZvQFggnslTP38Gy3EJh/1Y
      Fsg+P5pPIRKJYNunnZpCNs3br79CnhBhP/zWt76NSoUnf/Y0NxpyQwPRr311YZMbvDGTj/d+
      RDDeRntjjLffeZtwrJ5YvI5gKILm81MXa0WqpDkxPsv2TWuIhsNowRA7d+5k586dBFSFukQc
      2aex9+ODyD6NUDBIPBpftryJahNa2zcXNlE9/aVaor6RVd3rCfpcVrW2ne8CtSf8jKd0VifC
      PHr/dp74s/+IqvpoW7vjrPvWbNnJG9/7PgfeepauO+4jEIphjPXyN387y2TKG3pOTw3xX//z
      n+Oqcb7z8Gry92zmo95+VJ/Cjk8+TIM4x5/957/ALsyf5QINH93Hn/W+R+cd9xEU4Rc+dR9/
      +jc/4/GvnT2w9Y9/+wQ+Ce6+/xEefOgB/vtfPoHsC/I73/5t3vjvZ+h2kSm52zZ28sPn9/En
      /9fnAQMjP8+rr71ONpW/gISAVcrw6muvUaj6w2Ilx1/8lyeoCBp/9J3P8Ub/GwA88KlP8OLb
      +1FVlTVbd/Lkv/6YTNmhqWsTAGNjY7Rv/eyFlbuOOEWAc7HjrnsWufs0WmJNsHnj2T9G13v7
      pq0AdDTt4sD+vRSLZbbs2EVY8wFnW/nrCUltQmv79UWv3XvfpwH4wmPVyXLuOchMnXCffO6N
      c39eEr73ve9d9TPsSsnd+/6r7pPPv30NNFpBsCvuD37wQ9e+0Xrc5jivbow2d9MatK9JN+id
      d9551c9wTYO5gsDnH/6Fq37WSsLJo4e49zOP1L5IusGoDYTdjihn+N4P/z/Q4vzBb/zyRW81
      MtMMpV3WNigMzBhs7jl7kt/B/fvZfOedC77022+/zf3333+dFL/2qH0TfDuinCFZ8fHIvVsY
      GzzA0699yMOffpBXXn2VNVt34aRPMjE5zb2f/zW2dMTY+9wzFBtlwps/yQ//4ftojV00hVzG
      ZrI01MVYk5zgBz99hq7N9zDSu5dDBz7my9/4dV7+2Y+JrtrEVz//6Rud4wuiZoFvc7yzu5c/
      /KM/ZGZwL7/0m99hfnQA3Zb5ja98loEToyD6UQSLY0mDzpBD4+p1JKfHmZqY4EtfeZyZ2RkK
      uRzrttzJ+Ml+Yk2r+dZXH+LFp39KJbgKo7iy1xGtEeB2hOzHzM+x50Avn9q1hb/7b39H07q7
      ePqHf0PdqnU0NDQg+oLUx71Rxh3rVqHEW3Fsk8Gjffi0EC0d3YR8Ek2NTZimTl9vH6FoAo0y
      //Cvb/KFL38NOT+GK/lvcGYvjloboIbbGjULUMNtjRoBble4DoNHDjM1nyGfnmPf/gOUDIty
      Ps2+ffuYry6FMzc5yv6PD1x0duvo0ACTs6lFr6UzaXAqZPPlRa/faNQIcJti74fv0dCxFlV0
      GByZ4M5tm3n3nbeZGhyh5847OXLA+252YirF9q0b2fPRbk4M9HKwb5C5qWl6D+9HN+HkkY8x
      /fVEgz5GTgzw0b6D6JlJPtz7MQNDo5TLZZIT/Tz1zGuk0in27t3D6NTKiSVQI8BtClOQEI0M
      ew9606AFSaExEqaCycH9+9Ei3vfLej7N/gOHaGhuZN/eAxw7sJ+hsWHCzd1oCsxkS/S01hEM
      hrAsi8zQAGOzUzSv2UEhNcf09DR1DY2sXb+ZgAwuAoP9/Tcy62ehNg5wmyIeVDl6fAzbscHU
      2bd3HwXLJSb52LZzO7HqfVo4zvad2wGXubHjaOFGfBI0NXh3rGlv4s13P6C1tY2JsTEURcJx
      oO/QPmKqQEAG5CDz4x/TLzbhCiKicIHlOm4Aar1ANVxzZIb3kYntpDN26XtvNGoEqOG2Rq0N
      UMNtDdkwDCqVyqXvvI5wHAfLshDFGh9rWF6sGBcon88TDocvfeMFYFnWeV+W1eRr8pfCslS5
      U+PD9B87Cbh8vPdDTgyPkRwbR8fl2LHjy6FCDTUsimUhQEt7J6JrgaNTNkRAoFIqsH/Pbupb
      Vi2HCjXUsCiW1el2XJVP3LcLPZ/GQaKtvZls7kLf3tZQw/XHsgyETYwMUSoVyWQzzM7OEYjE
      iQQ11Po65icmFl1sqoYalgPLQoC21d20VRcFSCTqzrrW2naRdfRrqOE6o9bvWMNtjdpcoJsU
      ummSKhVJ6zopvUSpUiERCNAYCtMYDBHw+S79kBpqBFipOFXAM2WdZKlEtro3bAvXddEUHwlN
      I64FqAsEaA2HyRoGR2aneT2fp2JbSKJIYzBMYyhEUyhMUyhE0Hfp8Fa3E2oEuEHQTZO0Xqpu
      OslSkUy5jG5WEAQBVZKpCwSI+jXqAgF6EvUkAgE0RVn0eYsNBJm2zWwhz2yxwPHkHO+ODKGb
      JpIgUh8M0hgM0RQO0xQM45ekRZ97q6M2Enyd5MuWSapUIlPWF/bJUomyZeK6Ln5ZIa4FiGsa
      CS1ARFVpCIUvWMCvpf6W4zBfLDBTKDBTyDFTKFAwypeciiIKApIgIokiiujtBQFkUUISBII+
      Fb8so8oymqyg+RRUScYvK2iKgl+WkS6Qxo36/9UIsET5smWS1vWFWjxZLJIxyuimieO4aIpC
      rFq4vUIeJK5pF/TNVxqBF4PtONiug+24WI6N47rYrotlO5TNChXHwbBMypZF2TIpmSYVy0K3
      LHTTpGyZOOcUN0kQCSgKEdVPUzhMazhCYyiMcoUWaan5XxYXaHrsOFK4lbqgSP+xE9Q3tSO5
      FnV1Maamk7S0NC6HGleEsmWSqTYwT+3Tuk6xYgCgynK1Bg+Q0DRWRWLUBYO3tI8tiSISIl6I
      +7Mt1VILoGnblC2TZKHAfFln3+Q40/kcLhD2qTSFw7RFojSFwsSrAbivFo7jUtArzKaLy2EB
      HIrpSSayGm5pks71Wzh2tA9VURGcMk3dmwir0rJbAMOyFvzvtF5a8MHPLOAxv0YiEFxobMY1
      7YIF/GaowW82+WxZZyKXZbZQYCKXIVcuo0gy9cEgreEIbZEo9cEQqiyfJW/bDulCmdl0kblM
      idlMkblMkflMCb1iIQoCIc1HYzy4HBZAJBjUIAu2K6JIAggChp6noFt0+iQcx8G2bSzr4mGF
      LoZTU6pPoWLb1Zq7SEbXSVZr8qJZAQQ0n7JQwON+jbZwhLgWIHAJH/xCOp6b/tXqX5OHoKyw
      LlHPukT9wm+26zJXKjJTyPPx1AST2RxjYzlClQDpfBnLcfArCvGwn8ZYkIZYkJ7WOLs2tFIf
      1VCVs12r608Ax+TY8TGSBdi8tp3DvX1EogkUbDY1JzgxNMrang4kSbqqGmTf+Cj987PkDa8G
      90kyMU2jLhAkqml01tUT9fsJq4uvVLYSa8Ca/PmQgfZojAYtxOhQkRN9Be7Z1MEdaxo4WUwy
      mk0jCSIbG5vY1Nh0wf/3KdwyjeCsXkIUxUtm+EK4WQrA7S6fyuk8/+Ex+obneHD7aj69owuf
      Ip0lnzfK9M1MM5ico2LZdMYT3NHcQmPo/PJ1yxDgZvkH1uSXJj+dKvDzd/oZmcnylfs3sHNd
      K6IoXFK+YlsMzs1xZG6aVKlEWzTG5sZmOuMJREGoEaAmv7Llj4+n+MmbR5Akgcc+sZbNXYv3
      GF5O+o7rMpxOcXR2mrFshrrAsjSCa6jhyuA4LvuPTfHiR8cJaT5+7bNbWN109WusiIJAd6KO
      7uqM5NlC/jQBSqUSgUCAYqGIhIMUCKNUB+2SySR1dXWLPnSlwLULOK6AqKysmLs1XD4cx+Wd
      Q6M8/+EgGzrq+TeP3008rF239BpD4dMEmBibYO36tZw8OczqlmbEkMvJYwNUBBUqeZLJeWL1
      zTQmVmYBs7J7KGd341oZQABBQlTqENUGb+9rQPTVe1uNJCsK+ZLBy7uPs7t/kns2tfPHv3k/
      4cDyDCguEMDQ8wwMDDCXzlLn82GIBYh2IGbGcRU/a9eu49jgsRVLACXxabTG0yFHXdfGqcwv
      bHZ5HDO3H6eSWpQkSHEcf1ONJMuAXNGgb3iW3qFZhqezqIrEPZva+L9/9zP4lOWdlLdAAFUL
      s3b9WsxKHwC+QIzZw4OYVoXG+hgrZzXHy4MgSEhqE9IZQZLPxZkkscqzlyRJzZIsDamczuGh
      WY6OzDE8nSGk+dja3chn7uyiszmGJInVRuzyz0i9cC+QU2Fw8CQFw+TObVuuuyIrtRfoXEvi
      bbPnkUSQ40j+piWTZKX2wixFfi5TpHdoliMj8wxPZ0iENbZ0N7K1q5FVjREk6fwZobXZoCuU
      AJcD17Ux9RkEO31RklzMkqykAnwlcByXsdksx8aTHBmZZ3I+T100wObOBjZ3NVx2782N0n9Z
      u0Fdy2DwxDDhWB2xcIBAIHDVBX8lQBAkRF8jstx6wXsu1SZxXRBEeUW7WxXT5uRUmvG5PMfG
      k4zP5QBoiAVZ157gqw9spK0+coO1vDIsKwGyUyNE29bQHJI4NnCMsCbgBpu4uYv/5eFSbRLL
      spAk4Yoa7meSxJXrQL5265EvVtglUaS9IUx3a4JHP7GG9vrT7szV1uA3CsvqApWLOUbGJ9FN
      F9nSyRkO991zF47jkMvlCIVCS3624zhXtbjuTSPv2jjmPE4liWsmwUzimHPYxhzYBRD9CGo7
      ktaJFOhB8reDcH7j0nWhZJjohkmpbJLKlRifL3ByKsNspoRPlmhrCNPVEqOnJUZ7Q+SsqQc3
      LP/XWH5ZCZBNzjI1n8awXAKyREtjhLGUwcaejpu6DXCj5CumTbZYJp0vM58pYpg2xVKWXHqI
      fHqAUrmCbgWoyN1UCIFdwrFLCKKG5IsRUBU0v0JAVYgGfaxujtHVEqc5ceUV0c34/uAWagQb
      H/8PnJleBH8UQQ0jqBEEfxR8QUQtDr6gd80fRVDOH11cSf9A3TDJFLyCnS6USeV00jl94diy
      HRzXxSdLxMJ+4iE/0aBKOKAS8CsE/QqaqiwcB1QZ2U1hl05gF4ew9BHPpRJ8yNbVO34AACAA
      SURBVIFuJK0Dwd+JEupGWMRaLHf+l1P+liGAVdERyxncchbXyOEaedxyFqp7t1L09uUsmCU4
      M06VpIIvhHiKIGoY/FEENYjgj3t7NYqgRcEXQhCW1o1XKpuk8rpXoPPlheNMwduDgOO6qIpE
      IqKRCGtEQ37qo95xLKyRCPtRFukvX0oBcG0dWx/F1ocxCydwyqPe6/C3IQW7kYNrkfyrEKRL
      T0eoEeAqcSNdINcysIopRKsEZ5DHNfK4ehrX1D3ilLO4lQK4judECwKuoFBU6knLLWT9HeTk
      JlJOhGy1ts7kClBOIQgygVgdiViEREQjHvIvFPJ4WCPkl/H5lrYixFLy7zoWbn4KJzeFm5vE
      LudRWrYgNm3BqUxiFU9gl45jFYfArSCqrcihDcihjUiBzvMsRY0AV4mV1gawbYds0SCV00nl
      ddJ5nVSuTLqgk8mXyZUMBEFAEgWCfh+JiJ/6aIBYSCOumkTNKSKVSUKVGQQjg2sUPBI5ppdA
      lUAogaqrFkLUYp7rpoZBDZ923dQIghZb1HW7kP6uZVQL+ARObho3O4aTn8YtTHs3iDJCqAkx
      0ooYbsGRA7hzfTgzRwGQmrcite1AarsLFD9OZQ6r0I9VOIJdGvHuWbAU63HlBmRfeFHruJT3
      v1zytx0BKqZNulAmmS2RLXq1dDKrky7oZAsGhukt96FIItGQSiKskYhoxELePl71uYPa2cub
      LPUf4FZKuOUsVimFaBZPu26Vomd9znTdLP0MQRdk/0J7xxUV0JO4xTmPWKKCGGlBiLQhRlq9
      fbgFIdSAIJ6v55n6u6aOPXkAe+oA9uQBsA3Exk3Iq+5Bar8bwRfAdR2c8thpS6FPgaMDZ0eU
      F0QVQQpUtxCCHDz7XPLOXTGMoi19dZDbngAl3SBdNEjlymTyXoMxky8znyuRLRhYtvePUWSR
      eNWXjoU9VyQe9hMN+miIhVB9S6uFbkQN5lpGtX1TwDZKyOFGxNCVFyLXcTAzGXyJxOLXXQdn
      pg9r9APssT3g2ogNG5DadiK1bEMM1l94KoldxrVLuHbxjK2Ea5dwrNPntjEPtjfWIUgBJH8r
      otqMqLYiqU2I/taLNtAv9f5c18E1M14Xcn4aNzWOm568dQjw3AeDnJzKnK6xqzW1V3sv3nA8
      EzerD7sUeTubxRg8RuXECSonT+LoOmI4jFsooKxahX/bNvxbtyD6F/++2rVNnLl+rLE9OFMH
      POukRhB8QZAUBNkPslrd+xAk9fT5qeuKHyQVQVZB8uHIGnKoAUHRcKw8jjGFXZ7GMSZxjGns
      8jRgg+BDUhsQ/W1IajOi2oKoNmM7INoZbGO6OpA4h2PM4mYmcTMTuOkpKJSQlFak6BrEpo1I
      jRtvHQLcTAVwOeXdSoXKyWEqQ0MYg8ew02nEcBjfmh7UdWvxdXcjqqo3Ei2KmCMjlA/3Uj7c
      i+vY+Ddtwr9lC741PQgXWK3NdR3sUhbRMcA2ca0y2Aau6e2xKri2AWbZ21sVXEs//btVwSnn
      oZz23LxT7SNRRvDHvJ65QAKh2iZyxTKuoOOIZVyxjGPncMwCQjYJxRJuagqhZCBpqxHjPV57
      pmE9YsMGBEXzLN7YOJWRkVuHALnXXsMcPAaCgCDL5+9F8exzgOoaQIKi4DgOkt/7CEOQTt0v
      gXDmXgZRqF4XQJQQJBEkCQeQFMUrJAtpVq+fq8MiuBYEkEQRO5XC6B/AOH4cc3QURAlfxyrU
      DevxrV6N3HThqRjnpu8YBsbAAOVDhzH6B5CbGtF23ol/82akaPSS8leq/7nyrmPh6tWu7VLy
      9HE57R3r3h6zhCv5kBLdSI0bEZs2Iya6Fto61vw8leMnqAwNUTk5jGOU8XV04OvpuXUIYOZy
      CIYBjoNr2biODbYNrotrWeC4uHZ1X12AyTXNhb3j2Ai27T3MsnAdd+E6lnX6OQvPc3AdB2wb
      13ZwLAvBdcBxLq3DInBdF0G4/K8uziWhY5q4xRJKSzO+NWvw9XTj6+q6YK19Li6nAFtzc+h7
      91Hu7cUpllA3rMd/x1bUNWuwRXFFWEC7UMA8eRLj+Akqw8PYyRRyfR3q+vUoXV34ujoR1dNf
      my0rAfTsPINjM4QjcXyCQ0tjjJHpPN2rW2ou0JX2459DQhtQgsFlTd8YHKTc24fR378ogYVT
      FvYsi1y1qKJ4lqV0RQHxYhWALF+0gjAzWZzZWQTVh7p2Lb6eHnw9PUiRi5epZSVAX18vGzdv
      4UhfH5gGxYrLXXfvRBJqbYBbUd6tVLx91XI6toVlVnBtGxybimngWja4Dka5BIKLZVuYtont
      2jiOjeVYWI6FbVaomAaOa2M7NqZjYjs2jmtj2iZCJAJ1cS89HCzHs7SWbeHi4rinf3Ndd+F4
      WeevKgKYtguui6qF8ft0CmWTsCphmiaGYWBX3RBJkq7o+K2Tr3E8ObCQVsU2L0sn2/GW7L6U
      C2I5XmSWC+GUvHePCwjVPYsee/cJC88UBK/t5x2f/bvjeMeiKFzk2MF1L3XPhY9d10WSxIXj
      U8/07hEXZlue+9upY9t2qs849T9xEUXv2HVdZFnCsR1kUUaSZWzLQpF8C/fLkoIiKwiugCIp
      +BQfrgOyKKP6VBBBCSj4ZB+uK6JIgYX7VUlBEARkwbM4siwjuN7/UvX5cWwHURBQfX5sy0IQ
      RFRFxbbt5bUAjlWmf/AE9c2rkByTuvo4ExMztLVdvQtULBcw3dOFXpEuL0aWLHqm1bZspIt0
      lcqijHiRUc6VWAPX5C+NZbUAouxn06bNZ/3W1tZyTZ6tyn6C8tK/J7BcC1m6+T7oqOHqIBuG
      QaXqq91IlEqlq5K3bRvpKuJc1eRvT3lZVVVUdWVENak1gmvyyy1fs/k1XDM4rothefHBDMuL
      DbYQM8w8HTusbFnV+7zrLl4ngigIqLIXTC+gKPgVL8iepigLQff8koJf8YLw+RXl4l2nl4Ea
      AW5jOK5LtqwzmcsyVyhgug6W7QXCM227GgDPxqr+blYD4y2GcwvwqUiRqizjl2X81aCB/jOu
      +6vXRUHAsixESVogkG6a6Ja5QJxMWWeqkPOIdcY1p9r7Josid7a2s7GxCb98+d9V1Ahwm8C0
      beZLRSZyWSayWWaLeRzXJebXaAqFqQ8E0VQfSjXkqSxJSIKIIolIgogsid616xTmFLzVmzXF
      C6kav8I1cdOlIv3zc/zowH5kSeSO5lY2NjShXkKnW2YqxM3qg14P+WLFYDKX8wLMFfMkiyUk
      UaApFKE1EqGlGorUd0ajcSXpf7XyuXKZ3pkpjs7NoEjSRclQI8BNLO+4LvPFAtP5POPZDNOF
      PKZjE1B8tIQjNIfCtEQi1AUuPUXiZsz/5cifSQa/LLOlqZWNjY34ql3eNQLcJPKGZTGVzzGZ
      yzJTyDNXLAAQ0zTaIzGagiGaI1GCFwjEfbXp3wry2bLO4ekpDk9PEfGrbGlqrRFgpcmfaph6
      hT3HVD5HtqyjKQqt4SjN4TCtkSj1geBZ/vhK0f9mkZ8rFjg0PXn9GsEzk2OkMnnau9eSnDiJ
      owTpbKm7aSLFLwdM22amkGe6kGcsnWJeL53VMO2Ixbm3o3PJtXoNF0ZDMMRDPeuuHwES9U2E
      gwrDx47gBpuRc3McLaRYc0ak+PTcJE3dm66XCisKBcNgMp9diHye1kvIokRDMERrJMLOtlU0
      R6JnNUxruP64bgRIzU4yV7TZ0FHH8ZyKhEDRFZYtUvyNkndcl7ligelCnoms56/rtkVcC3g9
      MKEIdzS1ED0nnrHjOIiuu2QdVkr+bzb560aAyekZAuEYBbEJO3UcyxdgU1viukWKvxE+aKlS
      YaqQYzqfYyKbJV3WEfDMa3M4wh2tbbReZq1+s/nQt4p8rRF8GfKO65Ip60xkM0zmcswWCxQr
      Bqos0xKO0FZtlDaGwhccKLqR+tfkL4zaSPA5qNgW0/m8V6vnsswVC1Rsm4ZgiLZIlJ66ej7Z
      2X1ew/TUR+k13Fy4rQmQ1kvMFPJM5nKMZzPoloksigsjpfd2dNIQDNUK9i2M24IAluMwVyww
      mcsylc8xU8hjOQ4hn4+WcJS2SJQ7mlqov4oAHTXcnLjlCHBqHsxUPsd0IcdsoYAsijSHvTkw
      25pbaQpHzmuYXk0PRA03L24ZArw3Okz//CyaotAS9robNzc1X9Y8mBpuX9wyBLi3yc8vNCZA
      VL0ViUUfiF50xqVGPanh1sOpICWz6SLpfPnWIYCjD2Hpx3EdA9fWwTFxHR3XMcC1FxcSJATR
      hyD6cQUfoqRVl/P2g+irEkk7TSpJRRD91XN/lWR+7/4abjjyJYNkVmc+VyKZLZHMerEd5rMl
      DNP2vjdQZeJhjYZYgLpI4PQ4wPjYOO2r2m+c8jdgHMB1bXAquLaOZZYQBQsco0ocE5yyt7y3
      Y3hEck4fn0sy17EWX1foDJKdJs75JHNQkGTtoiS7muXBL4WbUT6d1/noyAR7+ifRDZOQ5qMh
      FiAR0aiLBKiLBqiPesc+ZfF3t5CiXvKCL0wMHyerm4iKH8csU07P0L5hE9msw9qu5iVn8HrD
      GXodI3kMBNELBBFuqS7D50OItiMG6s6TEQQJJA1B0hDFyPVZnfkMkp0m0iIks3LYVvKiJAMR
      QVS84BKir0oSDUGUcWybiigiKnEkfwsICgiyt4S4b/F1/2825EsGJ6cynJhMM5XMU9Ar3LOx
      nf/t65/AryxtbdLzJEq6wequHoaOD6HIDonWbnr3HOCTn/vcNcnE9YLY/RnkdZ/zVhTOTeHk
      xnHSozjZUdzsJG5p3luLUo14hIi2I8Y6ECKtiNFVeCu2XXucSbKL4ZpNpzYz2PqYt6a+MYlR
      nsAx0+A6CEoCyd+CqLZ44Y38LYi+hiWnuRzIFQ0+6BvjoyMTmLbDro1tPLBtNYnI2e9zqb14
      Cy5QZn6GmWSGzp41TI2O0La6C6uUBTWMXsiSuED0kGuF5XKB3HIWJzuGkx3HyYzi5iZxsuO4
      VsWzFuEWjxxnEmQR67HU9G+kvGNmsMuTOMYkdnkKx5jCqcwDLoJchxLdji92N6Lv0vldSvqX
      K58plPmwb5w9/ZMIAty5roVPbGo/r9Bfi/Sv21ygualxZrM6mzf00HvwEK6isaatbkWvDi2J
      LBDCyY7hZMZws2PeGvTgBaqLrloghxhpRYi2I4jyTUGAi8HUZ7HzezCzB3CtDEpkG0p0J1Jw
      /WUFvrva9OczBXb3T7G3fxJZErlvyyru2tBKSLu8byFWHAEAjg0O0tUU4FguhJKdICu47Fhk
      dWjBdcjlcoSuYiT21OKt11Pe1TOeS5WbwsmM4GQncHPjCIAgykixtqp7tQohugrCraBGVoz+
      ly3vGFiFfirp93D0IeTAKo8M4Z0gLl4LX0n6lu0ylSwwMJZkcDzJ5HyekF/hvi3t7FzfStB/
      5eFil5r/694NKio+XNPAxsV/gdWho5pyc0yHDtd722LyFR2xNIeTHsbJTWJPH8bNTXjWQxAQ
      tLjnUoVbEOOrESNtCJHW01FMbsRH9aUkzkwf9kwfTimFtPVrSA3rARk5sRN/YicAtj6Gmd1L
      aejfI0ghfLG7UKJ3neUqXSh9x3FJ5koMjCYZGEsyMp3Bdlw6m6N0tyb46gMbaauP3HrToacn
      RpieS9Pe2UMhOYWrBFndWnfdVoe+0S7EpeSdUhI3O46Tm8TJjHrtj8IMOBaIMoRakBNdCNFW
      xGgHYrTNix98DdN3Zo96hX32CG4phRCsR2zciNS8FUfwYR/8Z0DEt+v3kRo3LP6cSopK5oPz
      XCX8a5FlmXzJ4PhEimPjKY6Pp0gXyrTVh+lpS7CuPUFXS3zRLslbjgBXiludABeDa5tYqRGE
      QpUcuUnc7LgXfdF1EIKNiLF2r0Ee60SMtiOEm86K93tm+mcV9rl+r7AHEl5hb9qM1LjJCzi3
      iP5Oaghj7w9wy1nUu38XqWXbojrnSwaTc0kmx/cxMfIR08U4M+XV+OwR1jebbFizhXVr7iYW
      Wzwm2bV8f1cjXyPATSDvlJI46RHc3MRpguQmvIuighhdheuPQGbksgr75aRvZyeZfO2vmNV9
      pHp+hbm8zUQyTyqnIwoCQb9CUyJEcyJIUyJESyJIa30YpzyBXR7DLg5h6SO4VsYLbepvQ9I6
      kAJdSFoHohy+aPrX8v1dDDUC3OTyrmXgZMexSymU+jWXVdhPwahYzGSKTM7nGZ/NMp/15sgY
      pjd1pC6q0RwPUWcMkTj5JKsf+gMaN33qivV3HRO7PI5dOomtj2KXTuA65WpA7A4krQPB34ES
      WrPkeVs1AtykBfh6y+uGyVSywOR8npl0galkgelUAdtxURWJ5kSIljqvJm9OhGlOhFB9izRm
      C7MY7/8VVEr47vmDamP56vR37SK2Po6tD2MWh3D0EcBG9DUgBdYgaauQg2sRldiS838p3DIE
      MKamoKQjBgOIgSBiKIhwBd1iK7UAXwoV0yZbLJPMFpnPlhmfzzGTKpLMljBth4Cq0Fx1T1rq
      wjTGgzTFgyjy+d9DXE76dvIElT1/D2bJayw3bbkq/RdL3zZmsUtD2MXjnhtlpkD0Iwe6kYLd
      SFoXkrbqLGtx2xOg8OFHmMeP4xQKOLqOUyicjjoHIAiImoYYDCIGAojh8OnzUBDX70cOh71r
      odBZsWQvB9eiAIiihG6Y5PUK6XyZfMkgVzTIlQzS+TK5kkG+aKBXrIV18RVZJBryE9YUWusj
      tNSFaKkL0xANIEnXrwJwshNU9vwDTmEa345vQts917UCOGUtrOIxbH0YuzwBrouoNiAHusHX
      guyLIUghBCWGeJnhsm4ZAlzyBToObpUYjq7j5PPevljCKRSwCwXcUmmBPG6lAo7rBaPGi3kr
      BoKehQmFPKIEAwiBINJZBDptfWzbIVctxNmiQUGvkCsapAtlCiWDTNGgUKpQsaqRFCURv08m
      ElSJh/xEgiqRgEo4qBIL+qt7dVEX5UZZICc/TWXvD7Bn+rzg3bLmNcKDjd7IebAeIZBACFT3
      WnzRkeWlzeZ1vDlPpROY+iSCU8S1cjhmDtcunHGniCAFEJUoghxFkMOIcgTRDd0+BLhaebdS
      oZzJkZ5Pk51NkZpJkZ5JkktmSM1nKAkyOUmlrPgRIxHkRAIKedRsilA+Q8gqozkmsbBGXWsD
      4XiERFMdkYYEaiSM61c9Ai3B+ixH/i9X3jUKuOUsbnHWGzkvzuOW5nFLKW8rp3FtE0GUQJQR
      tARCsB78MaRQ42myaHGPPNLljQpfcDauUcBJncBODWLN7Mee78UtpZDUVsRwx+1LAMdx0Q2T
      XMkgUzDI5EsUy9YF3Q3H9RqNnrvhIx72E9J8REN+okE/AVUiEQkQDpxfeBesT6mEUyyeZ32c
      UsmzQEuwPmIwgBgM4foUhIqJWyrilA3cctlLQ9eraeu4Rtnb6zquc/ZHQq7tIGp+1DVr8K1b
      i7puHaL/8j/0WVIN7lgeKYrzWIU5xHIat5TCWSBMEuyKFywZPFJUCXOKJGKwDkGLY5kVhNwY
      TvokbnoEJz8Ftgm+IGKi25u/Fe+qzuE6HZn0liFApWJSNKyz3I1Moewdn+NuAEiicJa7EdJ8
      xEL+y3I3FsP1rIHdSqVKnlOEKeIUigvumlMqYZd0JL+KGAohqCqipiFomtfO0TSEgIbo9yOo
      fo88iywKINo2xsAAlcFjGAODuI6Nb/Vq1HXrUDesR4pduDfmultg1/EsSynlWZdTFqU0j6un
      cZGQEp2IiS5voDDWcdZA4YVwyxDgqXf76R+ZJxbWiIZUgn4fsaBKLKwR1nxEQyohzXde78cp
      rBQXYiXJu45DZWgI42g/xsAATqmEr7MTdeNG1LVrziLEStT/YnBKJexUapkjxZvlCy6PvtLb
      ADV5cC2LyvAwxpGjGIODOIUicmsr/g3rERobkf0qSBKCKCH4PN9dUBQQJQRJ9I4l6Tzrc631
      P1W4rfmkt08lsZMp7FQK16iA6PUISvH48hJg4MhhOs9YHl1wyjR1byKsSjUC3ITyruNgTU1j
      9B+lMj2DYFm4tgOOjWua3j0V02tv2NXfbOe89gd4USYX/ab6TJxqFwkCQlVXQfGI5pQNqD5X
      1DSkRAKpvh45kUCqSyAlEsiJBMI5S1ou66oQtisuujz6tcDRmV5mCtOLXjNt85LyF5pPbrs2
      zoVWlbiEvOO62M7lfaq3mLxlmzhcXv3kOi6CKOA4NrbrXPA+yzZxF3mm67g4ODiLyJp25bzf
      7DPTEcFtuYwCDHifni7SjWtXFvSyHIuL1suOg2t77/UU0ZAVxGrhdl0dQcgAQ1DC28YWf9Sy
      EqB7VdOiy6P3dLVjmiaGYWDb1UaqJF3RsU9SCfoWXwRLkS79VZHt2Eji+WQURRHpMuan2I5z
      3hqiXvzay+vGcxwb8Zz0JUG6zEIFjm0jShKiICIiLqR/qiCdOpZECVGQcKuFVxBEXNfBth18
      ig+h+m20KAo4jifrk30LBHUcT06WZDhV/iUJ0zSRRBFRknCq/5MrOnYFVJ8P27aRBBlZlq/o
      /3/We7uCsnPLNIJvRheiJn/j5WXDMKhUzjdxy41SqXRV8rZtI11FeKGa/O0pL6uqirqEkcfr
      gZoFqMkvt/yytgFqWFmwHIepXJaxbIb5YoGQ6ifi9xNV/YRVlahfQ1Ou/AP1mwk1AtwmcFyX
      2UKeiWqBny3kEQWRhmCI9miU7S1t6JZFzigzkkmTN8pkyjqG5S35KAoCEdVPXNOI+jUiqt/b
      /CphdfEpE14vmIOLi+24uK6L7Tq4Lliug+O4OK6L4zposkz0KizAUlEjwC2KtF5iPJthPJtl
      Mp+lYtnUB4OsjsW5Z9VqGs+JfHMpF8J2HLJGmYyuky3rzBYLnEjNkyuXyRllgPN6rARAEkUE
      BG8vgCyICIKAJApej1WVXPlymVzFIO7X6IjFaY/GaItEUa5z2NhaL9AtIF8wDMYyaSYLOcaz
      WXJGmYZAkFWxGG2R2GVFqlwp+c+Vy4xm0oxm04xnvQXJmkIROmIxVkXj1AcX7+q+7T+IWSn/
      wOspb1dDPU3lcwtbyTRJaBpNwTAd8QRtkeiSIsuv1Pw7rstkLst4NsNYNsNMIU/Ip9IRi9MW
      idIZT6DKS1+Zr0aAFSpftkym8jkmc1kmczlSeumsGMQt4chZNftK0/96yuumyVg2zUjGsxJl
      06IlHOGOlla6E1e2rmmNADdY/lQM4rF0mtmSV7uXKhV8kkxrxItB3BgKUx8IXjRa5c2a/2sh
      77guJ+bnODI3y0gmRUcszraWVrrilyZDjQDLKG/aNtP5HDPFAuPVnhiAqF+jKRiitdrwu5Vc
      mOWWd1yX4XSKg1MTjGUzrKtvYGtTC23Rxb9luG4EKOZSzKRLdK9uZ/jEII4SpLOl7raZDl0w
      DCbz2YVg26lSCVmUaAiGFmr2hmBooZdjpel/K8g7rsvJdJJDU5PMFPJ0J+rY2txKS/j0gsXX
      rxtUUrGNeZziLEUhipyb4/9v7zx67MjuK/67lV7O73VkBzbJYZjRjK0wI0uwJFuyHBaGAS+8
      MAx4p4XtjeG95xPYgA144a+ghVcyDMEWIIxHCSNjRiSH7MDO6eUcKt3rRb1+TU43p5txms0+
      QKPCq9N1q+qeuqHu/Z97nRpXHxoOXS/vMr5w64Ul4WVg1DBttSh2A9PtnuuQCkeYSiaZiCd4
      Z3KabCT6RSf1tYMmBFeyea5k80ilWK1V+dnGGuVuhyu5PG9PTL04AcSG3VXSc9DNODqCrhLH
      DoeWUuL7Pp739F69UsoXznd8n712i51Wk/12i0qvi67rZCNRphJJrufH+Pb8Fcxj6uon/e+X
      kf7XnT+fSjOfSqOA9UadD9ZXX2x06LXNXa7dvEVxYw1lRbk6nWVxszgaDj01keXBZoVrV2bP
      VBVIKkVz0B91Ne60mrQGAyKmydTQWX488WjD9CxWAS74J+O1bwS7vk+l12WrUWev3abUbSOV
      Ih2OMB5PMJVMnaph+qpmgNeVf+Bb8FoNhejY9uiNXuq2qXZ76JpgPJ5kIh7nK9OXGIsnTvxq
      eoFXC33bZbPYZKvUYmWnxna5BUA+FT2fApBKUel22G+32W0HH5Jc6RM1LSYTQcP0SxOT5KKH
      n9Wf9Q10gS8eUirKzR5re3XW9xts7DVodG0ilsH8RJrpQpI//vpVpnKJUXSQc/PEl6sV7ldK
      lLtBSLx0JMKlZJrrhXG+NX+F6FP0rV/g7GOn0uLD21t8srKP50smcwnmJtJcn8nxJ+9dIxn7
      /Lku50YAqXCYb8xdPvGL6QVefTQ6A3768To/v7vNWCbGd35rnj/75htY1pPPXTg3AhiLxS+q
      MOcYtuPx0082+MXdbQxd45tfmuUf//rbREJBpn/aLtRzk2NkbwVXdYfRf5NoZgZxyogMFzib
      cFyfj1f2+eA3G9TbA967dYm/+/N3ySQeb5j9pBgJYHdtiej4AumQy53FHd66dfWRA7e3t7h0
      aea5nfh5Q0kbv7cchMd26kivBeowHlAQHjuDMFJoZhphptCM9FAsaRBxztH74JWFlIr7mxU+
      +M0mq7s13rkywV/+wdtMZJ/eQ/rzMHriXcenvb1B1/Bo2za7m2s0mi2mFm6wu7pIpdU90wLQ
      428SSh/vaAiBwUIgjCbKayLdJt7gU6TXQrktfLeGGAWM0oYx5ONoVg5hJBFGOhDOUDDCSJ7K
      Qf0Cp8NOuc2Hd7b5aGmXm7N5vvvly/zgT7/yws9rPLwq8On5GglLsLO3SzKdprjyG6yJW0yG
      t194Yl4khB5Dj8TQuXTs7w93gyolUV57KJTGQ4LZDMwXvAbSbTGKDIUGegLdSqGZuZFDiTCz
      aAeGDObpPX/PO6RUlBpd7q6VubteYqfcYiqf4FvvzPEXv//mEznbPCtGAohEI8QsQc3RiBk6
      2WScVtdhcuE6Gw+WcdTpIpSdBwihIcwUmCn0yOyJxyvl49m1wKHErSO9gc0ujgAADuBJREFU
      BtKtI3urKLeBdJuPOpYIPah+melhtSwBWgLC+cDix8qg6cdP/XsVIaVis9jk9lqJO6slGp0+
      k7kEb10ee25O8U+L134oxBfBV8ofCiMQivLb+HYV/NbQ4qeO8vuj44VmDatgmWFpkhmWMgmE
      mUEzUvjKODPX77g+y9tVPt2ocG+9TN/xWJhMc3OuwI25PPnU0ZGx5zou0Me//hWxzDiXcjGW
      tookkhksIZkcS7Ox32ZhbvLkf3IC/Ds/xKssIuLjiGgeLT6GiBUCN5FY/kzV14XQEVYOzTqc
      sfR5D1BJJxCF20B6bZRbx++v43ntw/3+4PFxRIWO0CwQFkILBcYRWgghLNCsoLdMT6Nlv34q
      S9LPotEZsLxV4f5mlZWdOgALUxluzuX5o3evHOuac1bwEkoAl19++BHZqWmcXoubb77Fp3fv
      gmvTdRRf/dpXEErSarWIx5++pS+dPnRLqE4R1asgOyVUt4waelQJFALQwslAEA8JhVgeGcqg
      xQojO54nPv9jokufCb7yUcoF6aCkDcpD+YNgn9dFbX2Iu/dL5HgGPTFFKPdttMRXQRx2IysF
      pUaPzVIzMNYutyk3urieTzoWYn4yzY3ZPG/M5AiZTz6W6ou6fy9cAMr3UZrO8p3buLrg2vU3
      D/0B/D6FyzdJRcyXVgVSdgfZLaE65cBep11E9irIdhH61eFBChFKIGJjiHghEEpyMvCnio+h
      xfJPff5nTf/z4CvPxt/8Oe7ifyEbmxgz76JSs/if/gfu/DfZwGWnWKRmfJfdpkW9PUDXBBPZ
      OLPjKS4VkkwXkuSTkVGD9VW6/ofx4gXg2SytrKGHoizMjHF/6QH5iRl06ZLLZ9jZKTI9PXnm
      2gCHQimiOuVgvVsJhNOvoqSP0AyEFUPExiBWQEuMB1WvaB4RL6BFTx+h4EVngIczfa+0Sjn+
      JcrZb1DSJinWu+xXOziuSywSZqL8P0xOX2L+a98j5/83Mf8+Zvo9QoXvP7aKdCGAZ8RZE8Bp
      oQYtZLeM39xF9KuBw2G7ODJwO0DgkZtFJMYDD91RNSyLFs099/R3+w47lTbFWoetlTvsLX9C
      1bGQ8WliuWnGMjEmc3Gm8gkmsnHyyTDh0NBgwu5g/+xfkfV1Qr/792jZOZzGL3GqP0HoCUKF
      72Mm3/7c8z9r+l8W/0IAL4kv+/WgBOmWUZ3So9WwXg2FQIihFehBCRIbQySCtoqI5dEiGSDo
      Zal3BjTafZpdm1qrT7nRpdzsUak1UI1tQoM9psfSTN14j6mZ2RPd44+dVN7cwv7gn0AzCX3r
      H9DiY/j9Dezyj3HbtzFTXyOU+w56ZObM3//H4UIAZ4TvOC7dgUutsk99f5vq/gb1/W1qtQpN
      P0qLJMQnEKEEem2JlKqT1Lpk4iEy45fIZVLkGr8ma3QwZ7+OcfV76LkrzyX9/t4n2P/7zxgL
      v4f55b8aucq4zf/DqfwY6XUwkr+NEZ3HiM6jWYUnvv4LAZxDARyYcdc7A2qtPs3OYPjmHoz2
      OZ4/DBALyXiYTDxMJhEmHQ/sXoPtCOl4GG1onD3yzO1WgjZKt4Lv9LAWvo2Wmn4h16+UxL39
      Q7z7/4n1O3+DMfPu4W9+H7vxMcrewu+tIJ0KaBH08DR6dAEjtoAenkHojx/EdiGAV0gAB1WQ
      WqtPo9On2bGpNLu0eg6N9oDuIBiEJ5UiFjbJJiNkkxHSsTDpRJDJ04nII0bcZ1HAx0F2Sji/
      +DfUoIn1O387KmWOdCJIF3+wjd9bw++t4A92kG4TzcyixxYwInPokXm08BRC6BcC+KIFcOA0
      X28PaHQG1NsDqq0ezc6ARtem2RlwcKdMQyOTiJCJh0nFQ2SH5tzZZJRMPEwscv4ju/ml+9g/
      +xe09Cyh936AbyZOJyC3id9fw+9v4vdW8ftbIEyEkUSPTKOZObTQOJpVQA+Nf26p8SzpP8C5
      FoCUiu7AGTUU6+0Bze5hFaTa7OH68rFVkGAZbKdih1WQ057/WdP/KvC91Z9i/+rf0XJX0RIT
      QYM9kkGLF4Jer1geYX5+JlZK4g1K4FWRTgVp7wVLp4zyA+84oSfQQgU0a2wojmB58DX9NOlX
      no0s38cv3sUv3UNWl86PAH7yow+5vdOkE4rS7Q7wG038ep2w0yfp22QMSGeTZAtpsrkUmVyS
      bC5FKBZBWCGkoWOEw4hQCC0cHhkxnxavagb2Ox28Ygmv0yZy7Rpa9Mkj2Ckl8coriEH9sFer
      V0F2g3W8fvApWdMR4RQinEHEcohoDhHJosULSCuJHk0Hv2tHr0N6HaRTRtolpFNE2mWkU0K6
      tWEaHjXoUN4A6nvQsRGtDsIx0EJ5iMdQiTAqEYVo6PwIYL/axpOKdCxEZNBDuQ5yYKMcG2U7
      KNdB2Q7SHgTbto1ygqV0HORgAJ4X/DYYjIyYj0AIhGkhQhaaZQXr4RDKNNHDYYRloUUiCNNE
      hCyEFRottZCFCIUQ1kPLFxxYSw4GeOUyXrGEX60Emb1UQna6AGjxGMbYGITDuGvrqH4fc36O
      0PXrhG/eQE+fbmzQqd7AB433Xm00REX166huGb9bQ7g9lN2Eh83FhYYwoxBOBV/nI5ng42Mo
      iYikEVYcwin8XgMq9/DLi6jGJhhh9LEbaGM30cduoaWPH9V7bgTwst6gSkqU6wZCcexgfTDA
      6/cRnodyXFS/PzzGRg4GwbrzGdEN+QcNC6UedVoXmh4IJxwOxDQUknawfSCu4bYUQKOBu1/E
      r1Tx68GgNBGJYORzGGNjGIUCxvgYeqGA/plxVwfXr6TEWV3FXlzCvncP2W5jTF8ifOM64Xfe
      Rk8dP6/hRd1/pSQ4HdSgjbLbqEEdZXdRgyYMmiinE4jKjGFMvIU+fhMtdfqJWxcCOKN85fuB
      YAZ2UJo5zmHpNCzN1LDkUq6LdF3MfB6jUEAvFDCymeeSfiUl3u4u9uIig9t38Go1rLk5Qjdv
      ELpxc3Ses3b/Pgvl+/iVCl65glcq4e3v45UrL1cA1d0NtmoddN0irMFEIcF+W3Ft7uyNBbrg
      Hw8lJe7GBvb9RezFRfxGE2NiHH1qCt00EZYJhoHQDYRlIgwDYQ73Hfwds+0LgWEY2NJloBw8
      6eF4Np708HwPVzo4vhus+w6+9LB9e7jtIqUkoUzGByaFgYFea+OXy7ilEvVmkUq/gkonCU9d
      whobJzx1icjE1MsVwJ27d3jrzbe4MxwO3bIl33jvq8DZKwGkknjyaDtAKXXsfs9zUeLorXzc
      8b70kco/3B46nfvSx1fyyPFS+vgPHT86r/RQSiGljxACT3pDe1IPqST+8NyO76KQeL6HQuEN
      2ziudJBK4XpOYGeqfDzfQyofT3rDdMphpgvS5ksXXx7eH39/n3jDxpACCx0LHV1CGANTaYTU
      4b4QJqYSwX4MdCUIq+A4SzdBqlH7S/o+/nDa6cP3y/UPvrMcpiGqh0lkxzHGxzHGx2jHTcoh
      h3LIpS/c4X2ReL6LP+S5vvNywyCkwwaVVhffV0QjCRayGtvFOlOFFK7rYts2vh9cpK7rT7T+
      4+UfcXv/k6dO25E6OKAf0xshEBiawcF7QwgxWjd1K6izwmi4gBACUzeRMjhG0wRSKjShYegG
      UspH/o+GhmGYyOF1abqO9H00oWEa5pFr10UwE8zzPDRNI2SGkb7E0A1Mw4DhVNaIFTncr1uE
      tMDbNxwJ9msIwqEISIWuGVimhVACTdOxDAsNDcu0UBKMh34/SIvjOOi6/sTP7WDd930sy3rq
      5/8wdF0n7fukgRsncF9yG0CxvbFOfmoW6dpEo9HRm/+slQAX/NeDLwaDgXIc56lP/LzQ6/WI
      PkUf9AEOqhAX/Av+k+DM9AK9qjfwgv9q88/MTPFnmQ96wb/gPy3/zJQAF7jAFwH9/ffff/+L
      TsSTwh10WV7dJp/LsL3xgJ1SnXwmwdL9JXqOJBkzWVxcRmoWsWj4ifm+3WFze4dqo03+mA9K
      J/Et4bKytoHSTGKRo+dv1crsV9ukExGWFu/THniENI/llTU0K0qnXmJ9c4dMPo9+TJSK3a11
      tnZ2SaRzbK4u0uw5JCI69+8vgRXFaddY3dgknc2jHzOA7yS+5vbY2CuRTR/z1Vf5PFheplRr
      kU1GuLe4iNJCeP0WD9Y2SGZz7KyvsLtfJZvPceT0p+BvPlhkr1wnl8sdDdJxCr6hKT799D6F
      wtGJOU6/w/KDVbq2h+73z04V6Eng+qDhAx7NjstUTPLRr2+TmbtOo1pkeXEJwzKJxY5vVJ/E
      zxYmmJ/Kgn40856Gv7m1zfzly+xvbx3L10NR7F6b5s4KkYlrtGtlHqzvcuvWLXY2HlCuNrlx
      dYrFpY1j+fnxaaazIdZW7uGGx+k2aywuPeCNW29S3F5nZ7/MrTfmWF5eeyq+1EyU2z+Wi1LM
      LFzD6zT5dHmZK9dvUdrbYmuvyK0bV1hZWmHy0jxx0aPeP/o94zT8y1evY9hN2u5R+mn4Ww+W
      aXSP79gReojr169TLe2zvrP/agogGjsIG2gQj+jsFUukp+epri9Sbbbp9W1mZudYvHf3qfgA
      S2t7XLt8fMCuk/iRSISNtVXMx3gDH1jIJqcW6O4uU6m3mJuZ4N7iEj3HI5eJs7a1h3zMgLzS
      7gb7XZP5fAQjFEITAk8IdAEIEJqG0EPgH58JTuLHYp8TllEzWL33CZnpOTSljWxvhRAI3QTl
      sb2+hIxNkI8ek71Owa9XijhKII+L+X8CXzkNPn2wTbu6T7MzOELXNZ+PPvqIazduoQnt1RRA
      rbxPtVpht1hB1zVcK8uVsRhCE8xcmuXawhxLy8ukMkfj95yGr3ybaCLz2JtzEt8yDRTisf3S
      OxurVKsVmu0emq4zPTODJjSE8pmdnUfTdAZ9l6vXFo7l7xdL4PXxohP0dpdQRogrU2PcvnOX
      RHqMVCzMndt3mL58/Jzgk/jF3S0qlSrlWvMIV9lNSi2PTr3O3Mw4t+/cJZbMkklEuXv7NlOz
      8xRLdexek4F7tAQ4kX9plnKljtBMTOPoEziJP33lHf7w+9/ljTfeIBU/WoIXNzew4kmqlQq5
      VOyiEXyB1xuvZAlwgQs8L1wI4AKvNf4fGzG0QdYib+sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Unit Dashboard' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Unit Dist Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Unit Econ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d5Aj15ng+ctMeKCqUCjvva/2juymd5JohpI4kk6jkWZEaajVuNuYi9mN
      27iL3b2Ii73ZvR1zcsMmKY0kyowkjkRRokjRmybZrrrLe+9QhUIBKHggzf2B6mpXXV0GXaYb
      vwgEgES+L79M5Pfey/e+73uCpmkaKVLcoohbrUCKFFtJygBS3NKkDCDFLU3KAFLc0qQMIMUt
      TcoAUtzSXNMAettOc7aj/6rtzt4W2kfnVxR64oMTy/8gB/jgZOuyP7W1Lb/9ahEuuoamLnzj
      gw9OrqpcgghtrX0Xj9natuxe3qmhxWPItLV2rUH+zqH15DscP3586dXaN7bqsmH/PD//yQ/5
      0b++gC8UAyAWmOM73/omb5w4S9g7zbe++U3eOdnG2RMfELlRJ5EErmkAbb0j9LadWvquqQo9
      Ha309fWxEIzh97jw+hY439pGTFEZ6u1i2uUFoKqqGgDnzAyhhXnOt7YTVzXQWagqKwRgfnaK
      lvNthGMyEyMDvPy7lzl79izBmJoo5/cwPuVCiUdobz3H8IQTgK6WE7zyxtuca+8GdFRVlRHy
      ufEFE39EwOsiEJFRlRjtrefxBsKXnFWE9raLRt3e1r6k5+zUGN39wwDYHDnkZWUwMtDF715+
      hbNnzxFTwTvnpOVcK8FIfIOXfevZc+RunnrqKcxWK0899RR7akuJBH2ca2nBOZf4HycnJwGI
      +D14/BduY5lnnn6Ouz72SR657zaefea7aGqMV/7tZ9iKG6koyORXP/8pOdV7KSvKpbSqCsNi
      yfHhfnqHxtAAJRam9fx5AuHE/xZamKelpeWK/+vGs6wBRD2jGDJKKEwzMOFLKPjDZ7/F1HyA
      WdcsAH0t7/K9n79MyDfN//mf/jNjLi8/+OEPAHjt9dcT7y/9ghdffZuQb5Kf/dvrQIzXX3sX
      NeDkuZ/8Gjka5Hxb91XH/+VPvsvzP38JVYOu1nMshGO0vPlrWgZnr9r39ddfQ9JCvPTK2wD8
      /nevIuolfvDs0yyEozz/3HEWYuqKF+GHz3yDj8730Pn+y5wecBFw9vFRx+jlO8Xmefb7v0CJ
      hznX1rGivJ3KuTOniCkKv/7x95gNKgy3f0THyAwv/volzGYjAKHpXvJ23U2eIw17ThH7ii2M
      +xVUVUXSSQBoaOikxOd3X3udGPDuyz/no45hJvu7CcTiPPv0M4SjUZ47/iwxVeW5Z59DUWTO
      tpzf1HNe1gBOvPUeBrOAwaLnzTc/hNgchqxG7rvrGAf3NC3t97FHP8nRu+5md/Ne7rnjKIV5
      WZcLMtv5/Gc+zdG77oHwwsWDmu04DHFOnW4hw5FFcXk1JcXFHDhwAKtBJCZa+OqXv0RZUQ6C
      FqejtZWZORfDI+PU1tZSVlnHvl0NS/KM9hLkwDSaGiWsmbBEpjjXM0VnWytBzzStfc4VL0J+
      RQN/8PBD3HFkLwu+4NL28upaiovLOHBgHwZjGrlpAidPnSXdnrWCtJ1LPBKi9fw5XLOTjLv8
      3PHxT/Hqc39H7dGHMekEAORYDKPRuFTGZNYRk3XU1lRQ17SHyspK6irLqN+1j/Li/KX9Rt1R
      PvPYQ9z3sY8hunromfLS1tqKZ7qPPmeE4nwHJ0+ewmTL2NRz1i23cWTOx54yHVhK8PW1gHSA
      gG8OAFlRNnxQWYYvfe0v0aHw7Hd/QGPlk8jKxVrakZWNmLjenOkc5mtfewpX/yneHQNBEInL
      V3dBdpfY+fVLL1Nz8E4wmtm1Zx9f/dPPoqkK0fgF2VY83nE0QIuH8IWi19FUQFETx1Jllc89
      +XUMEjz77PfYXfuVDV+H7UWI4ekoT/3ZU5x65acAuEa7KT94P20fvce+ik8BkF5Uy/Cvnke9
      ew+CJtPS5+Zrn9Bz9dPiFcTChGUNswQGWyZ79h3mTz/7cVQlSlwVqPrUlzCbdRx/5lmO7W+8
      sad6CVcZgBJyUdZ4lAMH9gEQ987ijpnZVZHGt79zHJMY49DHD2LIzMZkSDQgeXnZiffcvMXv
      uZd9B3Fxn8S7Gg/wwx/8AFlVaT50NwCFdhNPP/MMT3z+y0vlAWqKHTx9/FlyMkxk1xzCmFtJ
      ZORp/uVfZ/jTzz1Obl7iGPvuuJdX/v57PPp44o/aU5HOd/75aURR4pOf+2NMRj2g576jTXz7
      298BTePhT3/+Mj0N1nQyJRM6kw1HugkwYjdFeOaZf+Gzn/8UL/z0+8QVlfp9x5J0+beei9fa
      gsMS5tlnn8MkqRzaK3Hy1BCfevwxuk6+Td+Uh9rCTNBZ+dRDh/nn73wbgHsfewK9ANZ0B5Ip
      cTvZLrk3svPyEIHHH/sY3z/+HQTJxBe+8iQV6af556efRpQMfO6PP88r//ojfFGZwqrmTT1/
      IeUMl+JWJjUPkOKWJmUAKW5pUgaQ4pbmqofgaDRKLBZbl7BoNHrZENl6UFUVUdyYXW5UxnbQ
      YaPXMi0tbcXfQ6EQyjpG9JLxH0NyrnEyZF1lAEaj8YZe+OshyzI63bKjs5smYzvoABu/lith
      sVjWXTYZeiXj+iRD1rbqAmmqRtS/uVPhN4JoTCYclbdajW2NEpORY1t/jbaVAXgn3bz5jy8S
      mFu4/s7bDFXV6Bpx8c1/O8V//t7bjMz4tlqlbc3Au528/j//jenu8S3VIzltUJLILMkmszSH
      tpdOcvTLD261Oqti2u3nvbYxTvdMUV+azSeOVFNV5ECWk1e7uaYnGJ2e5+CeOk6ebkXT6dhd
      ksG5qRgVhTkEvR7yc9Jw+jVqygqSdtwbSe29uxAEgdM/fpui3RXseuQQBsvGny3WSlInwvx+
      /4b7h76Zed751ssc+MwdFO0qX5eMG/0MEI3JvNM6ysmuSQw6kXv3V7CvJh/9ojNYMnTw+/1Y
      LBZEUUQQBPr7+ijPNjIUcWCYH8OUl8W824vBYCG6MMdCVOXokYPrPt5a9ErmM4BnfI6WF04g
      R2Ls+eTt5NcXr1vWethWLQCANSudmrua6fjtaXJrCtGbDNcvtAmoqkbniIvfnx7A449wpLGY
      //UPj5BuvXG1liRJl33X2TKJTLuIKTKZOj3VVdV0dXZiM6dR6RCZmPFQnJd5w/S5EWSWZHPP
      XzxKzxvnOfn8m5Tuq2LXo4fRGfWbcvwVWwC/d45Zb5jKshK8bieqzkaW3crE6AjZhaWo8SgW
      i2WpVkhG7SDLMoIm8OY/vUh+Qwm7Hjm0LhnJagEm5xZ4q2WE8wNOdlXmcc/eMsry7Tdch0uv
      pXNyFF8gQlZeIZIcRNUlfJWGh0coKClHk2OX/Q83kmS3AJcyPzpLyy9OoCoq+z9zB9kVedco
      fX1Zq2VlA/AvoFMWGJ6OEFMFxLifDJsRa24pE8NDWE0m0swCmjWPgqzkGYBOp2Omd4KTz7/F
      3X/+CBkFjnXJWC9ef4iT3VO83z5OutXI/fsr2FOVhyStfswgmQZw41AZ6O3DH4pSW1NC/9AU
      ael2rFIct89PblEV0YAHi15DteSQnW66oQYAIMdkOl85w8ipPipvb6DhwX3oDCtfxxtmACG/
      l7b2DkoLsvEbizDMj+ESNA43NdPR2Qnx6FLfU1VVFhYWsNls61LkApdOapz96XtEAmGOfeUh
      ENYnYzXM+UJ0j87RO+5mfHYBSRI52lTMseZizOtoiqOBMAG3n6yy3OvvfA0CgQB2+/Vbmo0y
      NzPF8OgUBouZpqYmejo7QdBobmqio7OLsM+DPi2LvbsaUBQFv9+/4f8Yrv8fuQamaX3xI3R6
      HXs/fRR78bVjMJI6EXYps7OzZDocRAQTvrFuNJ2emqIsznd0otcZMegM7C5Lp3twjIaqUiRJ
      SuoE0q5HD/HmP77IZOswZQdr1iXjSlRVo3/CTc/YHF0jc3gDYXIzrdSWZPPAgSoqCuxomrqh
      82h7vY14JEZeVeG6ZVzZ/78haBpZuQX43U5cEZWYogEaiYAJBZCwZ+UQCIZQtYROyfiP4fq1
      dkF9CdnleXT89jQnnn2VqqMNNDy4H0l/9XVZbQugqhqz3iA9o3P0TyQqu203CnTlyQy810nf
      O+088DefWvUw2aUy/KEoA5Pz9Iy56RmdIyYrVBc5aCzPpr40m8w083V1WAuxUJTf//dfsP+z
      d1LYWLouGbBJXSAlSnffMIg66qpL6e3tx5FbhFUnMzo5S2VtHSGfl3SrHk9YINeRnG4urO0a
      z/RNcv6XH6Iz6Nj3xDEcpTmrkuUPRRma8tA3Mc/AxDzBSIzsDAu1JVlUFWZSUZC5/Q1AVVTe
      +sZLOEqy2ffEyoEoiqIyPrvAwKSbrtE5pt0BzAYd9WXZ1JVkUVOchcV0/S7NRgxg4P0uhj7o
      5t5//wfoDesfydicZ4C1sxUGABAPx2j7zSkm24apuauZ2nt2L7UGsiyjqDA45WFwykPf+Byz
      niBWk4H6smyqixxUFzmWHbHbdsOgVyJKIns/eRvvP/MqZQdrcCz2qy/c7MPTCQsfn03MvJbk
      ZlCRn8En76ynNHdz40s1VWP0dB8l+6sQxDU8tKS4LnqzgQOfuYPCplLOvnCCmb5J4o3ldLmD
      ON1+jAYdVYWZVBc7ONywh7xM66rkbnsDALCX5JBRV0zLLz9kuLKY0VkfmgYluelUFzn42KEq
      SnLTl0ZpkulotRbco7ME5/2UH1r980qKa6MoKhOuhaWKbnjaSygap6CqhAPxKPOvt3DgUC1H
      vnz3ulvbbWcAmgajTi9DUx4GJucZnUnc7DW5aeSMztCgyTz55XvWNCS5WYyc7CWvtghzhjWp
      rhC3AuFonBGnj6GpxH8+6fIjCJCbaaW6yMGBukL+8J7Gy0blxs8P0f6bU5yYmuPYlx9Cb177
      pOm2M4Bv/vI0ZqOeysJM7j9QSVlextLNPlKYQefvzhK7pxlzxuqauM0iGoww1TXGkT++d6tV
      2REshGL8/kwPw1NevIFw4j8vyKSyMJNHj+ZRlJV23UquZG8l2ZX5nHj2VbrfOM/uRw+vWY9t
      ZwB/9elD1+y+lB2oYezsAB0vn+HQ5+/eZM1WZvRMP+Z0CzlVO8MZbasRBKgryeLhIzUbcicx
      p1to/PgBzvz0XSpvr8eWlb6m8tuvH7ECgiiw+w+OMN01xkzf5Fars4SmaoydGaD0QDXiDeia
      uaYnONPSBkqUkx+d4qMzLbinRjnf0Ul7dz/9vf345530j04n/dg3ijSzgX01BUnxpcqtLSSr
      LJfOl8+sueyOMgAAe2EW5YdraX/pFEp840m6koFrcJqQL7imybrVoCgKmqaRU1BMhs1E3OfE
      XtpAnsnIoMfP3uYmBDVGNOynvX9ix7hC3wiaHz6Is3eCuaGVswBeyY4zAICGB/ahxGX6323f
      alUAGD7ZS2FjKaZlJtU2giRJCMLF4VSdLZOIx0VAkck36ZhbCKIoGkZzGpUFmUzMeJJ6/J1E
      RoGDkj2VdLx8Bk1d/dTWjjQAvdlA0ycO0P9uBwH31kaPhbwBZnonkl77X4pzchRV03CHBErz
      LBSWVVFaVUfEM0tdQwNFJUXkl1aRYdl2j3SbSsPH9hOY8zHROrTqMitesYnRIfzBIJl5pcxN
      DKPpzVQXZdE3PkNaeiYGQaUg186o00/lJje/xXsqGTndT9uvtzZ6bLxlEEumjZzqG3f++UVl
      XEwze3EWtrisIvFBnwhw344zx5uJOd1C9Z1NdP3+HAVNZdf1IoXrGEBxWSWTwz2E58aQHOXo
      fZN0TTjZ19xMV2cnoXiUyekZDh46gKqqKIqy4fFvVVVXLWPXY4d455u/ZaJ1mPymknXJ2IgO
      mqoxcrqfitvrrtp/ozqsJ2XJ2lHp7+7B5/VQUFqK0+1DL+mxSnEisorVnk886MMoyVhyK8hO
      N22CThuj+s5mRk/3M3iii7p7d193/xUNYLC3A7OjiDJrnB5nFAUNkwBxRQMt0fc0GcIEInEy
      zPqke4Nej4w8B9V3NtH5uzPk1RUtRY9tVlqU6e5xYqEI5Qdrr9p/ozpsijcoIqWlRbQGosx5
      F9i/u5nOjk7CCjQ376ajs5Owz40+LZfSdBOKoiSlkoONVxDXlCVC7X276XqlheJ9lRhtKxvt
      is8Aqgr++VkWFBsWzYchPZOG2moGe7vILSzFkeWgurGZwPxcUk5kPdTduwdRJ9H75uqWWEom
      Iyd7KWou35Jg7uSg0NY1yKFD+8iz6nF6AiiqCopCKOBBMtiwZxVg1MIEo8pl7tAbfYmimBQ5
      y8kqP1iLxW6l743W65df6fLUNFxMVW1Pq1363NjYdNl+RUVbN/wm6SV2PXqYUz96i5L91WTk
      b05MbHDej2twmqNPPrQpx7shaBqZ6Vb6enspr65jbnKE2voGjKLKyIST+poywqEQFrMRfzAK
      xvUn09pMBFGg+eFDfPj916k81rjiPbHt3aFXS9tvTjHbN8k9f/EoSMIN7wK1vvgRfpeP2558
      kIVoBF8kTCAaxRdJfG7IyaMyK3vdOqTcoTcu6+zP3iM47+eOP/v4NScob5pxs8aH9uPsGqfn
      zVbqH9ybFJkROY4vEsEbDuOPRfFFwixEIgQDYTJaBpnfl0P32ZOkGYzYzWbSjEbsJjPlmQ6y
      zDujtryZaX7kEK///S8X44vrl93npjEAnUFH8yMHOfPTdynZV3VVs6eoKqF4jGAsRiAWI7z4
      ORSPE4rHEq9YnMji8kuCIGCUdGSYTIs3t4nSjEzSco24W0aYsBj54mMPXLNmSXmDbj1Gq4m6
      e/fQ+2YrJXsrl/UW3VEGEFcUorJMKB4jKsuE5TiR+OK7LBPWxwhkm/jgp2/jPFpAjIvrjomC
      gFmvx6I3kGY0YtUbsBgMOCwWrHojJr0Oi96AWa9fsXnWVI3OlqEb5veTInlEZRnH3lKUEx2c
      f70F/cESIvE4oXiccDxR+W07A3h1oBdPJEwkLqNoly9vqhNFjLrEjWrS6TDp9Jh0Osx6PelG
      E2a9HtMf5XH+uTdoHolz6LN3Jl0/9+gsAffCpga9BHzz+MIqRfnZjI8MEMNIcW4WOouF0DZ9
      VtgosqoSlWUicnypsovJCuHF75Gld5lwLEZYlomrl8+dGCQJi95A5oFSxk4Okb8rF6vRiMNi
      Warstp0BHC0pR6/TYdLr0a0z1cWhP7qbD7/3On3vtFN7966k6jdyspf8uuJNjUcYGh0nxyox
      6TESjEB9fQnTvf3oCx24ZgI07EADmA+HeHtkkIgsE4nHuXIkRhISlZ3pwkuvxyAlPlv1Bhxm
      y9LvBlHEZjJjWGHu5L0hL4UzcSqOVF62fdsZQJrRuOHRgYxCB3s/eRstvzhBRoGDvNoiZCWO
      esVljiuXL7eqaSqyKqMoytJElKzKXBgoUyIyU11jlD9ez5RvIrFNVS5rqS7IyLXmk6HbWEyy
      oiiIoohehFAsRtjtxygofHjyLGV2K2fPdXHPsTs2dIytwm4y80B1HSZJh1GnQ9rAYhmyLC8t
      zH0tqu9s4vy/fUDx7orLngW2lQGomsp3PvhHvGHvhuRomoYgCNRUVfDeD1+hY3cfRrv5Ms9K
      AL10+UORKAjoRB2qpiEu7iuJOkQh8efoejUKrXmciZ1B604YhSRIiOLFiy8goJN0HCw+QoZl
      YwZwwQjT09NxudxU1KYxNbmwGHAvcfTYYTra2tm/b/da8oZtC0RBwLGJI2V5NYVIBh3973XQ
      +ND+pe03zTzAcjI0VeOjH7xByBvk7q8/vOqEq8vpoKkab/zDryjZX7UqH5OdkRpx7SRLr3HP
      KP9y6pkkaHSxwrseefPZ5HTaad/fi2BNVC4rGkBwYZ4ZT4jKsmJGBvtQ9VbKC7Lo6R8kO68Y
      SZPJyrIz7XRTUJC77QwAIB6J8c63fkt6fiaHv3DPunWY7Z/iox++yUN/+8Sq/P5TBrAyW7VE
      0rtP/w5rpo0DiwMkK3e8JCNKNIQanCUoZBBf8NDd309VXSOz0+PMu+cZ6OnC5rh23satRm8y
      cOSL9zI7MEX3a+fWLWfkVN8NCXrZapR4BH8wAsDk2AjhmIwqxxgaGUMjsZiepsQIBKNbq2iS
      aP74ASZah/GMJ/zXVjQbqzUx0qHKMSS9DQmBoCaglwQQBKJhP4GwTLlB2hJ36NXKMDtsHPjc
      nZx6/i2sOekUNpetqXxkIYSze5wjX7pv1brtDHdomJoeJxTWk2GIItqL6O3uQkKlqqqM7r4R
      9FocORakomHPpuhzo3GU5VK0q5zOV85wx599fGUDcE6OMud2k5mbhzI/jGyw0FjkoL2jk/QM
      B3oUGvMdDA6NUXMDkuMmU0ZBfQkND+yj7cWTZJXmYnVcuxm/svzk+WEsDht5tUUb0mEtbI47
      NJSUltHfN8VcSKapwoZ7UgJBxGLLRI1P4fW50dlyMemEneEOvQpq79/N29/4DePnB2/uh+Dl
      OP2Td9BUbcXngUvLa6rG7//HC1Qda6T6jsak6LAaNmt9gKH+bkbG3DTVlTEx78egM2CRZCJx
      GVtmAbGAF5NeQZ9RRH6S1oCArV8mteN3Z3B2jW+vYdDNYN+nj/LWN16i543z1N9/fac5Z+8E
      sVCE0v1Vm6DdZiNSWdNE5eKkdt6yy3PlLLdxx1N3z27Gzg7szKD4jaAz6ml+5BB9b7cz1Tl6
      3f13ftBLiuXQmw3U37fn1jMAgIKGEuru20PLL07gc147lciFoJfSG5jxIcXWUX649tY0AIC6
      e3eTV1vE6R+9TSy0/BDf2NkBbNkZq16sLcXOQtRJt64BQOJ5QNJLnP3Ze6jK5Z6nqqwweqaf
      iiN1W6TdRQK+eSadiXFr9+w0noUg0VAIhcTDcor1c0sbgM6o59AX7sEzMUfX71su+22qaww5
      Gqd4T8UWaXeRodFxxKCT8akpJj1xRof6mR+fxON3MzEzv9Xq7WhuaQMAsGWlc+jzdzP0QTfj
      5waXto+d6adoT8W6cs4niwu5QS94g04ND5OWnYdJryeOwtlzXVRWrH8dshQpAwAgp6qApo8f
      4PyvPsQzMUdwbgHXoHPLuz8XcoOmp6fjD6k07d/L7EA7/qiM/hJv0KRN5NyCrHkiLOybu2Zq
      xJ0wEbYS5144wezANI6yHELzAe7+80c2XYcLbKUznN/jYmzKRUVNHeEFL2lmEb9iJmsTFsre
      bFlrLjU04WTXMqkRk4YaRZXDoMXRVBk0GTQFTY0ByiXb4miaurhfHFBBldG0GKoSRxZA0+KJ
      NZe0WCKoZfG7psmgxQAScjUFNJXKxhjzQ2lMtYeoOzzCQvd7CblXIV5j+8XfTflPQOah5F2X
      TWRk0smupgY6uvox6kQmwmF27705fIGuZM0GoF8hNWIyCI8/DWoQQdCDoEMQdSBIIBgQBBEE
      /eK2xHZB0IOoB0QEQYcg2RBEECV9Yl8EEA2AgCDqAWFR7mLfXrwgVwIkbv+qQs9b3VR97DPo
      jMbEb+tgJ2eFEJeuh4LX7UKyOnZcwM1yJCpKbekdTV57F0iVI/T0DZKdX4KkxsnKzmRycoaC
      gjy8Xi9Wq3XJk1GSpDV/jsViSyn41ivnUq63z3K/K4qCwWDY0vMIhUJkZ68/sdZGcE6M4PYu
      kFdcTcQ/j80kEBHTk+oLFA87keffItGqJ1rhRIseA01NtNKLLXui1b/Y4l/J9QNiNBIVnz6x
      n6ADRARRd+s5w+0UHW76gJhYAC3cn2jFRQMIIrD4GQFE/WKLLSZa7Astvnh1T2Mj1/oqA4hG
      o8RisXUJU1UVcQPBzdtFxnbQYaNc7yYNhULrijmIx+Po9Rvv7l6aeGArZSW1BdguN07KAG4c
      yTqvZF6fjchKqgGkSLHT2NIqKhzwMTQ6gcZFHxfQGBsZIiaryLEwI2MrL4c675pmenYe0JgY
      HSYSV1DiEYYX5apyjIVAaN06xCMhBoZGUFaoJ66ng8s5ycS0a83XJ8WNZ0tbgNmZGaxiiFGP
      iqzpUcPzZJj12IsqGBsaAjVOVVkeUz6J2vJlPDLVKDPuMK7xYczpJjJyS5kYHkJEoaqiiHFX
      FJteIRCJUF+7/Kzu9XQozM/Bnm6ie9DF7qbqdelQlJuOa2QAR91+7FvnWZE0pidGmJ4P0VSe
      TfvgLIoSp8BhJRCR0SQTRH2oioyjpIGibBvBBQ/jUzP4wzEcZnFp+SWPcxhZ1qhrrKGrdxy9
      XuLA3pUz+bmcE7i9fhTBiBx0I8cVqhvq6e4ZRKfT01hTyqnWTu6549iKci7otKUtgEkH3RMB
      itKUJR8Xn6yRabMgSaDT6bFlFhAPXmMFGtGIHJpDtNkJRxWy063odCKSToc1PQc54qW4tAxp
      hRGy6+mQZjHS2jFATW3l8gJWoUM8EmTKG8Ik3hy9zYLicmwmPaqioAKhQIC4oiJIOhYW5lEU
      BXN6Jq7pMQCs6ZnYbSbS0tIJK9DUvJuAbwqD2c7u6jxaWwep2b0Xk/76sw05+UVIqkyG3Y5k
      NLO/sZS21nZKG/ZjMopY0uwU5V1/+PiCTltqAGdazpFmMSBac5d8XAozbLR1dCLqrehElY62
      Fuy5yzt8aVEf57vHkDSVPEc65zs6ESQjBhE628+RkVXMyGAv4+MTBCJXjx+vRofTZ86QlmYj
      HFq+G3VdHTJzcc15ybAa8Ed27uTYcpgzstnVUIfDkUFxSRnVFSWkWdOoqW8iK81AZnZi5SDP
      9Ch+zUJ9dfklyy/ZicsRZtwBqqrymZudQ5avPyrV39VBdmkNxXkOZFnBOeuloqoCj8uJsory
      F7igU+ohOMWamRwdIhCJk1dYjN89Q2ZeMSZJYXRihvKKckLeOXwRjeKCRDxxyO9lfGoGoyWN
      0oJsRiacVJSXElrwsBBRKcjNYnZ6AlN6NunWlRe1m5uZwu31Y8/KI90E8wGZovxs5pyT6GwO
      JDnI1Iwbky2DsqL8a8q5oFPKAFLc0tx8A9UpUqyBlAGkuKW56Q1gzjlFTAX3jJN4qrOX4gpu
      +sRYQmye3705SmBmlE/cd4SXXvuQRx++n9/8+jccuvdhCM4wPevn/vuSv5xSiuntdwwAACAA
      SURBVC1CU/jud3/IY/fv5+wE7Cm1IdmykeILuAIKlfl23AshTLbMm78FyCptxtP+Bo1H7+fF
      F39NSbaezjOnKa+p5/233+T9t95kz6GDW61mimQiSNx7sIJ//Mn73N2cyQu/e5/3Xn6B3o5W
      vv/tf6Czu4Pvv/B74BboAgHkZFdQUZFDRWkxfeMe5Mg85zr7UICswjKyb7KU5ymgYs8RGovz
      kDSV4YEeRLOF1q4+KouziMbhzvs+RmaaKTUMmuJmRWXG6SYvP4epsSGiGDEJMaKqiMNuR9OZ
      ybAaUgaQ4tbmlugCpUhxLVIGkOKWJmUAKW5pLjMAt3OCs2fP0tk7iHrZk4FCV1fP0reI38PZ
      s2cTr3PtV2XI6e3qQl7myaKtrXVlbeQAH5y8zj4pbgk8LiexlVIvAWNj4xs+zmUG8NFrv2U+
      BnMTA/z3//efCC/exa6BFl745UsMu8MAOPtaaOl1Lisw5pvgt796gZPdU1f91t7etrI2OhtH
      j9ycCZi2FxH+w1/+BU8//TT/8Pd/T8/o7NIvP3/+WZ7/xUtL3//Hf/lPHD9+nOPHj3OytW9p
      +zPf+L/5ya/eSEhzdvHCG2fXpcn3v/N3/PKVD6/a3vLua8yvLzfDmrhiJlhi174D5JugocTO
      qyfa+OTde/jg3DB/89df4jdvvE/FJx8EoLKuiQMHyq8S+OH7p/jCX/0Nr//mdxxr/EOU6AL/
      /J1n0VvSGHa6Afin//ZfScstZnxigtLycsI+FxX7HuQTd9bxox/+li988RH+j7/5T5Q3NjLt
      dPHv/+P/Tlpy8m6lWKRu72185atfRFNifOvpf6H+z58COYhmLkAX8aIAEuAorOIrT33lqvIW
      Rymm0Biz/hjpi9s0JcbPfvQ8nmCEhoN3cfehZn7x4++yEFbxByJ84atfI9t68Y+MesewV91N
      wDUI3A7Ah2/8lvMDE0z199P0yBf5/csv4nZ7mHV7KS0vxz3rpKBmH4/ce4Tenl5KS0t46Rc/
      Zn4hjNcf4IkvfJXibOuqr8M1nwFyi0vwueZAixNDjzUtj5j/Yq3/2ks/4/jx43z3J7+8rNxM
      UCYvzYpeDRNV4cxbr/HgF77GU0/9Gc1ViVUWs4urefIrX+GBg5Xc+/if8Od//ZfMjwxcJqdh
      3zG++tWvct++YtzBVZ9PijUiSAbS0sxoQO+ZE9QfOsa+qmzO9idahfmpwaUWoLVv7LKyjz7+
      GL958WJrcf6dl6k8+ij/7ut/zvj5DwipMO+X+dMnv8pnHthDa8/l8d0fnjjNbccOUpSuZ8IX
      I+Iept9r4Otf+xr33J7oCcy4PHz681/ii39wDCWtlK8+9e/wTCTuldmZGQBc837+6E+f5M8+
      8wAnW3tYC9f0Beo6d47y2l1Mdp2ka2ic48ePMzs+Qu9MACPw4GOf5f4rWoDw3CDtnf14jx8n
      7Jnig7ZRdHEZo/EmCIS9iYlFIgjAe6dbUYwjCHKEsNHH4ZrPXrMFANBbs6lIj9M37QMMuFwB
      9hxLBMHk260EZDDbrIjCYrpF4I2Xfs7gdIQvPfVFzrW10jfpJhbyMKGc4KF6EyVVV8Ru6/QY
      dSJhUcRsSgTLXBk4aTTb0IsCirj2BI5XGECcH3/3OFZRxZhZwJ98rpRf/Ogd/uPf/jUmEeL+
      aX788jvcXW3itZd+xuBZO+jSePLJz6MD3n/vFH/xt/+BfJse1AjP/csL/NGn7+Mb3/6fZOXm
      MjR5jdjeFJvOnHOCM2dO09vRQmXT7WgxH6acWv74f3kcgO8/913iGoQXBzwA8orKKc7PukzO
      PQ8/zv/3//wXim//LIfuOMQPvvs9juyuom02wv3L1Hv3P/YZ7gdCrgFK936CJz6R6Po899xz
      ZJc/wal/eg5L9Bgfnumgaf3JuVdNaib4lkSl/dw5YqpAeXUdWRlW4qEFFuI6sjIsAHhc05js
      +UwPdeEJRIDLDWBmxkleXiLkcHZyFMHiICczjYX5WYbGZ2na1YReFHDOzJCfl0cs6COoGslM
      S9TiAe8cmOzYTIk6eGZqmuzCAqJ+D31DkxTmZ2PPyWfelSgvR/z4oiJZGVZmnDPk5edd9a7G
      griDKjmZq0/dmDKAFLc0qYmwFLc0KQNIcUuz9BAsyzLhcHhDwpKRVvz6ud63d/lkyEjGdZQk
      CYvFsuxv680MfTNy060PsNXlkyFju64NAMnVLVnrhG1ETqoLdCVaYpHsFLcGN31Q/FrQVI33
      vvMyCzPexCIlkoSkl5B0EoIkIul1iLrEu6STEJe2LX42SPhCMUzZGRx+IDk+TS7nOIqURn6O
      nYBnjvmIQqZJvOYqjrciIx/1YsvOIL++eM1lUwZwCe6RGRZmvJTsrcSUbkGRFVRZQYkvvssK
      SlxGVVSUuEwsrDA3HyAaiZNm0qMXQI4rpOfaIUkGYEmzMTXpJT8ng7HpWVRNwadxy6zieD2G
      T/bS+buzmNLM5Pxvn0bSr22lmJQBXMJYyyCiTmLXY4fRm67tvhGNyXzYOcH7bWPo7Jncf6CC
      A7UFSFKiR7nRFSI1TVta9sdqtQI+hjpbCMRNeNxzFOfn3pSrOK6Vmb5J2n97msZP7Gfg3S6G
      P+qh+s6mNclIGcAiSlxhunuM7Or8ZW9+VdXoHXfz1rlhxmZ83N5UzF89cRi7LfndDkEQFte8
      UhnqH2DOHWDP/gNUGiWGh82Y9SKdHe3kF1cTSc/AZhJwuv3kZ23PB+cbgW96njP/+i7Vxxqp
      uK0eQRPof7eD8sO16Iyrdx1OGcAis/2TyJE4pfurLts+vxDmrXPDnOmdpiwvg48dqqKqyLFJ
      WolU1jRSWXNxS0VFYp2C/AvdXfvyQ503MxF/mJPPv0VeTREND+5DURUqbqtn8ESiFai5e+VF
      Ni5lRQPwzs0w4/agN6dD1Ic/GKWuuZn+jg5Ek5V8qxlLSRET/YPU1CyzesoOYrJtBIPFSG5N
      EbG4wuneKd48O4wkCty5u5T/68l70OuSs6rhdkFTFUZHhsnIKcRu0TM8NkV5eRnRoHcx7Xgm
      oZCMoMbRW63oNjg/kgzkmMzJH76JKc3MvieOIYgCqCDpJWrv2033789RfqRuxS7spaxoAPZM
      O5MzLiRVJRJT2VVTwLmzZ7FX7CLmGiYcUug5fYrGhr2oqoqqqhvu/25UxnrKyzEZZ+8EYUc6
      //xSC2MzPg7WFfDUY/vISr+QNEtbtdxknMNmIMei5BWX093RhlEnUVFVQVfvIPHIAnlpemb8
      EgtTQYJhD3uvs3TRZqCpGi0/f59YKMpdX3/4qgfesv3V9L/dweCJLurv37sqmSsagCYaqK2u
      orN3EJ0I8VgMc1oacjSamO1Eoqg4H9+Cn0xbNqIobvkk0mrKx+IK/RNuesbm6BufR5xyUR+T
      KdhVzsG6QioKNtbF2eg5bNbyqnqThamBbuIYMEgCFms6yOPo9XoKch10eQJMdJ6n/o570DQN
      VVVRFGXDldwF1lpRdL3Swtywk6NfeQjJqFsqe6mcmnua6Xq1hbIjtSu2ApoGs57gygbgck7i
      WQhSUFiMEA8wOBuhobGRkYEeRHsW6SYDxuws5iYn2c4upaFInN7xOXrG3PSMzqGoKnUlWdSV
      ZvPgwSo6fvYuAUHl6J2NqNrm1L7bgaBvnrAiImhRbAYjnZ3tWDNy8M9N0NI9Tu3eBgxNB1mY
      7CPm2I9RJyFJUlJmb2FtFcXwyV5GTvVx+5/cj/2KCupSOWX7qxl8r4uRD3tpeHDf0j4LwShd
      oy76xtwMTXuIyyo59iQvkbQdXCHicRlvMErH0CzdY3OMzy5gNuioLc2ioTSb2pIszJeMEkQD
      YV79u19QdayRpo8fSLlCXIetcIWY6Zvk5PNvsefx2yg7cPWz5pVy+j7soe/3Lah37aZz0ksg
      HMNmNtBYnk1tSTaVBXaMhsT+O34UyBuIMDA5T8/oHMPTXnzBCMU56dSXZvPwkRpKctOXxueX
      Y6pjDE3VKN5TsYlap1gtlw53LnfzLwSjDEy6GXH66B93M7cQJtNqZL/FiDA+y188cYx0q/Ga
      8neUASwEowxOzdM/Mc/wlAdvMIrdZqS6yMGuylz+4FgdFuPamuixlgFs2elkbLDff6MYGewk
      FLdSVpix7Fq78aAPoyRjya0g+yZzhbh0uLP2/j2MOr2MzfgYcXoZnvYSjsnYbUaKc9KpLMzk
      zt2l5NgTGSEm2oY598IJDNcZUNi2BhAIxxicnGdgcp6BiXm8wSjpFiNVRZlUFzn4+OHqZS17
      LQ9VAfcC3kk39fdvLzeCS2eCy6tq6O+bSqxru+ADnYlwNEBz8246OjsJ+9zo03IpvYlu/oVg
      lAmnF9erZxj1hHjDGuHX33+Xwuw0SvMyOFhfxB/e07jUlV2uK1W8u4K+t9rpfbOVPY/fds1j
      bSsDUBSVb794lqk5PyaDjuoiB9XFDu7dV4EjPfk5/CfbRkCAkismv7aaizPBF7m41m4uHW2t
      i2vt2rBnGZCjAYJRBatxZ81TqKrGqNPL+OwCw9Mehqe9ROMKNpMex+AklTYDn/6bx8l0pCGu
      I+NDw4N7Of3Td6m5uxmL3bbsPtvKACRJ5I8faMaRsfrERhthqn2EzOLsa16crUdlqH8YVQPF
      kI26MMfIuExjYwMjE07qa8oIh0JYzEb8wSgYd86ssMsb5B9//hFFOemU59s5UFe4VKt3vHya
      sVG47Uv3kZadfn1h16CgsZSMgkx632pj36eOLrvPtjIAYMUHlmTimZxjYcZL88PbeXkkkcqa
      i3lysrMupiSpLC8FWIr6SrPtnJsfIMdu5b9++e6rui7DJ3sZ+qiX2//kftJy7Rs+Tv39ezn5
      /FvU3NWMLetqY7plA2ImW4cRRIHCXeVbrUqKRS54d+55/DZyqgqSIjOvtgh7URZ9b7Uv+/st
      aQCaqjHZPkpuTSHm9J1Vc96sXG+4cyM0PLCXidYhQp7AVb/dkgYwPzZLZCFE0e7U2P924Erv
      zmSTU1WAoyyXmd7Jq35b0QA0VWZocIBwTCYSXGBiOpEw1T07jWchSDQUQiExO7iTGD83hKgT
      1xVClyK5LOvdeQOov28PfW+3XRXvvbI7tMdDUWkZXR2dCGgUOUyMTcbxBhTUcD95Ziv6Qgeu
      mQAN23TqfjkmO0bIqy1etcvszYoSCzMwNIrenEa+3cTwhJOyqjoC7inmg3EaakuYn4uiykEy
      8/KS7w6tsaJ3ZzLJrszHaDMzfLKXqmONS9tXdoe2Z9DW2kpJZQPOyRFy8rM5eaqb3MbDRJ1+
      4ii0nevinmN37Bh36FgoihyJU7SnfNn9tss5XOBCUHyew0JPbz+ZOUVYdfGkBMVrgkRNXR2t
      584T9OsTccadvWgoVGZbGHZ5iU57UQwSOfnJr5k7XznD3LCTO5/6OEbrjZ/IK95TQd87HZQd
      rFmKGlvRANpbTiNas4hFwxCPcK59kNq9e+nrakfU68nQGTh67DAdbe3s37d7R7hDT/QMoTcb
      KKgvQVwmwGU7OMNd6g59ISg+ODdBWW0TQz2duNCSEhSvk0TOnTlDWX0zU2NDi3HGGqIgYjQa
      iIVkpsbHKdvVlHR36Mn2EUZPD3Dbl+7D7LBtSgxI6aFqBt7vZOCDrqXY4RX/pd2Hji19LszL
      Xvp85MjlY+cH9u1ek8JbyWT7CIXNZcve/NuF5YLiY6qAQRIAAVEQkhIU75sZQzbY8LjnyM1M
      o7OzndzCcvyucTpGPTTtrsGm7kWOuokpeUl1h7ZlpnHwc3eSW124YVmrrnB0Omrv3kXvW21U
      3d6A3mTYfhNhNxLP5BxzQ06aHzmUdNmqphGOx/CGw9gMBjI2cJNcHhQ/RDAUpbaulv7uTnLy
      i7DqZDo7u6mqrSfk85Ju1TM77yfXsbbnsIyCSg5dMtyeu3gv5jou9pGLS8zA5WsCJIOs8ryk
      BdashfLDtQy838XQB93U3bfn1jKAifOJya+M/Mw1lVNUlUAsiiccJhCN4o2E8UbC+KNR/NEI
      iqohigJmvZ5Mk5nd+YVkmJMxvyBSWVO/9K2h8WLKjyZ7okU2Zyduztzku0rdlIg6ib2fup2P
      fvAGRXsqbh0D0FSNqY7E5BdAXFGIyHGCsRiBWIxIPE4gFiUQjRKMx/FFw4RiiWUKJVEkzWDE
      bjaTZjRiN5kpz3SQbjRhMxoTXZJL2IqaLcXqya0pxFGaQ99b7TvfABRVJaYohOIxorJMIBoh
      piRq7FA8TigeIxiLoc34MS+EcFbbaD31ATpRxKzTYzEYsBmMmPU6rAYjmSYz6WYzGUYTFsOt
      PUx6M1N73x4+/N5r288ARr0ewrJMWI4TlWWCsRgRWSYix5feL0UAjDo9Fr0ek06HUdJhNRqw
      Gow4LBaseiNmg57BvhZm9BJ/9Mh9K47/JytjcYobz1LlF40SVRVC8ThROb5Y8cUJx2OE4/HE
      S44jXzK8LAoC+Xlp28sAVE1jYsGHThIx6fRkms0UZdgxShJmvR6TTo9Zv3LWr+VuYFVWmO0e
      J7em6Jaf/NouqJqGJxJG0TTCskx0sYKLynKioovHiSmLnxcrPvWK8HVREDBIOgySiEVvxGLQ
      Y168R3KtNsz6xGfL4r2jvyLGYj53dnsZgCgIHCstT3oNPNO3mPUtyU5WKdaPJxzizcF+jPrE
      TWvU6TDqdJh0OtKNJkx6PUZJWtyWaN2la6SLWW+r7SjL3V5ZIVRN5WfnfkRMiV31W3yZbQCy
      KnPpKWiaigYo6sUH0cLOHJSpOGP3zCBcchEV9epaJSbHNrxCzCcaHuNg6ZF1l09lhdg8Odus
      BRA5Vn4XClcHMhuk5bs+kqhbWoQZQFEUdDodOjFxanI0zgdvvEr5vnoeufPzl5XVibqrbnZR
      S85sdlKIBfjwfB9oKtUlOUzOB5AkAyYR8nPScPo1asqS4ze/2UTiYVonz6Ghcq06WFblqyoo
      AA0VWbl4jVVVXZo9jyvxq/ZXNAVVu9wJTlEVVE3dXgYAUJBelFRXiNHOfjRZo3RPFVbD9UMt
      t8MQ5tJMsM6AFguj6QzMePzsbW6mo7OTaDRKe7+Po0e2czTbysiqzFzAhUFvQLjGPLZO0iEs
      47AsCRJGw8XIQUVVl7pHeunqZzxRFJEE6YptEpIgrWwAAd88Le293HXH7bSfO4Msy5TVNdLX
      1Yuo11Nis2KrLmWwc5C9uxtXErVlTHWMYrZbySrP22pVVs2FmeCYd5q0gmp0C5NIBh1zC0EU
      RcNiTqPSITIx46E4b22TetsFmzGNj9U/sr27QLYMBwW5iZlGwWBmX2MeJ0+1ktd4mKhzgDgK
      H5w4xb3b1Bs0ForiGpym4vZ6VE1Fla+f9nC7nAOAwV5MXngCLaOCvGw7E6Mj1DU0oMajWCyW
      DcdhqPEIrS3nqNp/O5HZUVzeBbLzy/DPTRAIx2naXcvMZIh4dJ6SquptkR062azabJS4jGvG
      TWFVFZ65WTRZJkNn4OC+Rnr7h9lVX7ntvEHHuwbRVI3SfVWrlrndvEFzCy4G7RSXLUaw6RcD
      4Tf4MCrqTZTmZRHXYNYboLlpFx0dnSBoNJc5GJj2MNXeTdnuZiQSz1dbmRz3RshZ8V/yzbtQ
      NY3xqRnqaiqYW4hQUpCLZXYa0VSNRSegs1gwFBm2ZXLcsZYBrFlp2zbr27ZC00BTABE0hWg0
      jtFoJL+omODCAkJxHpK0dclxb5ScFUtlOHLIcOQsfS+2JtJKZOVePvKwHYfsLmR9q7tv57hq
      bzbxSACnLwTxESpLCuns6qG8po7g3BRjC3Hqa+3MY0aT/URlDaPuFu4C7TSm2kdBgNL9qcmv
      a6E32Wjac3EhiaaMREtpKyrlwpBBVrYB2H4VXLK4abNCTLYNJ7K+ZW7XrG8ptgM3pQH4pudZ
      mPFSlEp6leI63JQGMH5+CARuiqxvU2PDDAyPocYjdHV1Muv24Z5zg6YwvZimJsX6ufkMQEtk
      fc6uzN/xWd+0qJfhKQ9Wq5X+/n6q6hqZnR5n3j3PQE8XNkfyQxVvNW46A5gfdxFZCO3oh98L
      rhBqNIQxI5fA9CheWUQvCSAIRMN+5rxhzIbtG9i/U1i7AWgy7efP09nTj3t8gjAa/f0DN0C1
      9eHsHN/xWd8uuEJI6QVYFTchwciu8jzaOzqxpjuwZ+Vy+GAzw0NjW63qjmfNw6DhuVEshbVX
      rROcDOaGnLS9dBJNTUyrCaKIIF0cexYEAfHS9b6u/A54J903UdY3gYbmi/l+9jRnX/ZrTVXp
      Zit007FmA5AMRuSF5dYJ3nhef73ZgDU7nUunlVVFTcxSXvL9Mv9/VUNb9J3R1BjpuSYqby9D
      jXsBFU2NJ2Y4NQVt8R0tftlnNA1Nk0FTUJQoiiiAKifKa/LiLKmMpqmgJbYnvmuXl1/crrff
      AfbkJ3ndLFpbTiPHFWr3NuIcCRIJO2nYs/fW9gW6gCGjGIPrxqwTnJ5vp/HIGVAWlm7I66PB
      ojutIBrQEBHkDkKjOkAEUY8gSIuJpBLvgqhPvAsSCIv7CToEQURDQtNEBMGwuK8JEBDExH6C
      oANBAEG/uD3xjqADIfG7Ju1MD80LSEYzu2scdM34mOg8T8Od996UNz+scya4orr+su+FRUVJ
      UUYQRMylX0eSdBdv3DWyGSvNr0bGTkaWFZyzXnJyCzA07cM11k9Jzr51ZZ9bDZoaA+1Ca7vY
      8qpxUOOAlvgdJbGPGrukRb+k1Ra4uA11sQXX0BZbaLTYsi32UkikLMuEw+ENncilkTlbJWOr
      yydLxkaRJGlp+aS1Eg54mQ/IFOVnEgrJSMTBYMWoE5IWEqlEpggM/QOCICCIBhKtqH6ppU1U
      gIlWFcGAIIiLLbKBCy15otWWUBGRFlt1lmmpBQRYPEaixSbRggticmOCt8PNs9XlkyXjRhIK
      hVCU1XQvly+7XsO6kgv5T7dSTlINIMXNT7Ju2mTK2oicLa2mwgEfQ6MTaFxcdQY0xkaGiMkq
      cizMyNjVy9pcQJVjDA4MEpNVwgEvk845AOack3gDie6cz+tdQQONidEhfIEwqhxjaGQMDQgu
      eJiedQMwMzXOnGfhmhLmXdNMz84vyhomEldQ4hGGF8/L5ZxkYtq1puuynUlmy5YsWRuRs6Ut
      wOzMDFYxxKhHRdb0qOF5Msx67EUVjA0NgRqnqiyPKZ9E7TIxvW7XLOl2Ox1dvaDJ5KXpUU0Z
      +CI64v4ZaqvKOd/dz9HDy2eDDi54UPUW+ru70EsCVVVljEx5iYZ8OEwi5rxydKLE6FAv+/bt
      v1qAGmXGHcY1Pow53URGbikTw0OIKFRVFDHuilKUm45rZABH3X7sN8PUxE3GlrYAJh10TwQo
      SlNIy87DpNfjkzUybRYkCXQ6PbbMAuLBuWXL2zNstLe2UlFdi16vpyDXwfDQCJm5+ej0Oixp
      dnIyr73QsjXdzuRgDzmFJQg6HRZbJmrch0FvJj87DV9UwjczSnpW/vICRCNyaA7RZiccVchO
      t6LTiUg6Hdb0HOSIl3gkyJQ3hEm8eXqazvEBXN4Q0aCPrq4uXB4/czOTdHZ2EVU0Rgf76Bsc
      uVhAUxjs66Wnf+gypz6fe5bOzi4issrk2NDlZa5BLBygp6eH0Uknfo+Lzs4uQjGFqfERevqH
      QNMY6WvHv3waqcvwume21gDOtJwjzWJAtOYyO9COPypTmGGjraMTUW9FJ6p0tLVgz11+xrPl
      9BlMtnSi4TBqLEJL9zh79u5mrLuFSEzD751jfHyC0UnnsuWn+tpxR0WUeAyzTqSzo400exHx
      iI/2wVkczNI/7UeVr841A6BFfZzvHkPSVPIc6Zzv6ESQjBhE6Gw/R0ZmLq45LxlWA/7Izh4a
      vYhKms2ExxtmYGSchsZGpseHmXF5aawrp6+zhUDcjFX14w4vJiHQNEoqa5ADProuceobn56h
      sb6Kgb5uPL446QRxhVZOXCBIRurq6nDPOhmZdNLUWMtQfy/zviB5pjiTnhBmg0hgFQZgSXOk
      HoJTrIOYm74pKMkSGZl04V3wU1mcy0IoTDCskG4S8M5OU7T3bvKsiTq2p/0caXll+FzT1Dc1
      0dWZWHixqamRjs5zCNgpTI8RyqihKP3a8zCqHOHsuXbqm/cwNtS/WL4NASPl2TpmpGJy46P4
      0+oouE4s1MJWtwApdiBqnP6Bcdyz48RUARGFktIyJEkkFo5SVVODJIoYHEVLN78W9TG7IBPw
      eCgruejUl5lmobO9ncLSZv7/9s7st60rv+Mf7qvEfRUlat8lJ1Zix0tsx44deJI0KAYtOmgG
      RfvYf6BA0Yc89LUFCkyBrjMDFA3aaZNmkkkc25EVW5Zsy5Zsa6XERRKthfsukRQp3j4oVSaN
      7YGd2ElkfoALHJ674Nxz78G5vy9/5/eTijZZTgo4HvLyA4SDy8i1tcRjMUw6DTPTU9jr2pBL
      tvGGCrhqKiyuxVlbDtwnvuBXube6Vp0BqjzbVGeAKs80e3sACNusr4WBCqFQdflgla+zZ8Oi
      ACCSMHTxY3ra3ZTM3cxOvIfc1omqsI5nvcibx/u4PbtEfVs/zU79d93aKt8Be3sGAF4/fZj3
      rizQXZvilj/LyOefIZKp2VqfYs5/j0BSoKn68u85luYmSWyWmZ28S+khVu7engEAnbORDqcV
      Za0NcT6Kxd3B9eEhsrkcXQK0t3c8MTffKt8dTpeNX/36fSQSBeJyjosjtzl75lWGLn9OU89B
      hJSf9LauqgJV2bu8+/d/y5G3/5zP//sX9HR1UMxmKdc4WAz4YSvPT//0z/b+J1CVZ5emtj5M
      OiUv9Pdwa8qHQiVjZnoGrc5Ic2srElHVHbrKM84DbYBQOIxBoyBbliKU8uhr1Mx4fHR09xD0
      L1BjNKOVwXI4TW9nE3OzXvRGIzKpGIvFQmEjjccXpLu3B7mwRShdRCveIleRU8pEqIhVmIwa
      BFkNhWwS8XYFnc2Cd3oKS30L+eQ6gkJHg9P6NPujyjNGdQao8kzzUBXIn42zzQAACthJREFU
      M3h3t2xusmFuvr9bcCKdwKirJqF4XN67+x+75S5bL9323kc6v9r/j4/knXfeeedBO0f+9QLx
      xTDxxTBqg3Z3APzyX/4GQWPHbtIxNXmHCc8UOpWWwHKQjUwSpHKCS15EIjHBpQBSpZrFgBeV
      Qsb07DyVSopfvPshbpeNdDrN1lYRz5wHrU7HP//8Z+h0FuLRNQDUag3xWIRoOESxXEGrUVPM
      5yiUKmTTCfKFAgGvF02tHt+ijw//698RybXIxQK+xSA2q+VBt/e94a8v/BVz4WnmwtNYtFa6
      7b2Mj13Ccy/EyOgILQ0u5hb82KwmPB4PuXwBsVBGplART8SZmLmF02xjcnIanb6Wf/jZ32Gy
      u1gPraOv1XJ3agarzcZywEsoGsdirsYU/T8eWQXa2kzS0H6Q1cAMl4cuYq9vRKGQMnTlKoVM
      mIygYOzaJdaW/Vy/ehmj1cG1kUEWA34Grwwil8kwmEw0NreQi60zOHoLmVRMvpDn4wuf0NDo
      pqOtlbVlPxPj11lfW2Rs/CazgSDDI5cBiK0G8N8LcX10iCsjV3C46hm6NEhgOYjFauf5/l4G
      B88jlfzwRS6JRMy5wYs4zBo+G77CnVkfnqkxxieuUaxUGB67CkBhc5N8PseFi4M0uhtobXIT
      WApy/tPf0Njo4vzFc1wZvsLa4hyFyu9OFvis8MhvyI2xW6hVCmKxOMVSGYlIoFjYolZvQK1S
      YzSZkMl2vqxEUhlWswm5bGfB8qEXjxAJzrO8lqC8lae8vc3Bg0e5dX2Y+sYmpEoJ2+UKpS/i
      6hw68CL/+Mt3eWmgn4DXi1KhIRYJURFBIb9JPJlGptRgMhoRsxPlQC6TkN3Mc/TYKSbHR0nm
      i99WXz11+vcP8JMf/+FX6tQaDZWKgEQsJp1Okf1i7fPw6AjNre3IKLMt/L+kcV9YeRaLFbVS
      dt/k088qj2wExxIxzEYzmVQcuVrL3Mwsde56xIIYpVyCVKkhn0uDIFARwGQyk0zGdx6aCJZW
      Quzr68Hn9VCjM1CrMyEVlZj1+HC561CIRKxHk1iMOgxGMysrQVyuBhYDXioiOTqNAp3Zwuzk
      XYxmC2r1zgCIx2MgElOrUTG7EMBh0RNLbdDd2f6k+u6Jks0kUWp1yMRiNrIpfEur9PU0808/
      /0/efP0sNlMtkzPzOOvrkMskKCVS/MsruBxWECokswVqa7TUalVMz86zb98+Usk4UokIrc6I
      ZI9GentUqirQDwhB2CaRymIyVH2Xvi0eOgCmAl+6EFsNGmwGzVNp1LNGKTO5WxYrbEgUP5ys
      9j90HjoA3vrLL+W5PzrVy09O9bKRTTI0fA2tWsP+3mYuj01TKZd4/Y03ELPBex8OIRNt86M3
      fg/5Q4IVlYobfHLhM+xOFwcHBr62P5tJIJHXcHNslOPHjn/D2/x+kxg7u1tW1f0xqrq3mZ+b
      IJIpkcukOXv6zO7+j86d582zr7HqmyS2XYvDoMRq/VKeLuYifDJ0k0a3m+f7H01O/ejceQ68
      8BzirRyJgpSOFvc3v7nvOY/sDTp06RLHT51mYd7H9lYep8uNSw8T0x4GeuwYbHZIr/HB//wK
      p81JYqNApZhGKFdocNUxeP0Of/LTt/HfGeHwK2ewaFUseGbwLczS/nwfn54fRaeUsq+7FUFr
      Y3x8nK6eLuZnPMSSUX7/rR8/iX743pHLpuh67gif/eYDhs7/mpde2s/w7Bq+hTn+LbbG4QM7
      ORlmbt/gRqlMjc7GiZePUtkuksnmkEjE3Bi9xHo8RavLzq2ZJaRSEW6nkXyxgt7i4urQRUxG
      A8cODeBZDhOLJ7l55y6uGgmzwTQrvjscevUNPr3wEamVFVxtfWRj9yhvizj71h9QuwdyMDyy
      CqRRKShui8iEAhS/kNNSyTRa7c4S/IB3geau/Vhq1Bx9+Tji7SLJdBKno47SVp7XXnsDm9GA
      RqMmndmJuDYzP4dKLiURi9PZ04vTaqAsCOhNVtwNbijkiKSy5DYeHKFtLzJ5+zanTpz5Sl1r
      exfNDQ5yhS9DtYhlUk68fPS3jumgv6ebjvZO5uZ91FnN9PU/h75GQzgcxmS0opKKaOvsocFu
      xB9Y4tTJk5iNO7aF1WKlvbMTteKLQLII2J0NnDlxnGQ8jtNRR36z8MTv/2nwyDZApVLi8uVh
      EIk5uL+XsduzKFQqDh14kUolz9Jqgub6OobOvY+sxkx9Uwf5dJhILEmTux6ZxojdrEcQBEau
      Xkaq0qKWikglEzR3uPnw3CgH9u+j3m5GobMyf3eMugY33nkvIrmME0ePPZWOeZrczwZYW11E
      b29ALZEwNztJNBKhrqWTRc8sWr2B7pYGNisK8qkQ5UqFtUgSu16Do8nNrZuTGIwmFDJw1znw
      zk0z6Q/R39eLw6hhPhCk3t3MVrGAXFTGZndwY+wWMrUOq8VAa6OLy1eu0tbWyoI3gEqnw6zV
      0NbeweSdcZLpLC8cPIxmD8wAT0wFWvR5vpZH4Hfx2wOoyrdHMRsnvlnBafv+/yv+tKnKoFWe
      aR5qA/zFpx/tbhd98wCsrQaY8/kIrweJpTcfeO76ip9LIze+Vj8+ce2xGhqJ3D+8IUA4Gv5a
      XaWSZXxm7r7HL8xP75YFoUQ4mtj9vRFfYd6//FhtvB+R6IPbXeW755FVoPXVJabX4jzX4ECm
      F3FteBCpQsnZ06fJ55IMXrmGUq0in16ltn5HhouGVpj3+tEardy9fZPVlTAHDh5gfGISjUaF
      VCri+Z4OphaWiUai6A0GXj58GN/cHVajaTq7+1lb8pNMxhm9fpMX9vexHorS2tlPc72TwHKQ
      dGyVxXAGpVxOrRyy+SxFqZ7RG2MIxRw2i5HVaJq6+nouXPgUTa2aj88NcurkKaLxHOsrAe6t
      rHF0oJPcxo4bwcTNEVK5EharnkgohsVRRyAwhVASYTCZ0WgNrC7NIpVrOHL0GFNT0yCRUMnF
      2BbJaOzcRyq6jH/BQzKdo6u7i7l5Px3tHbQ07X2J8YfAY3mLHX5xgJGxWwR9Htzt+xAXMpQF
      gXnPFPsOHSOTyeJ0OOnp7QYgGosikipY9c/hbmxmoLuZDz54n5deOUlqM0O5sMFnIzfYLmUR
      q2pIJHaMb22Njlwuy8ZmnlQyhkompqvvObyeaUxGM8sBLwDxZJJsNsXA4cNk0llWommOHH4R
      ESLiiSTxWHT3WmKJkiZ3PXarHkdDG00NDhKpFJFwiFw6QrL0pboSjCQ5+coJVkL3OHXqVQJB
      H2q9DrtBw4Ejx4iuB6nR1XKwr42b4xNslcssBwIIgsCJkwdZXFkhlYzjWfRjqFESisXYKuQp
      FL9ZKqoq3x4PdYcGaDaadjejSk0uk8JW30Z0OUDvwCG8MxOIlBrk23kM9gZu37iGRqvFajRQ
      a7LhmbpDuVSiUCyhUinJZdOEEjnOnDnNjZFRajVaDh0Y4M6Uh1eOHmVpcQm7w0kksoZaqWRz
      s4BMpUZGhcmZWcxGM1ablUx2kwZ3C8tLXmQKJXqthlqTjVwqhUYGy/dWqdGbycXWiMZStDQ3
      7V5rI5tCqdYilqlwWo0kkhvkcwlKpTItra0IKAgGA+jVMjwLAew2K9NT07hcjcjkYrQKFSab
      k0wiQSAwT3JDoKuzhUgsiUQixW42Ya9zksoWUcrEGLS1lAQpLqeTra0tBDHUOZxP6RFXeRhV
      I/gbMj5xjYH9h77rZlR5TP4XiSed80A/yTcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Unit Grouping Dashboard' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
